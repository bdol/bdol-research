!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$(BIN)	./Makefile	/^$(BIN) :$/;"	t
$(BIN)	./make/Cblas.cpu.mk	/^$(BIN) :$/;"	t
$(BIN)	./make/cpu_only.mk	/^$(BIN) :$/;"	t
$(BIN)	./mshadow/example/Makefile	/^$(BIN) :$/;"	t
$(BIN)	./mshadow/example/exp-template/Makefile	/^$(BIN) :$/;"	t
$(BIN)	./mshadow/example/neuralnet/Makefile	/^$(BIN) :$/;"	t
$(BIN)	./tools/Makefile	/^$(BIN) :$/;"	t
$(CUBIN)	./Makefile	/^$(CUBIN) :$/;"	t
$(CUBIN)	./make/cpu_only.mk	/^$(CUBIN) :$/;"	t
$(CUBIN)	./mshadow/example/Makefile	/^$(CUBIN) :$/;"	t
$(CUBIN)	./mshadow/example/neuralnet/Makefile	/^$(CUBIN) :$/;"	t
$(CUBIN)	./tools/Makefile	/^$(CUBIN) :$/;"	t
$(CUOBJ)	./Makefile	/^$(CUOBJ) :$/;"	t
$(CUOBJ)	./make/cpu_only.mk	/^$(CUOBJ) :$/;"	t
$(CUOBJ)	./mshadow/example/Makefile	/^$(CUOBJ) :$/;"	t
$(CUOBJ)	./mshadow/example/neuralnet/Makefile	/^$(CUOBJ) :$/;"	t
$(CUOBJ)	./tools/Makefile	/^$(CUOBJ) :$/;"	t
$(OBJ)	./Makefile	/^$(OBJ) :$/;"	t
$(OBJ)	./make/Cblas.cpu.mk	/^$(OBJ) :$/;"	t
$(OBJ)	./make/cpu_only.mk	/^$(OBJ) :$/;"	t
$(OBJ)	./mshadow/example/Makefile	/^$(OBJ) :$/;"	t
$(OBJ)	./mshadow/example/neuralnet/Makefile	/^$(OBJ) :$/;"	t
$(OBJ)	./tools/Makefile	/^$(OBJ) :$/;"	t
.PHONY	./Makefile	/^.PHONY: clean all$/;"	t
.PHONY	./make/Cblas.cpu.mk	/^.PHONY: clean all$/;"	t
.PHONY	./make/cpu_only.mk	/^.PHONY: clean all$/;"	t
.PHONY	./mshadow/example/Makefile	/^.PHONY: clean all$/;"	t
.PHONY	./mshadow/example/exp-template/Makefile	/^.PHONY: clean all$/;"	t
.PHONY	./mshadow/example/neuralnet/Makefile	/^.PHONY: clean all$/;"	t
.PHONY	./tools/Makefile	/^.PHONY: clean all$/;"	t
ActivationLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        ActivationLayer( Node<xpu> &in, Node<xpu> &out )$/;"	f	class:cxxnet::ActivationLayer
ActivationLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^    class ActivationLayer : public ILayer{$/;"	c	namespace:cxxnet
AddEval	./cxxnet/utils/cxxnet_metric.h	/^            inline void AddEval( const mshadow::Tensor<cpu,2> &predscore, const float* labels ) {$/;"	f	struct:cxxnet::utils::MetricSet
AddEval	./cxxnet/utils/cxxnet_metric.h	/^            virtual void AddEval( const mshadow::Tensor<cpu,2> &predscore, const float* labels ) {$/;"	f	struct:cxxnet::utils::MetricBase
AddEval	./cxxnet/utils/cxxnet_metric.h	/^            virtual void AddEval( const mshadow::Tensor<cpu,2> &predscore, const float* labels ) {$/;"	f	struct:cxxnet::utils::MetricCorrSqr
AddMetric	./cxxnet/utils/cxxnet_metric.h	/^            void AddMetric( const char *name ){$/;"	f	struct:cxxnet::utils::MetricSet
AlignedFree	./mshadow/mshadow/tensor_sse-inl.hpp	/^        inline void AlignedFree( void *ptr ){$/;"	f	namespace:mshadow::sse2
AlignedMallocPitch	./mshadow/mshadow/tensor_sse-inl.hpp	/^        inline void* AlignedMallocPitch( size_t &pitch, size_t lspace, size_t num_line ){$/;"	f	namespace:mshadow::sse2
AllocByShape	./mshadow/mshadow/tensor_container.h	/^        inline void AllocByShape (const Shape<dimension>& shape){$/;"	f	class:mshadow::TensorContainer
AllocSpace	./cxxnet/io/cxxnet_data.h	/^        inline void AllocSpace( mshadow::Shape<4> shape, mshadow::index_t batch_size, bool pad = false ){$/;"	f	struct:cxxnet::DataBatch
AllocSpace	./mshadow/mshadow/tensor_cpu-inl.hpp	/^    inline void AllocSpace(Tensor<cpu,dim> &obj, bool pad ){$/;"	f	namespace:mshadow
AllocSpace	./mshadow/mshadow/tensor_gpu-inl.hpp	/^    inline void AllocSpace(Tensor<gpu,dim> &obj, bool pad){$/;"	f	namespace:mshadow
Assert	./cxxnet/utils/cxxnet_utils.h	/^        inline void Assert( bool exp ){$/;"	f	namespace:cxxnet::utils
Assert	./cxxnet/utils/cxxnet_utils.h	/^        inline void Assert( bool exp, const char *msg ){$/;"	f	namespace:cxxnet::utils
Assert	./mshadow/mshadow/tensor_base.h	/^        inline void Assert( bool exp ){$/;"	f	namespace:mshadow::utils
Assert	./mshadow/mshadow/tensor_base.h	/^        inline void Assert( bool exp, const char *msg ){$/;"	f	namespace:mshadow::utils
AutoSelectDevice	./mshadow/mshadow/tensor_gpu-inl.hpp	/^    inline int AutoSelectDevice(int device_count) {$/;"	f	namespace:mshadow
BIN	./Makefile	/^BIN = bin\/cxxnet$/;"	m
BIN	./make/Cblas.cpu.mk	/^BIN = cxxnet_learner.cpu$/;"	m
BIN	./make/cpu_only.mk	/^BIN = bin\/cxxnet$/;"	m
BIN	./mshadow/example/Makefile	/^BIN = basic defop$/;"	m
BIN	./mshadow/example/exp-template/Makefile	/^BIN = exp_lazy exp_template exp_template_op$/;"	m
BIN	./mshadow/example/neuralnet/Makefile	/^BIN =$/;"	m
BIN	./tools/Makefile	/^BIN = im2bin$/;"	m
BLASEngine	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct BLASEngine<cpu>{$/;"	s	namespace:mshadow::expr
BLASEngine	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct BLASEngine<gpu>{$/;"	s	namespace:mshadow::expr
Backprop	./cxxnet/core/cxxnet_layer-inl.hpp	/^        inline void Backprop(bool prop_grad, mshadow::Tensor<xpu,2> wmat){$/;"	f	class:cxxnet::FullConnectLayer
Backprop	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Backprop( bool prop_grad ) {$/;"	f	class:cxxnet::DropoutLayer
Backprop	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Backprop( bool prop_grad ){$/;"	f	class:cxxnet::ActivationLayer
Backprop	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Backprop( bool prop_grad ){$/;"	f	class:cxxnet::FlattenLayer
Backprop	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Backprop( bool prop_grad ){$/;"	f	struct:cxxnet::LayerPatch
Backprop	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Backprop(bool prop_grad) {$/;"	f	class:cxxnet::DropConnLayer
Backprop	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Backprop(bool prop_grad) {$/;"	f	class:cxxnet::LRNLayer
Backprop	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Backprop(bool prop_grad) {$/;"	f	class:cxxnet::PaddingLayer
Backprop	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Backprop(bool prop_grad) {$/;"	f	class:cxxnet::PoolingLayer
Backprop	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Backprop(bool prop_grad){$/;"	f	class:cxxnet::ConvolutionLayer
Backprop	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Backprop(bool prop_grad){$/;"	f	class:cxxnet::FullConnectLayer
Backprop	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Backprop(bool prop_grad){$/;"	f	class:cxxnet::SoftmaxLayer
Backprop	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^        virtual void Backprop( bool prop_grad ){$/;"	f	struct:cxxnet::PairTestLayer
Backprop	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline void Backprop( void ){$/;"	f	struct:cxxnet::NeuralNet
Backprop	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        virtual void Backprop( bool prop_grad ){$/;"	f	class:cxxnet::CaffeLayer
BatchAdaptIterator	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        BatchAdaptIterator( IIterator<DataInst> *base ):base_(base){$/;"	f	class:cxxnet::BatchAdaptIterator
BatchAdaptIterator	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^    class BatchAdaptIterator: public IIterator<DataBatch>{$/;"	c	namespace:cxxnet
BeforeFirst	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        virtual void BeforeFirst( void ) {$/;"	f	class:cxxnet::CIFARIterator
BeforeFirst	./cxxnet/io/cxxnet_iter_img-inl.hpp	/^        virtual void BeforeFirst( void ){$/;"	f	class:cxxnet::ImageIterator
BeforeFirst	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        virtual void BeforeFirst( void ) {$/;"	f	class:cxxnet::MNISTIterator
BeforeFirst	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^            inline void BeforeFirst(){$/;"	f	struct:cxxnet::ThreadBufferIterator::Factory
BeforeFirst	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        virtual void BeforeFirst( void ){$/;"	f	class:cxxnet::BatchAdaptIterator
BeforeFirst	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        virtual void BeforeFirst(){$/;"	f	class:cxxnet::ThreadBufferIterator
BeforeFirst	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^        virtual void BeforeFirst( void ) {$/;"	f	class:cxxnet::SpFeatIterator
BeforeFirst	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^            inline void BeforeFirst(){$/;"	f	struct:cxxnet::ThreadImagePageIterator::Factory
BeforeFirst	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        virtual void BeforeFirst( void ){$/;"	f	class:cxxnet::ThreadImagePageIterator
BeforeFirst	./cxxnet/utils/cxxnet_thread_buffer.h	/^            inline void BeforeFirst( void ){$/;"	f	class:cxxnet::utils::ThreadBuffer
BinaryAddExp	./mshadow/example/exp-template/exp_lazy.cpp	/^    BinaryAddExp(const Vec& lhs, const Vec& rhs):lhs(lhs),rhs(rhs){}$/;"	f	struct:BinaryAddExp
BinaryAddExp	./mshadow/example/exp-template/exp_lazy.cpp	/^struct BinaryAddExp{$/;"	s	file:
BinaryAddExp	./mshadow/example/exp-template/exp_template.cpp	/^    BinaryAddExp(const TLhs& lhs, const TRhs& rhs):lhs(lhs),rhs(rhs){}$/;"	f	struct:BinaryAddExp
BinaryAddExp	./mshadow/example/exp-template/exp_template.cpp	/^struct BinaryAddExp: public Exp< BinaryAddExp<TLhs,TRhs> >{$/;"	s	file:
BinaryMapExp	./mshadow/example/exp-template/exp_template_op.cpp	/^    BinaryMapExp(const TLhs& lhs, const TRhs& rhs):lhs(lhs),rhs(rhs){}$/;"	f	struct:BinaryMapExp
BinaryMapExp	./mshadow/example/exp-template/exp_template_op.cpp	/^struct BinaryMapExp: public Exp< BinaryMapExp<OP,TLhs,TRhs> >{$/;"	s	file:
BinaryMapExp	./mshadow/mshadow/tensor_expr.h	/^            BinaryMapExp( const TA &lhs, const TB &rhs )$/;"	f	struct:mshadow::expr::BinaryMapExp
BinaryMapExp	./mshadow/mshadow/tensor_expr.h	/^        struct BinaryMapExp: public Exp< BinaryMapExp<OP,TA,TB,etype>, etype >{$/;"	s	namespace:mshadow::expr
BinaryPage	./cxxnet/utils/cxxnet_io_utils.h	/^            BinaryPage( void )  {$/;"	f	class:cxxnet::utils::BinaryPage
BinaryPage	./cxxnet/utils/cxxnet_io_utils.h	/^        class BinaryPage {$/;"	c	namespace:cxxnet::utils
Broadcast1DExp	./mshadow/mshadow/tensor_expr_ext.h	/^            Broadcast1DExp( const Tensor<Device,1> &src, Shape<dimdst> shape ):src_(src){$/;"	f	struct:mshadow::expr::Broadcast1DExp
Broadcast1DExp	./mshadow/mshadow/tensor_expr_ext.h	/^        struct Broadcast1DExp: public MakeTensorExp< Broadcast1DExp<Device,dimdst,dimcast>,Tensor<Device,1>,dimdst>{$/;"	s	namespace:mshadow::expr
CC	./Makefile	/^export CC  = gcc$/;"	m
CC	./make/Cblas.cpu.mk	/^export CC  = gcc$/;"	m
CC	./make/cpu_only.mk	/^export CC  = gcc$/;"	m
CC	./mshadow/example/Makefile	/^export CC  = gcc$/;"	m
CC	./mshadow/example/exp-template/Makefile	/^export CC  = gcc$/;"	m
CC	./mshadow/example/neuralnet/Makefile	/^export CC  = gcc$/;"	m
CC	./tools/Makefile	/^export CC  = gcc$/;"	m
CFLAGS	./Makefile	/^export CFLAGS = -Wall -g -O3 -msse3 -Wno-unknown-pragmas -funroll-loops -I.\/mshadow\/ -I..\/..\/ -I\/projects\/grail\/local\/pkg\/intel\/mkl\/include -I\/usr\/local\/cuda-5.0\/include -I\/homes\/grail\/bdol\/h\/code\/include `pkg-config --cflags \/homes\/grail\/bdol\/h\/code\/lib\/pkgconfig\/opencv.pc`$/;"	m
CFLAGS	./make/Cblas.cpu.mk	/^export CFLAGS = -Wall -O3 -msse3 -Wno-unknown-pragmas -funroll-loops -I..\/mshadow$/;"	m
CFLAGS	./make/cpu_only.mk	/^export CFLAGS = -Wall -g -O3 -msse3 -Wno-unknown-pragmas -funroll-loops -I.\/mshadow\/ -DMSHADOW_USE_CUDA=0 -DMSHADOW_USE_SSE=1$/;"	m
CFLAGS	./mshadow/example/Makefile	/^export CFLAGS = -Wall -O3 -msse3 -Wno-unknown-pragmas -funroll-loops -I..\/$/;"	m
CFLAGS	./mshadow/example/exp-template/Makefile	/^export CFLAGS = -Wall -O3 $/;"	m
CFLAGS	./mshadow/example/neuralnet/Makefile	/^export CFLAGS = -Wall -O3 -msse3 -Wno-unknown-pragmas -funroll-loops -I..\/..\/$/;"	m
CFLAGS	./tools/Makefile	/^export CFLAGS = -Wall -O3 -msse3 -Wno-unknown-pragmas -funroll-loops -I..\/..\/mshadow\/ -I..$/;"	m
CIFARIterator	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        CIFARIterator( void ){$/;"	f	class:cxxnet::CIFARIterator
CIFARIterator	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^    class CIFARIterator: public IIterator<DataBatch> {$/;"	c	namespace:cxxnet
CUBIN	./Makefile	/^CUBIN =$/;"	m
CUBIN	./make/cpu_only.mk	/^CUBIN =$/;"	m
CUBIN	./mshadow/example/Makefile	/^CUBIN =$/;"	m
CUBIN	./mshadow/example/neuralnet/Makefile	/^CUBIN = nnet convnet$/;"	m
CUBIN	./tools/Makefile	/^CUBIN =$/;"	m
CUOBJ	./Makefile	/^CUOBJ = cxxnet_nnet_gpu.o$/;"	m
CUOBJ	./make/cpu_only.mk	/^CUOBJ =$/;"	m
CUOBJ	./mshadow/example/Makefile	/^CUOBJ =$/;"	m
CUOBJ	./mshadow/example/neuralnet/Makefile	/^CUOBJ =$/;"	m
CUOBJ	./tools/Makefile	/^CUOBJ =$/;"	m
CXX	./Makefile	/^export CXX = g++$/;"	m
CXX	./make/Cblas.cpu.mk	/^export CXX = g++$/;"	m
CXX	./make/cpu_only.mk	/^export CXX = g++$/;"	m
CXX	./mshadow/example/Makefile	/^export CXX = g++$/;"	m
CXX	./mshadow/example/exp-template/Makefile	/^export CXX = g++$/;"	m
CXX	./mshadow/example/neuralnet/Makefile	/^export CXX = g++$/;"	m
CXX	./tools/Makefile	/^export CXX = g++$/;"	m
CXXAvgNetTrainer	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        CXXAvgNetTrainer( void ){$/;"	f	class:cxxnet::CXXAvgNetTrainer
CXXAvgNetTrainer	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^    class CXXAvgNetTrainer: public CXXNetTrainer<xpu>{$/;"	c	namespace:cxxnet
CXXNET_ADAPT_CAFFE	./cxxnet/core/cxxnet_core.h	13;"	d
CXXNET_CAFEE_ADAPTER_INL_HPP	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	2;"	d
CXXNET_CIFAR_ITER_INL_HPP	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	2;"	d
CXXNET_CONFIG_H	./cxxnet/utils/cxxnet_config.h	2;"	d
CXXNET_CORE_H	./cxxnet/core/cxxnet_core.h	2;"	d
CXXNET_DATA_H	./cxxnet/io/cxxnet_data.h	2;"	d
CXXNET_GLOBAL_RANDOM_H	./cxxnet/utils/cxxnet_global_random.h	2;"	d
CXXNET_IO_UTILS_H	./cxxnet/utils/cxxnet_io_utils.h	2;"	d
CXXNET_ITER_IMG_INL_HPP	./cxxnet/io/cxxnet_iter_img-inl.hpp	2;"	d
CXXNET_ITER_PROC_INL_HPP	./cxxnet/io/cxxnet_iter_proc-inl.hpp	2;"	d
CXXNET_ITER_SPFEAT_INL_HPP	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	2;"	d
CXXNET_ITER_THREAD_IMBIN_INL_HPP	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	2;"	d
CXXNET_LAYER_INL_HPP	./cxxnet/core/cxxnet_layer-inl.hpp	2;"	d
CXXNET_METRIC_H	./cxxnet/utils/cxxnet_metric.h	2;"	d
CXXNET_MNIST_ITER_INL_HPP	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	2;"	d
CXXNET_NET_INL_HPP	./cxxnet/nnet/cxxnet_nnet-inl.hpp	2;"	d
CXXNET_NNET_H	./cxxnet/nnet/cxxnet_nnet.h	2;"	d
CXXNET_OP_H	./cxxnet/core/cxxnet_op.h	2;"	d
CXXNET_PAIRTEST_INL_HPP	./cxxnet/core/cxxnet_pairtest-inl.hpp	2;"	d
CXXNET_THREAD_BUFFER_H	./cxxnet/utils/cxxnet_thread_buffer.h	2;"	d
CXXNET_THREAD_H	./cxxnet/utils/cxxnet_thread.h	2;"	d
CXXNET_THREAD_PREFIX	./cxxnet/utils/cxxnet_thread.h	153;"	d
CXXNET_THREAD_PREFIX	./cxxnet/utils/cxxnet_thread.h	57;"	d
CXXNET_UPDATER_INL_HPP	./cxxnet/core/cxxnet_updater-inl.hpp	2;"	d
CXXNET_UTILS_H	./cxxnet/utils/cxxnet_utils.h	2;"	d
CXXNetLearnTask	./cxxnet/cxxnet_main.cpp	/^        CXXNetLearnTask( void ){$/;"	f	class:cxxnet::CXXNetLearnTask
CXXNetLearnTask	./cxxnet/cxxnet_main.cpp	/^    class CXXNetLearnTask{$/;"	c	namespace:cxxnet	file:
CXXNetTrainer	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        CXXNetTrainer( void ){$/;"	f	class:cxxnet::CXXNetTrainer
CXXNetTrainer	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^    class CXXNetTrainer : public INetTrainer{$/;"	c	namespace:cxxnet
CaffeLayer	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        CaffeLayer( mshadow::Random<xpu> &rnd, Node<xpu>& in, Node<xpu>& out )$/;"	f	class:cxxnet::CaffeLayer
CaffeLayer	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^    class CaffeLayer: public ILayer{$/;"	c	namespace:cxxnet
CaffeUpdater	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^            CaffeUpdater( const char *updater, mshadow::Random<xpu> &rnd,$/;"	f	class:cxxnet::CaffeLayer::CaffeUpdater
CaffeUpdater	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        class CaffeUpdater: public IUpdater{$/;"	c	class:cxxnet::CaffeLayer
CalcMetric	./cxxnet/utils/cxxnet_metric.h	/^            virtual float CalcMetric( const mshadow::Tensor<cpu,1> &pred, float label ) {$/;"	f	struct:cxxnet::utils::MetricError
CalcMetric	./cxxnet/utils/cxxnet_metric.h	/^            virtual float CalcMetric( const mshadow::Tensor<cpu,1> &pred, float label ) {$/;"	f	struct:cxxnet::utils::MetricRecall
CalcMetric	./cxxnet/utils/cxxnet_metric.h	/^            virtual float CalcMetric( const mshadow::Tensor<cpu,1> &predscore, float label ) {$/;"	f	struct:cxxnet::utils::MetricRMSE
ChannelPoolingExp	./mshadow/mshadow/tensor_expr_ext.h	/^            ChannelPoolingExp( const SrcExp &src, index_t nsize ): src_(src), nsize_(nsize){$/;"	f	struct:mshadow::expr::ChannelPoolingExp
ChannelPoolingExp	./mshadow/mshadow/tensor_expr_ext.h	/^        struct ChannelPoolingExp: public MakeTensorExp< ChannelPoolingExp<Reducer, SrcExp,srcdim>, SrcExp, srcdim> {$/;"	s	namespace:mshadow::expr
Check	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static Shape<dim> Check( const BinaryMapExp<OP,TA,TB,etype> &t ){$/;"	f	struct:mshadow::expr::ShapeCheck
Check	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static Shape<dim> Check( const MakeTensorExp<T,SrcExp,dim> &t ){$/;"	f	struct:mshadow::expr::ShapeCheck
Check	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static Shape<dim> Check( const ScalarExp &exp ){$/;"	f	struct:mshadow::expr::ShapeCheck
Check	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static Shape<dim> Check( const Tensor<Device,dim> &t ){$/;"	f	struct:mshadow::expr::ShapeCheck
Check	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static Shape<dim> Check( const UnaryMapExp<OP,TA,etype> &t ){$/;"	f	struct:mshadow::expr::ShapeCheck
Check	./mshadow/mshadow/tensor_expr_ext.h	/^            inline static bool Check( const Broadcast1DExp<cpu,dimdst,0> &exp ){$/;"	f	struct:mshadow::expr::SSEAlignCheck
Check	./mshadow/mshadow/tensor_sse-inl.hpp	/^            inline static bool Check( const BinaryMapExp<OP,TA,TB,etype> &t ){$/;"	f	struct:mshadow::expr::SSEAlignCheck
Check	./mshadow/mshadow/tensor_sse-inl.hpp	/^            inline static bool Check( const E &exp ){$/;"	f	struct:mshadow::expr::SSEAlignCheck
Check	./mshadow/mshadow/tensor_sse-inl.hpp	/^            inline static bool Check( const ScalarExp &exp ){$/;"	f	struct:mshadow::expr::SSEAlignCheck
Check	./mshadow/mshadow/tensor_sse-inl.hpp	/^            inline static bool Check( const Tensor<cpu,dim> &t ){$/;"	f	struct:mshadow::expr::SSEAlignCheck
Check	./mshadow/mshadow/tensor_sse-inl.hpp	/^            inline static bool Check( const UnaryMapExp<OP,TA,etype> &t ){$/;"	f	struct:mshadow::expr::SSEAlignCheck
CheckAlign	./mshadow/mshadow/tensor_sse-inl.hpp	/^        inline bool CheckAlign( size_t pitch ){$/;"	f	namespace:mshadow::sse2
CheckAlign	./mshadow/mshadow/tensor_sse-inl.hpp	/^        inline bool CheckAlign( void *ptr ){$/;"	f	namespace:mshadow::sse2
Clear	./cxxnet/utils/cxxnet_io_utils.h	/^            inline void Clear( void ) {$/;"	f	class:cxxnet::utils::BinaryPage
Clear	./cxxnet/utils/cxxnet_metric.h	/^            inline void Clear( void ){$/;"	f	struct:cxxnet::utils::MetricSet
Clear	./cxxnet/utils/cxxnet_metric.h	/^            virtual void Clear( void ){$/;"	f	struct:cxxnet::utils::MetricBase
Clear	./cxxnet/utils/cxxnet_metric.h	/^            virtual void Clear( void ){$/;"	f	struct:cxxnet::utils::MetricCorrSqr
Close	./cxxnet/utils/cxxnet_io_utils.h	/^            inline void Close( void ){$/;"	f	class:cxxnet::utils::StdFile
Close	./cxxnet/utils/cxxnet_io_utils.h	/^            virtual void Close( void ){$/;"	f	struct:cxxnet::utils::GzFile
Close	./mshadow/mshadow/tensor_io.h	/^            inline void Close( void ){$/;"	f	class:mshadow::utils::FileStream
CmpName	./cxxnet/utils/cxxnet_metric.h	/^            inline static bool CmpName( const IMetric *a, const IMetric *b ){$/;"	f	struct:cxxnet::utils::MetricSet
CmpResult	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^        inline static void CmpResult( mshadow::Tensor<xxpu,2> dmaster, mshadow::Tensor<xxpu,2> dslave,$/;"	f	struct:cxxnet::PairTestLayer
CmpScore	./cxxnet/utils/cxxnet_metric.h	/^            inline static bool CmpScore( const std::pair<float,index_t> &a, const std::pair<float,index_t> &b ){$/;"	f	struct:cxxnet::utils::MetricRecall
ConfigIterator	./cxxnet/utils/cxxnet_config.h	/^            ConfigIterator( const char *fname ){$/;"	f	class:cxxnet::utils::ConfigIterator
ConfigIterator	./cxxnet/utils/cxxnet_config.h	/^        class ConfigIterator{$/;"	c	namespace:cxxnet::utils
ConfigLayers	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline void ConfigLayers( std::vector< Node<xpu> >& nodes,$/;"	f	struct:cxxnet::NetConfigHelper
ContainerExp	./mshadow/mshadow/tensor_expr.h	/^        class ContainerExp: public Exp< Container, type::kContainer >{$/;"	c	namespace:mshadow::expr
ConvolutionLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        ConvolutionLayer( mshadow::Random<xpu> &rnd, Node<xpu> &in, Node<xpu> &out )$/;"	f	class:cxxnet::ConvolutionLayer
ConvolutionLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^    class ConvolutionLayer : public EdgeLayer<xpu> {$/;"	c	namespace:cxxnet
Copy	./mshadow/mshadow/tensor_cpu-inl.hpp	/^    inline void Copy(Tensor<cpu,dim> _dst, const Tensor<cpu,dim> &_src ){$/;"	f	namespace:mshadow
Copy	./mshadow/mshadow/tensor_gpu-inl.hpp	/^    inline void Copy(Tensor<A,dim> _dst, Tensor<B,dim> _src, cudaMemcpyKind kind){$/;"	f	namespace:mshadow
Copy	./mshadow/mshadow/tensor_gpu-inl.hpp	/^    inline void Copy(Tensor<cpu,dim> dst, const Tensor<gpu,dim> &src){$/;"	f	namespace:mshadow
Copy	./mshadow/mshadow/tensor_gpu-inl.hpp	/^    inline void Copy(Tensor<gpu,dim> dst, const Tensor<cpu,dim> &src){$/;"	f	namespace:mshadow
Copy	./mshadow/mshadow/tensor_gpu-inl.hpp	/^    inline void Copy(Tensor<gpu,dim> dst, const Tensor<gpu,dim> &src){$/;"	f	namespace:mshadow
CopyFrom	./cxxnet/io/cxxnet_data.h	/^        inline void CopyFrom( const DataBatch &src ){$/;"	f	struct:cxxnet::DataBatch
Create	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^            inline DataBatch Create( void ){$/;"	f	struct:cxxnet::ThreadBufferIterator::Factory
Create	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^            inline PagePtr Create( void ){$/;"	f	struct:cxxnet::ThreadImagePageIterator::Factory
CreateIterator	./cxxnet/io/cxxnet_data.cpp	/^    IIterator<DataBatch>* CreateIterator( const std::vector< std::pair<std::string,std::string> > &cfg ){$/;"	f	namespace:cxxnet
CreateIterators	./cxxnet/cxxnet_main.cpp	/^        inline void CreateIterators( void ){$/;"	f	class:cxxnet::CXXNetLearnTask	file:
CreateLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^    inline ILayer* CreateLayer( const char *type, mshadow::Random<xpu> &rnd, Node<xpu> &in, Node<xpu> &out ){$/;"	f	namespace:cxxnet
CreateLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^    inline ILayer* CreateLayer( int type, mshadow::Random<xpu> &rnd, Node<xpu> &in, Node<xpu> &out ){$/;"	f	namespace:cxxnet
CreateLayer_	./cxxnet/core/cxxnet_layer-inl.hpp	/^    inline ILayer* CreateLayer_( int type, mshadow::Random<xpu> &rnd, Node<xpu> &in, Node<xpu> &out ){$/;"	f	namespace:cxxnet
CreateMeanImg	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        inline void CreateMeanImg( void ){$/;"	f	class:cxxnet::BatchAdaptIterator
CreateNet	./cxxnet/cxxnet_main.cpp	/^        inline INetTrainer* CreateNet( void ){$/;"	f	class:cxxnet::CXXNetLearnTask	file:
CreateNet	./cxxnet/nnet/cxxnet_nnet.h	/^    inline INetTrainer* CreateNet( int net_type, const char *device ){$/;"	f	namespace:cxxnet
CreateNetCPU	./cxxnet/nnet/cxxnet_nnet.cpp	/^    INetTrainer* CreateNetCPU( int net_type ){$/;"	f	namespace:cxxnet
CreateNetGPU	./cxxnet/nnet/cxxnet_nnet.cpp	/^    INetTrainer* CreateNetGPU( int net_type ){$/;"	f	namespace:cxxnet
CreateNet_	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^    INetTrainer* CreateNet_( int net_type ){$/;"	f	namespace:cxxnet
CreateNode	./cxxnet/core/cxxnet_core.h	/^        inline Node<xpu> CreateNode( void ){$/;"	f	class:cxxnet::NodeFactory
CreateUpdater	./cxxnet/core/cxxnet_updater-inl.hpp	/^    inline IUpdater* CreateUpdater( const char *type,$/;"	f	namespace:cxxnet
CroppingExp	./mshadow/mshadow/tensor_expr_ext.h	/^            CroppingExp(const SrcExp &src, Shape<2> cshape ): src_(src) {$/;"	f	struct:mshadow::expr::CroppingExp
CroppingExp	./mshadow/mshadow/tensor_expr_ext.h	/^            CroppingExp(const SrcExp &src, Shape<2> cshape, index_t start_height, index_t start_width  )$/;"	f	struct:mshadow::expr::CroppingExp
CroppingExp	./mshadow/mshadow/tensor_expr_ext.h	/^        struct CroppingExp : public MakeTensorExp< CroppingExp<SrcExp, srcdim>, SrcExp, srcdim> {$/;"	s	namespace:mshadow::expr
DType	./mshadow/mshadow/tensor_sse-inl.hpp	/^            typedef __m128 DType;$/;"	t	struct:mshadow::sse2::FVec
DType	./mshadow/mshadow/tensor_sse-inl.hpp	/^            typedef __m128d DType;$/;"	t	struct:mshadow::sse2::FVec
DataBatch	./cxxnet/io/cxxnet_data.h	/^        DataBatch( void ){$/;"	f	struct:cxxnet::DataBatch
DataBatch	./cxxnet/io/cxxnet_data.h	/^    struct DataBatch{$/;"	s	namespace:cxxnet
DataInst	./cxxnet/io/cxxnet_data.h	/^    struct DataInst{$/;"	s	namespace:cxxnet
Destroy	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^            inline void Destroy(){$/;"	f	struct:cxxnet::ThreadBufferIterator::Factory
Destroy	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^            inline void Destroy(){$/;"	f	struct:cxxnet::ThreadImagePageIterator::Factory
Destroy	./cxxnet/utils/cxxnet_thread.h	/^            inline void Destroy(){$/;"	f	class:cxxnet::utils::Semaphore
Destroy	./cxxnet/utils/cxxnet_thread_buffer.h	/^            inline void Destroy( void ){$/;"	f	class:cxxnet::utils::ThreadBuffer
DotEngine	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct DotEngine<SV,xpu,1,1,2,false,transpose_right>{$/;"	s	namespace:mshadow::expr
DotEngine	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct DotEngine<SV,xpu,2,1,1,true,false>{$/;"	s	namespace:mshadow::expr
DotEngine	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct DotEngine<SV,xpu,2,2,2,transpose_left,transpose_right>{$/;"	s	namespace:mshadow::expr
DotEngine	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct DotEngine{$/;"	s	namespace:mshadow::expr
DotExp	./mshadow/mshadow/tensor_expr.h	/^            DotExp( const TA &lhs, const TB &rhs, real_t scale )$/;"	f	struct:mshadow::expr::DotExp
DotExp	./mshadow/mshadow/tensor_expr.h	/^        struct DotExp: public Exp< DotExp<TA,TB,ltrans,rtrans>, type::kComplex >{$/;"	s	namespace:mshadow::expr
DropConnLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        DropConnLayer(mshadow::Random<xpu> &rnd, Node<xpu> &in, Node<xpu> &out)$/;"	f	class:cxxnet::DropConnLayer
DropConnLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^    class DropConnLayer : public FullConnectLayer<xpu> {$/;"	c	namespace:cxxnet
DropoutLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        DropoutLayer(mshadow::Random<xpu> &rnd, Node<xpu> &in, Node<xpu> &out)$/;"	f	class:cxxnet::DropoutLayer
DropoutLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^    class DropoutLayer : public ILayer {$/;"	c	namespace:cxxnet
EdgeLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        EdgeLayer(mshadow::Random<xpu> &rnd ) : rnd_(rnd) {}$/;"	f	class:cxxnet::EdgeLayer
EdgeLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^    class EdgeLayer : public ILayer {$/;"	c	namespace:cxxnet
EqualName	./cxxnet/utils/cxxnet_metric.h	/^            inline static bool EqualName( const IMetric *a, const IMetric *b ){$/;"	f	struct:cxxnet::utils::MetricSet
Error	./cxxnet/utils/cxxnet_utils.h	/^        inline void Error( const char *msg ){$/;"	f	namespace:cxxnet::utils
Error	./mshadow/mshadow/tensor_base.h	/^        inline void Error( const char *msg ){$/;"	f	namespace:mshadow::utils
Error_All_Tensor_in_Exp_Must_Have_Same_Type	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static void Error_All_Tensor_in_Exp_Must_Have_Same_Type( void ){}$/;"	f	struct:mshadow::expr::TypeCheckPass
Error_Expression_Does_Not_Meet_Dimension_Req	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static void Error_Expression_Does_Not_Meet_Dimension_Req( void ){}$/;"	f	struct:mshadow::expr::TypeCheckPass
Error_TypeCheck_Not_Pass_For_Reduce_Exp	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static void Error_TypeCheck_Not_Pass_For_Reduce_Exp( void ){}$/;"	f	struct:mshadow::expr::TypeCheckPass
Eval	./mshadow/example/exp-template/exp_template.cpp	/^    inline float Eval( int i ) const{$/;"	f	struct:BinaryAddExp
Eval	./mshadow/example/exp-template/exp_template.cpp	/^    inline float Eval( int i ) const{$/;"	f	struct:Vec
Eval	./mshadow/example/exp-template/exp_template_op.cpp	/^    inline float Eval( int i ) const{$/;"	f	struct:BinaryMapExp
Eval	./mshadow/example/exp-template/exp_template_op.cpp	/^    inline float Eval( int i ) const{$/;"	f	struct:Vec
Eval	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            MSHADOW_XINLINE real_t Eval( index_t y, index_t x ) const{$/;"	f	class:mshadow::expr::Plan
Eval	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            MSHADOW_XINLINE real_t Eval( index_t y, index_t x ) const{$/;"	f	struct:mshadow::expr::Plan
Eval	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static void Eval( Tensor<Device,dim> &dst, const DotExp< Tensor<Device,ldim>, Tensor<Device,rdim>, ltrans, rtrans > &exp ){$/;"	f	struct:mshadow::expr::ExpComplexEngine
Eval	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static void Eval( Tensor<Device,dim>& dst, const Exp<E,type::kComplex> &exp ){$/;"	f	struct:mshadow::expr::ExpEngine
Eval	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static void Eval( Tensor<Device,dim>& dst, const Exp<E,type::kContainer> &exp ){$/;"	f	struct:mshadow::expr::ExpEngine
Eval	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static void Eval( Tensor<Device,dim>& dst, const Exp<E,type::kMapper> &exp ){$/;"	f	struct:mshadow::expr::ExpEngine
Eval	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static void Eval( Tensor<xpu,1> &dst, const Tensor<xpu,1> &lhs, const Tensor<xpu,2> &rhs, real_t scale ) {$/;"	f	struct:mshadow::expr::DotEngine
Eval	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static void Eval( Tensor<xpu,2> &dst, const Tensor<xpu,1> &lhs, const Tensor<xpu,1> &rhs, real_t scale ) {$/;"	f	struct:mshadow::expr::DotEngine
Eval	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static void Eval( Tensor<xpu,2> &dst, const Tensor<xpu,2> &lhs, const Tensor<xpu,2> &rhs, real_t scale ) {$/;"	f	struct:mshadow::expr::DotEngine
Eval	./mshadow/mshadow/tensor_expr_ext.h	/^            MSHADOW_CINLINE real_t Eval( index_t y, index_t x ) const{$/;"	f	class:mshadow::expr::SSEPlan
Eval	./mshadow/mshadow/tensor_expr_ext.h	/^            MSHADOW_XINLINE real_t Eval( index_t i, index_t j ) const{$/;"	f	struct:mshadow::expr::Plan
Eval	./mshadow/mshadow/tensor_expr_ext.h	/^            MSHADOW_XINLINE real_t Eval( index_t i, index_t x ) const{$/;"	f	struct:mshadow::expr::Plan
Eval	./mshadow/mshadow/tensor_expr_ext.h	/^            MSHADOW_XINLINE real_t Eval( index_t y, index_t x ) const{$/;"	f	struct:mshadow::expr::Plan
Eval	./mshadow/mshadow/tensor_expr_ext.h	/^            MSHADOW_XINLINE real_t Eval(index_t i, index_t j) const {$/;"	f	struct:mshadow::expr::Plan
Eval	./mshadow/mshadow/tensor_expr_ext.h	/^            inline static void Eval( Tensor<Device,1> &dst, const ReduceTo1DExp<EType,Reducer,0> &exp ){$/;"	f	struct:mshadow::expr::ExpComplexEngine
Eval	./mshadow/mshadow/tensor_expr_ext.h	/^            inline static void Eval( Tensor<Device,1> &dst, const ReduceTo1DExp<EType,Reducer,dimkeep> &exp ){$/;"	f	struct:mshadow::expr::ExpComplexEngine
Eval	./mshadow/mshadow/tensor_sse-inl.hpp	/^            MSHADOW_CINLINE real_t Eval( index_t y, index_t x ) const{$/;"	f	class:mshadow::expr::SSEPlan
EvalSSE	./mshadow/mshadow/tensor_expr_ext.h	/^            MSHADOW_CINLINE sse2::FVec<real_t> EvalSSE( index_t y, index_t x ) const{$/;"	f	class:mshadow::expr::SSEPlan
EvalSSE	./mshadow/mshadow/tensor_sse-inl.hpp	/^            MSHADOW_CINLINE sse2::FVec<real_t> EvalSSE( index_t y, index_t x ) const{$/;"	f	class:mshadow::expr::SSEPlan
Evaluate	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        virtual void Evaluate( FILE *fo, IIterator<DataBatch> *iter_eval, const char* evname ){$/;"	f	class:cxxnet::CXXNetTrainer
Exp	./mshadow/example/exp-template/exp_template.cpp	/^struct Exp{$/;"	s	file:
Exp	./mshadow/example/exp-template/exp_template_op.cpp	/^struct Exp{$/;"	s	file:
Exp	./mshadow/mshadow/tensor_expr.h	/^        struct Exp{$/;"	s	namespace:mshadow::expr
ExpComplexEngine	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct ExpComplexEngine< SV, Device, dim, DotExp< Tensor<Device,ldim>, Tensor<Device,rdim>, ltrans, rtrans > >{$/;"	s	namespace:mshadow::expr
ExpComplexEngine	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct ExpComplexEngine{$/;"	s	namespace:mshadow::expr
ExpComplexEngine	./mshadow/mshadow/tensor_expr_ext.h	/^        struct ExpComplexEngine< SV, Device, 1, ReduceTo1DExp<EType,Reducer,0> >{$/;"	s	namespace:mshadow::expr
ExpComplexEngine	./mshadow/mshadow/tensor_expr_ext.h	/^        struct ExpComplexEngine< SV, Device, 1, ReduceTo1DExp<EType,Reducer,dimkeep> >{$/;"	s	namespace:mshadow::expr
ExpEngine	./mshadow/mshadow/tensor_expr.h	/^        struct ExpEngine{$/;"	s	namespace:mshadow::expr
ExpEngine	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct ExpEngine<SV, Tensor<Device,dim> >{$/;"	s	namespace:mshadow::expr
ExpInfo	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct ExpInfo< BinaryMapExp<OP,TA,TB,etype> >{$/;"	s	namespace:mshadow::expr
ExpInfo	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct ExpInfo< MakeTensorExp<T,SrcExp,dim> >{$/;"	s	namespace:mshadow::expr
ExpInfo	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct ExpInfo< Tensor<Device,dim> >{$/;"	s	namespace:mshadow::expr
ExpInfo	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct ExpInfo< UnaryMapExp<OP,TA,etype> >{$/;"	s	namespace:mshadow::expr
ExpInfo	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct ExpInfo<ScalarExp>{$/;"	s	namespace:mshadow::expr
ExpInfo	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct ExpInfo{$/;"	s	namespace:mshadow::expr
F	./mshadow/example/exp-template/exp_template_op.cpp	/^inline BinaryMapExp<OP,TLhs,TRhs> F(const Exp<TLhs>& lhs, const Exp<TRhs>& rhs){$/;"	f
F	./mshadow/mshadow/tensor_expr.h	/^        inline BinaryMapExp<OP,ScalarExp,TB, (tb|type::kMapper) > F( const ScalarExp &lhs, const Exp<TB,tb>& rhs ){$/;"	f	namespace:mshadow::expr
F	./mshadow/mshadow/tensor_expr.h	/^        inline BinaryMapExp<OP,TA,ScalarExp, (ta|type::kMapper) > F( const Exp<TA,ta> &lhs, const ScalarExp &rhs ){$/;"	f	namespace:mshadow::expr
F	./mshadow/mshadow/tensor_expr.h	/^        inline BinaryMapExp<OP,TA,TB, (ta|tb|type::kMapper) > F( const Exp<TA,ta> &lhs, const Exp<TB,tb> &rhs ){$/;"	f	namespace:mshadow::expr
F	./mshadow/mshadow/tensor_expr.h	/^        inline UnaryMapExp<OP,TA,(ta|type::kMapper) > F( const Exp<TA,ta> &src ){$/;"	f	namespace:mshadow::expr
FVec	./mshadow/mshadow/tensor_sse-inl.hpp	/^            FVec( DType data ):data_(data){}$/;"	f	struct:mshadow::sse2::FVec
FVec	./mshadow/mshadow/tensor_sse-inl.hpp	/^            FVec( const double &s ){$/;"	f	struct:mshadow::sse2::FVec
FVec	./mshadow/mshadow/tensor_sse-inl.hpp	/^            FVec( const double *src ){$/;"	f	struct:mshadow::sse2::FVec
FVec	./mshadow/mshadow/tensor_sse-inl.hpp	/^            FVec( const float &s ){$/;"	f	struct:mshadow::sse2::FVec
FVec	./mshadow/mshadow/tensor_sse-inl.hpp	/^            FVec( const float *src ){$/;"	f	struct:mshadow::sse2::FVec
FVec	./mshadow/mshadow/tensor_sse-inl.hpp	/^            FVec( void ){}$/;"	f	struct:mshadow::sse2::FVec
FVec	./mshadow/mshadow/tensor_sse-inl.hpp	/^        struct FVec<double> {$/;"	s	namespace:mshadow::sse2
FVec	./mshadow/mshadow/tensor_sse-inl.hpp	/^        struct FVec<float> {$/;"	s	namespace:mshadow::sse2
FVec	./mshadow/mshadow/tensor_sse-inl.hpp	/^        template<typename FloatType> struct FVec{};$/;"	s	namespace:mshadow::sse2
Factory	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^            Factory( void ){$/;"	f	struct:cxxnet::ThreadBufferIterator::Factory
Factory	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        struct Factory{$/;"	s	class:cxxnet::ThreadBufferIterator
Factory	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^            Factory(){}$/;"	f	struct:cxxnet::ThreadImagePageIterator::Factory
Factory	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        struct Factory{$/;"	s	class:cxxnet::ThreadImagePageIterator
FileStream	./mshadow/mshadow/tensor_io.h	/^            FileStream( FILE *fp ):fp_(fp){}$/;"	f	class:mshadow::utils::FileStream
FileStream	./mshadow/mshadow/tensor_io.h	/^        class FileStream: public IStream{$/;"	c	namespace:mshadow::utils
FlatTo2D	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE Shape<2> FlatTo2D(void) const {$/;"	f	struct:mshadow::Shape
FlatTo2D	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE Tensor<Device, 2> FlatTo2D(void) const {$/;"	f	struct:mshadow::Tensor
FlattenLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        FlattenLayer( Node<xpu> &in, Node<xpu> &out )$/;"	f	class:cxxnet::FlattenLayer
FlattenLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^    class FlattenLayer : public ILayer{$/;"	c	namespace:cxxnet
FopenCheck	./cxxnet/utils/cxxnet_utils.h	/^        inline FILE *FopenCheck( const char *fname , const char *flag ){$/;"	f	namespace:cxxnet::utils
Forward	./cxxnet/core/cxxnet_layer-inl.hpp	/^        inline void Forward(mshadow::Tensor<xpu,2> wmat) {$/;"	f	class:cxxnet::FullConnectLayer
Forward	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Forward( bool is_train ) {$/;"	f	class:cxxnet::ActivationLayer
Forward	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Forward( bool is_train ) {$/;"	f	class:cxxnet::DropoutLayer
Forward	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Forward( bool is_train ) {$/;"	f	class:cxxnet::FlattenLayer
Forward	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Forward( bool is_train ){$/;"	f	struct:cxxnet::LayerPatch
Forward	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Forward(bool is_train) {$/;"	f	class:cxxnet::ConvolutionLayer
Forward	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Forward(bool is_train) {$/;"	f	class:cxxnet::DropConnLayer
Forward	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Forward(bool is_train) {$/;"	f	class:cxxnet::FullConnectLayer
Forward	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Forward(bool is_train) {$/;"	f	class:cxxnet::LRNLayer
Forward	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Forward(bool is_train) {$/;"	f	class:cxxnet::PaddingLayer
Forward	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Forward(bool is_train) {$/;"	f	class:cxxnet::PoolingLayer
Forward	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void Forward(bool is_train){$/;"	f	class:cxxnet::SoftmaxLayer
Forward	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^        virtual void Forward( bool is_train ){$/;"	f	struct:cxxnet::PairTestLayer
Forward	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline void Forward( bool is_train ){$/;"	f	struct:cxxnet::NeuralNet
Forward	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        virtual void Forward( bool is_train ){$/;"	f	class:cxxnet::CaffeLayer
FreeBytes	./cxxnet/utils/cxxnet_io_utils.h	/^            inline size_t FreeBytes( void ){$/;"	f	class:cxxnet::utils::BinaryPage
FreeSpace	./cxxnet/core/cxxnet_core.h	/^        inline void FreeSpace( void ){$/;"	f	struct:cxxnet::Node
FreeSpace	./cxxnet/io/cxxnet_data.h	/^        inline void FreeSpace( void ){$/;"	f	struct:cxxnet::DataBatch
FreeSpace	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^            inline void FreeSpace( DataBatch &a ){$/;"	f	struct:cxxnet::ThreadBufferIterator::Factory
FreeSpace	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^            inline void FreeSpace( PagePtr &a ){$/;"	f	struct:cxxnet::ThreadImagePageIterator::Factory
FreeSpace	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline void FreeSpace( void ){$/;"	f	struct:cxxnet::NeuralNet
FreeSpace	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        inline void FreeSpace( void ){$/;"	f	class:cxxnet::CaffeLayer
FreeSpace	./mshadow/mshadow/tensor_container.h	/^        inline void FreeSpace (void){$/;"	f	class:mshadow::TensorContainer
FreeSpace	./mshadow/mshadow/tensor_cpu-inl.hpp	/^    inline void FreeSpace(Tensor<cpu,dim> &obj){$/;"	f	namespace:mshadow
FreeSpace	./mshadow/mshadow/tensor_gpu-inl.hpp	/^    inline void FreeSpace(Tensor<gpu,dim> &obj){$/;"	f	namespace:mshadow
FullConnectLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        FullConnectLayer( mshadow::Random<xpu> &rnd, Node<xpu> &in, Node<xpu> &out )$/;"	f	class:cxxnet::FullConnectLayer
FullConnectLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^    class FullConnectLayer : public EdgeLayer<xpu> {$/;"	c	namespace:cxxnet
GenRandomString	./cxxnet/utils/cxxnet_thread.h	/^            inline void GenRandomString(char *s, const int len) {$/;"	f	class:cxxnet::utils::Semaphore
Get	./cxxnet/utils/cxxnet_metric.h	/^            virtual double Get( void ) const{$/;"	f	struct:cxxnet::utils::MetricBase
Get	./cxxnet/utils/cxxnet_metric.h	/^            virtual double Get( void ) const{$/;"	f	struct:cxxnet::utils::MetricCorrSqr
GetData	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^            virtual void GetData(mshadow::TensorContainer<cpu,2>& weight,$/;"	f	class:cxxnet::PairTestLayer::PairTestUpdater
GetData	./cxxnet/core/cxxnet_updater-inl.hpp	/^        virtual void GetData( mshadow::TensorContainer<cpu,2>& weight,$/;"	f	class:cxxnet::SGDUpdater
GetData	./cxxnet/core/cxxnet_updater-inl.hpp	/^        virtual void GetData( mshadow::TensorContainer<cpu,2>& weight,$/;"	f	class:cxxnet::SGHMCUpdater
GetData	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^            virtual void GetData(mshadow::TensorContainer<cpu,2>& weight,$/;"	f	class:cxxnet::CaffeLayer::CaffeUpdater
GetLayerInfo	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline NetMetaModel::LayerInfo GetLayerInfo( const char *name, const char *val ){$/;"	f	struct:cxxnet::NetConfigHelper
GetLayerType	./cxxnet/core/cxxnet_layer-inl.hpp	/^    inline int GetLayerType( const char *type ){$/;"	f	namespace:cxxnet
GetMaxIndex	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline static int GetMaxIndex( mshadow::Tensor<cpu,1> pred ){$/;"	f	class:cxxnet::CXXNetTrainer
GetNextToken	./cxxnet/utils/cxxnet_config.h	/^            inline bool GetNextToken( char tok[] ){$/;"	f	class:cxxnet::utils::ConfigIterator
GetShape	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        inline static Shape<2> GetShape( const Shape<2> &shape, bool transpose ){$/;"	f	namespace:mshadow::expr
GetShapeIn	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^            mshadow::Shape<4> GetShapeIn( index_t nbatch ) const{$/;"	f	struct:cxxnet::NetMetaModel::Param
GetSigma	./cxxnet/core/cxxnet_updater-inl.hpp	/^            inline real_t GetSigma( void ) const{$/;"	f	struct:cxxnet::SGHMCUpdater::HMCParam
GetT	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static CBLAS_TRANSPOSE GetT( bool t ){$/;"	f	struct:mshadow::expr::BLASEngine
GetT	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static char GetT( bool t ){$/;"	f	struct:mshadow::expr::BLASEngine
GetUpdaters	./cxxnet/core/cxxnet_core.h	/^        virtual void GetUpdaters( const char *updater, std::vector<IUpdater*> &updaters ) {}$/;"	f	class:cxxnet::ILayer
GetUpdaters	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void GetUpdaters( const char *updater, std::vector<IUpdater*> &updaters ) {$/;"	f	struct:cxxnet::LayerPatch
GetUpdaters	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void GetUpdaters( const char *updater, std::vector<IUpdater*> &updaters ){$/;"	f	class:cxxnet::ConvolutionLayer
GetUpdaters	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void GetUpdaters( const char *updater, std::vector<IUpdater*> &updaters ){$/;"	f	class:cxxnet::FullConnectLayer
GetUpdaters	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^        virtual void GetUpdaters( const char *updater, std::vector<IUpdater*> &updaters ) {$/;"	f	struct:cxxnet::PairTestLayer
GetUpdaters	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        virtual void GetUpdaters( const char *updater, std::vector<IUpdater*> &updaters ) {$/;"	f	class:cxxnet::CaffeLayer
GzFile	./cxxnet/utils/cxxnet_io_utils.h	/^            GzFile( const char *path, const char *mode ) {$/;"	f	struct:cxxnet::utils::GzFile
GzFile	./cxxnet/utils/cxxnet_io_utils.h	/^        struct GzFile : public ISeekStream{$/;"	s	namespace:cxxnet::utils
HMCParam	./cxxnet/core/cxxnet_updater-inl.hpp	/^            HMCParam( void ){$/;"	f	struct:cxxnet::SGHMCUpdater::HMCParam
HMCParam	./cxxnet/core/cxxnet_updater-inl.hpp	/^        struct HMCParam : public UpdaterParam {$/;"	s	class:cxxnet::SGHMCUpdater
IIterator	./cxxnet/io/cxxnet_data.h	/^    class IIterator{$/;"	c	namespace:cxxnet
ILayer	./cxxnet/core/cxxnet_core.h	/^    class ILayer {$/;"	c	namespace:cxxnet
IMetric	./cxxnet/utils/cxxnet_metric.h	/^            IMetric( void ){}$/;"	f	class:cxxnet::utils::IMetric
IMetric	./cxxnet/utils/cxxnet_metric.h	/^        class IMetric{$/;"	c	namespace:cxxnet::utils
INetTrainer	./cxxnet/nnet/cxxnet_nnet.h	/^    class INetTrainer{$/;"	c	namespace:cxxnet
ISeekStream	./cxxnet/utils/cxxnet_io_utils.h	/^        class ISeekStream : public IStream{$/;"	c	namespace:cxxnet::utils
IStream	./cxxnet/utils/cxxnet_io_utils.h	/^        typedef mshadow::utils::IStream IStream;$/;"	t	namespace:cxxnet::utils
IStream	./mshadow/mshadow/tensor_io.h	/^        class IStream{$/;"	c	namespace:mshadow::utils
IUpdater	./cxxnet/core/cxxnet_core.h	/^    class IUpdater{$/;"	c	namespace:cxxnet
ImageIterator	./cxxnet/io/cxxnet_iter_img-inl.hpp	/^        ImageIterator( void ){$/;"	f	class:cxxnet::ImageIterator
ImageIterator	./cxxnet/io/cxxnet_iter_img-inl.hpp	/^    class ImageIterator : public IIterator< DataInst >{$/;"	c	namespace:cxxnet
Init	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^            virtual void Init( void ){$/;"	f	class:cxxnet::PairTestLayer::PairTestUpdater
Init	./cxxnet/core/cxxnet_updater-inl.hpp	/^        virtual void Init( void ){$/;"	f	class:cxxnet::SGDUpdater
Init	./cxxnet/core/cxxnet_updater-inl.hpp	/^        virtual void Init( void ){$/;"	f	class:cxxnet::SGHMCUpdater
Init	./cxxnet/cxxnet_main.cpp	/^        inline void Init( void ){$/;"	f	class:cxxnet::CXXNetLearnTask	file:
Init	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        virtual void Init( void ) {$/;"	f	class:cxxnet::CIFARIterator
Init	./cxxnet/io/cxxnet_iter_img-inl.hpp	/^        virtual void Init( void ){$/;"	f	class:cxxnet::ImageIterator
Init	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        virtual void Init( void ) {$/;"	f	class:cxxnet::MNISTIterator
Init	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^            inline bool Init(){$/;"	f	struct:cxxnet::ThreadBufferIterator::Factory
Init	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        virtual void Init( void ){$/;"	f	class:cxxnet::BatchAdaptIterator
Init	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        virtual void Init( void ){$/;"	f	class:cxxnet::ThreadBufferIterator
Init	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^        virtual void Init( void ) {$/;"	f	class:cxxnet::SpFeatIterator
Init	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^            inline bool Init(){$/;"	f	struct:cxxnet::ThreadImagePageIterator::Factory
Init	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        virtual void Init( void ){$/;"	f	class:cxxnet::ThreadImagePageIterator
Init	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^            virtual void Init( void ){$/;"	f	class:cxxnet::CaffeLayer::CaffeUpdater
Init	./cxxnet/utils/cxxnet_thread.h	/^            inline void Init( int init_val ){$/;"	f	class:cxxnet::utils::Semaphore
Init	./cxxnet/utils/cxxnet_thread_buffer.h	/^            inline bool Init( void ){$/;"	f	class:cxxnet::utils::ThreadBuffer
InitAvgRecord	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline void InitAvgRecord(void){$/;"	f	class:cxxnet::CXXAvgNetTrainer
InitGaussian	./cxxnet/core/cxxnet_layer-inl.hpp	/^        inline void InitGaussian(mshadow::TensorContainer<xpu, dim> &mat, real_t sigma) {$/;"	f	class:cxxnet::EdgeLayer
InitIter	./cxxnet/cxxnet_main.cpp	/^        inline void InitIter( IIterator<DataBatch>* itr,$/;"	f	class:cxxnet::CXXNetLearnTask	file:
InitLayer	./cxxnet/core/cxxnet_core.h	/^        virtual void InitLayer( void ){}$/;"	f	class:cxxnet::ILayer
InitLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void InitLayer( void ) {$/;"	f	class:cxxnet::ActivationLayer
InitLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void InitLayer( void ) {$/;"	f	class:cxxnet::ConvolutionLayer
InitLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void InitLayer( void ) {$/;"	f	class:cxxnet::DropoutLayer
InitLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void InitLayer( void ) {$/;"	f	class:cxxnet::FlattenLayer
InitLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void InitLayer( void ) {$/;"	f	class:cxxnet::FullConnectLayer
InitLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void InitLayer( void ) {$/;"	f	class:cxxnet::LRNLayer
InitLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void InitLayer( void ){$/;"	f	class:cxxnet::DropConnLayer
InitLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void InitLayer( void ){$/;"	f	struct:cxxnet::LayerPatch
InitLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void InitLayer() {$/;"	f	class:cxxnet::PaddingLayer
InitLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void InitLayer() {$/;"	f	class:cxxnet::PoolingLayer
InitLayer	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^        virtual void InitLayer( void ){$/;"	f	struct:cxxnet::PairTestLayer
InitLayer	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        virtual void InitLayer( void ){$/;"	f	class:cxxnet::CaffeLayer
InitModel	./cxxnet/core/cxxnet_core.h	/^        virtual void InitModel(void) {}$/;"	f	class:cxxnet::ILayer
InitModel	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void InitModel(void) {$/;"	f	struct:cxxnet::LayerPatch
InitModel	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void InitModel(void){$/;"	f	class:cxxnet::ConvolutionLayer
InitModel	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void InitModel(void){$/;"	f	class:cxxnet::FullConnectLayer
InitModel	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^        virtual void InitModel(void) {$/;"	f	struct:cxxnet::PairTestLayer
InitModel	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline void InitModel( void ) {$/;"	f	struct:cxxnet::NeuralNet
InitModel	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline void InitModel( void ){$/;"	f	struct:cxxnet::NetMetaModel
InitModel	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        virtual void InitModel( void ) {$/;"	f	class:cxxnet::CXXNetTrainer
InitModel	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        virtual void InitModel( void ){$/;"	f	class:cxxnet::CXXAvgNetTrainer
InitModel	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        virtual void InitModel(void) {$/;"	f	class:cxxnet::CaffeLayer
InitNodes	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline void InitNodes( void ){$/;"	f	struct:cxxnet::NeuralNet
InitTensorEngine	./mshadow/mshadow/tensor_gpu-inl.hpp	/^    inline void InitTensorEngine( int dev_id ){$/;"	f	namespace:mshadow
InitTensorEngine	./mshadow/mshadow/tensor_gpu-inl.hpp	/^    inline void InitTensorEngine(int dev_id){$/;"	f	namespace:mshadow
InitUniform	./cxxnet/core/cxxnet_layer-inl.hpp	/^        inline void InitUniform(mshadow::TensorContainer<xpu, dim> &mat, real_t a, real_t b) {$/;"	f	class:cxxnet::EdgeLayer
InitXavier	./cxxnet/core/cxxnet_layer-inl.hpp	/^        inline void InitXavier(mshadow::TensorContainer<xpu,dim> &mat, index_t in_num, index_t out_num) {$/;"	f	class:cxxnet::EdgeLayer
Join	./cxxnet/utils/cxxnet_thread.h	/^            inline int Join(){$/;"	f	class:cxxnet::utils::Thread
LDFLAGS	./Makefile	/^ LDFLAGS= -L\/usr\/local\/cuda-5.0\/lib64 -L\/projects\/grail\/local\/pkg\/intel\/mkl\/lib\/em64t  -L\/homes\/grail\/bdol\/h\/code\/lib -lm -lcudart -lcublas -lmkl_core -lmkl_intel_lp64 -lmkl_intel_thread -liomp5 -lpthread -lcurand -lz `pkg-config --libs \/homes\/grail\/bdol\/h\/code\/lib\/pkgconfig\/opencv.pc`$/;"	m
LDFLAGS	./Makefile	/^ LDFLAGS= -lm -lcudart -lcublas -lcurand -lz `pkg-config --libs opencv` -lblas$/;"	m
LDFLAGS	./make/Cblas.cpu.mk	/^export LDFLAGS= -lcblas -lm -lz$/;"	m
LDFLAGS	./make/cpu_only.mk	/^ LDFLAGS= -lm -lmkl_core -lmkl_intel_lp64 -lmkl_intel_thread -liomp5 -lpthread -lz `pkg-config --libs opencv`$/;"	m
LDFLAGS	./make/cpu_only.mk	/^ LDFLAGS= -lm -lz `pkg-config --libs opencv` -lopenblas$/;"	m
LDFLAGS	./mshadow/example/Makefile	/^export LDFLAGS= -lm -lcudart -lcublas -lmkl_core -lmkl_intel_lp64 -lmkl_intel_thread -liomp5 -lpthread $/;"	m
LDFLAGS	./mshadow/example/neuralnet/Makefile	/^	LDFLAGS=  -lm -lcudart -lcublas -lcurand  -lmkl_core -lmkl_intel_lp64 -lmkl_intel_thread -liomp5 -lpthread $/;"	m
LDFLAGS	./mshadow/example/neuralnet/Makefile	/^	LDFLAGS= -lcblas -lm -lcudart -lcublas -lcurand $/;"	m
LDFLAGS	./tools/Makefile	/^export LDFLAGS=$/;"	m
LRNLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        LRNLayer(Node<xpu> &in, Node<xpu> &out)$/;"	f	class:cxxnet::LRNLayer
LRNLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^    class LRNLayer : public ILayer {$/;"	c	namespace:cxxnet
LayerInfo	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        struct LayerInfo{$/;"	s	struct:cxxnet::NetMetaModel
LayerParam	./cxxnet/core/cxxnet_layer-inl.hpp	/^        LayerParam( void ){$/;"	f	struct:cxxnet::LayerParam
LayerParam	./cxxnet/core/cxxnet_layer-inl.hpp	/^    struct LayerParam{$/;"	s	namespace:cxxnet
LayerPatch	./cxxnet/core/cxxnet_layer-inl.hpp	/^        LayerPatch( ILayer *base, Node<xpu>& in, Node<xpu>& out )$/;"	f	struct:cxxnet::LayerPatch
LayerPatch	./cxxnet/core/cxxnet_layer-inl.hpp	/^    struct LayerPatch: public ILayer{$/;"	s	namespace:cxxnet
Load	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        inline void Load( void ) {$/;"	f	class:cxxnet::CIFARIterator
Load	./cxxnet/utils/cxxnet_io_utils.h	/^            inline bool Load( utils::IStream &fi) {$/;"	f	class:cxxnet::utils::BinaryPage
LoadBinary	./mshadow/mshadow/tensor_container.h	/^        inline void LoadBinary( TStream &fi ) {$/;"	f	class:mshadow::TensorContainer
LoadBinary	./mshadow/mshadow/tensor_io.h	/^    inline void LoadBinary( TStream &fi, Tensor<cpu,dim> &dst_, bool pre_alloc ){$/;"	f	namespace:mshadow
LoadBinary	./mshadow/mshadow/tensor_io.h	/^    inline void LoadBinary( TStream &fi, Tensor<gpu,dim> &dst, bool pre_alloc ){$/;"	f	namespace:mshadow
LoadImage	./cxxnet/io/cxxnet_iter_img-inl.hpp	/^        inline static void LoadImage( mshadow::TensorContainer<cpu,3> &img, $/;"	f	class:cxxnet::ImageIterator
LoadImage	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        inline void LoadImage( void ) {$/;"	f	class:cxxnet::MNISTIterator
LoadImage	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        inline static void LoadImage( mshadow::TensorContainer<cpu,3> &img,$/;"	f	class:cxxnet::ThreadImagePageIterator
LoadLabel	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        inline void LoadLabel( void ) {$/;"	f	class:cxxnet::MNISTIterator
LoadMNIST	./mshadow/example/neuralnet/util.h	/^inline void LoadMNIST( const char *path_img, const char *path_label,$/;"	f
LoadModel	./cxxnet/core/cxxnet_core.h	/^        virtual void LoadModel(mshadow::utils::IStream &fi) {}$/;"	f	class:cxxnet::ILayer
LoadModel	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void LoadModel(mshadow::utils::IStream &fi) {$/;"	f	struct:cxxnet::LayerPatch
LoadModel	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void LoadModel(mshadow::utils::IStream &fi){$/;"	f	class:cxxnet::ConvolutionLayer
LoadModel	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void LoadModel(mshadow::utils::IStream &fi){$/;"	f	class:cxxnet::FullConnectLayer
LoadModel	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^        virtual void LoadModel(mshadow::utils::IStream &fi) {$/;"	f	struct:cxxnet::PairTestLayer
LoadModel	./cxxnet/cxxnet_main.cpp	/^        inline void LoadModel( void ){$/;"	f	class:cxxnet::CXXNetLearnTask	file:
LoadModel	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline void LoadModel( mshadow::utils::IStream &fi ) {$/;"	f	struct:cxxnet::NeuralNet
LoadModel	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        virtual void LoadModel( mshadow::utils::IStream &fi ) {$/;"	f	class:cxxnet::CXXAvgNetTrainer
LoadModel	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        virtual void LoadModel( mshadow::utils::IStream &fi ) {$/;"	f	class:cxxnet::CXXNetTrainer
LoadModel	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        virtual void LoadModel( mshadow::utils::IStream &fi ) {$/;"	f	struct:cxxnet::NetMetaModel
LoadModel	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        virtual void LoadModel(mshadow::utils::IStream &fi) {$/;"	f	class:cxxnet::CaffeLayer
LoadNext	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^            inline bool LoadNext( DataBatch &val ){$/;"	f	struct:cxxnet::ThreadBufferIterator::Factory
LoadNext	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^            inline bool LoadNext( PagePtr &val ){$/;"	f	struct:cxxnet::ThreadImagePageIterator::Factory
LoadNextPage	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        inline void LoadNextPage( void ){$/;"	f	class:cxxnet::ThreadImagePageIterator
LoaderEntry	./cxxnet/utils/cxxnet_thread_buffer.h	/^            inline static CXXNET_THREAD_PREFIX LoaderEntry( void *pthread ){$/;"	f	class:cxxnet::utils::ThreadBuffer
LowerAlign	./mshadow/mshadow/tensor_sse-inl.hpp	/^        inline index_t LowerAlign( index_t size, size_t fsize ){$/;"	f	namespace:mshadow::sse2
MNISTIterator	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        MNISTIterator( void ){$/;"	f	class:cxxnet::MNISTIterator
MNISTIterator	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^    class MNISTIterator: public IIterator<DataBatch> {$/;"	c	namespace:cxxnet
MSHADOW_ALLOC_PAD	./mshadow/mshadow/tensor_base.h	23;"	d
MSHADOW_CINLINE	./mshadow/mshadow/tensor_base.h	101;"	d
MSHADOW_CONSTEXPR	./mshadow/mshadow/tensor_base.h	104;"	d
MSHADOW_CONSTEXPR	./mshadow/mshadow/tensor_base.h	106;"	d
MSHADOW_MIN_PAD_RATIO	./mshadow/mshadow/tensor_base.h	32;"	d
MSHADOW_SINGLE_PRECISION	./mshadow/mshadow/tensor_base.h	55;"	d
MSHADOW_STAND_ALONE	./mshadow/mshadow/tensor_base.h	18;"	d
MSHADOW_TENSOR_BASE_H	./mshadow/mshadow/tensor_base.h	2;"	d
MSHADOW_TENSOR_CONTAINER_H	./mshadow/mshadow/tensor_container.h	2;"	d
MSHADOW_TENSOR_CPU_INL_HPP	./mshadow/mshadow/tensor_cpu-inl.hpp	2;"	d
MSHADOW_TENSOR_EXPR_ENGINE_INL_HPP	./mshadow/mshadow/tensor_expr_engine-inl.hpp	2;"	d
MSHADOW_TENSOR_EXPR_EXT_H	./mshadow/mshadow/tensor_expr_ext.h	2;"	d
MSHADOW_TENSOR_EXPR_H	./mshadow/mshadow/tensor_expr.h	2;"	d
MSHADOW_TENSOR_GPU_INL_HPP	./mshadow/mshadow/tensor_gpu-inl.hpp	2;"	d
MSHADOW_TENSOR_H	./mshadow/mshadow/tensor.h	2;"	d
MSHADOW_TENSOR_IO_H	./mshadow/mshadow/tensor_io.h	2;"	d
MSHADOW_TENSOR_RANDOM_H	./mshadow/mshadow/tensor_random.h	2;"	d
MSHADOW_TENSOR_SSE_INL_HPP	./mshadow/mshadow/tensor_sse-inl.hpp	2;"	d
MSHADOW_USE_CBLAS	./mshadow/mshadow/tensor_base.h	36;"	d
MSHADOW_USE_CBLAS	./mshadow/mshadow/tensor_base.h	43;"	d
MSHADOW_USE_CUDA	./mshadow/mshadow/tensor_base.h	38;"	d
MSHADOW_USE_CUDA	./mshadow/mshadow/tensor_base.h	51;"	d
MSHADOW_USE_MKL	./mshadow/mshadow/tensor_base.h	37;"	d
MSHADOW_USE_MKL	./mshadow/mshadow/tensor_base.h	47;"	d
MSHADOW_USE_NVML	./mshadow/mshadow/tensor_base.h	63;"	d
MSHADOW_USE_SSE	./mshadow/mshadow/tensor_base.h	59;"	d
MSHADOW_USE_SSE	./mshadow/mshadow/tensor_base.h	67;"	d
MSHADOW_USE_SSE	./mshadow/mshadow/tensor_base.h	68;"	d
MSHADOW_XINLINE	./mshadow/mshadow/tensor_base.h	96;"	d
MSHADOW_XINLINE	./mshadow/mshadow/tensor_base.h	98;"	d
MSize	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE size_t MSize(void) const {$/;"	f	struct:mshadow::Shape
MakeExp	./mshadow/mshadow/tensor_expr.h	/^        inline BinaryMapExp<OP,TA,TB, (ta|tb|type::kMapper) > MakeExp( const Exp<TA,ta> &lhs, const Exp<TB,tb> &rhs ){$/;"	f	namespace:mshadow::expr
MakeExp	./mshadow/mshadow/tensor_expr.h	/^        inline UnaryMapExp<OP,TA,(ta|type::kMapper) > MakeExp( const Exp<TA,ta> &src ){$/;"	f	namespace:mshadow::expr
MakePlan	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        inline Plan< BinaryMapExp<OP,TA,TB,etype> > MakePlan( const BinaryMapExp<OP,TA,TB,etype> &e ){$/;"	f	namespace:mshadow::expr
MakePlan	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        inline Plan< T > MakePlan( const MakeTensorExp<T,SrcExp,dim> &e ){$/;"	f	namespace:mshadow::expr
MakePlan	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        inline Plan< UnaryMapExp<OP,TA,etype> > MakePlan( const UnaryMapExp<OP,TA,etype> &e ){$/;"	f	namespace:mshadow::expr
MakePlan	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        inline Plan<ScalarExp> MakePlan( const ScalarExp &e ){$/;"	f	namespace:mshadow::expr
MakePlan	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        inline Plan<T> MakePlan( const ContainerExp<T> &e ){$/;"	f	namespace:mshadow::expr
MakeSSEPlan	./mshadow/mshadow/tensor_sse-inl.hpp	/^        inline SSEPlan< BinaryMapExp<OP,TA,TB,etype> > MakeSSEPlan( const BinaryMapExp<OP,TA,TB,etype> &e ){$/;"	f	namespace:mshadow::expr
MakeSSEPlan	./mshadow/mshadow/tensor_sse-inl.hpp	/^        inline SSEPlan< UnaryMapExp<OP,TA,etype> > MakeSSEPlan( const UnaryMapExp<OP,TA,etype> &e ){$/;"	f	namespace:mshadow::expr
MakeSSEPlan	./mshadow/mshadow/tensor_sse-inl.hpp	/^        inline SSEPlan<ScalarExp> MakeSSEPlan( const ScalarExp &e ){$/;"	f	namespace:mshadow::expr
MakeSSEPlan	./mshadow/mshadow/tensor_sse-inl.hpp	/^        inline SSEPlan<T> MakeSSEPlan( const ContainerExp<T> &e ){$/;"	f	namespace:mshadow::expr
MakeSSEPlan	./mshadow/mshadow/tensor_sse-inl.hpp	/^        inline SSEPlan<T> MakeSSEPlan( const MakeTensorExp<T,cpu,dim> &e ){$/;"	f	namespace:mshadow::expr
MakeTensorExp	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct MakeTensorExp: public Exp< MakeTensorExp<SubType,SrcExp,dim>, type::kMapper >{$/;"	s	namespace:mshadow::expr
Map	./cxxnet/core/cxxnet_op.h	/^            MSHADOW_XINLINE static real_t Map(real_t a) {$/;"	f	struct:cxxnet::op::bnll
Map	./cxxnet/core/cxxnet_op.h	/^            MSHADOW_XINLINE static real_t Map(real_t a) {$/;"	f	struct:cxxnet::op::bnll_grad
Map	./cxxnet/core/cxxnet_op.h	/^            MSHADOW_XINLINE static real_t Map(real_t a) {$/;"	f	struct:cxxnet::op::relu
Map	./cxxnet/core/cxxnet_op.h	/^            MSHADOW_XINLINE static real_t Map(real_t a) {$/;"	f	struct:cxxnet::op::relu_grad
Map	./cxxnet/core/cxxnet_op.h	/^            MSHADOW_XINLINE static real_t Map(real_t a) {$/;"	f	struct:cxxnet::op::sigmoid
Map	./cxxnet/core/cxxnet_op.h	/^            MSHADOW_XINLINE static real_t Map(real_t a) {$/;"	f	struct:cxxnet::op::sigmoid_grad
Map	./cxxnet/core/cxxnet_op.h	/^            MSHADOW_XINLINE static real_t Map(real_t a) {$/;"	f	struct:cxxnet::op::softplus
Map	./cxxnet/core/cxxnet_op.h	/^            MSHADOW_XINLINE static real_t Map(real_t a) {$/;"	f	struct:cxxnet::op::softplus_grad
Map	./cxxnet/core/cxxnet_op.h	/^            MSHADOW_XINLINE static real_t Map(real_t a) {$/;"	f	struct:cxxnet::op::square
Map	./cxxnet/core/cxxnet_op.h	/^            MSHADOW_XINLINE static real_t Map(real_t a) {$/;"	f	struct:cxxnet::op::tanh
Map	./cxxnet/core/cxxnet_op.h	/^            MSHADOW_XINLINE static real_t Map(real_t a) {$/;"	f	struct:cxxnet::op::tanh_grad
Map	./cxxnet/core/cxxnet_op.h	/^            MSHADOW_XINLINE static real_t Map(real_t a, real_t b) {$/;"	f	struct:cxxnet::op::power
Map	./cxxnet/core/cxxnet_op.h	/^            MSHADOW_XINLINE static real_t Map(real_t a, real_t b) {$/;"	f	struct:cxxnet::op::threshold
Map	./mshadow/example/defop.cpp	/^    MSHADOW_XINLINE static real_t Map(real_t a) {$/;"	f	struct:addone
Map	./mshadow/example/defop.cpp	/^    MSHADOW_XINLINE static real_t Map(real_t a,real_t b) {$/;"	f	struct:maxoftwo
Map	./mshadow/example/exp-template/exp_template_op.cpp	/^    inline static float Map(float a, float b){$/;"	f	struct:maximum
Map	./mshadow/example/exp-template/exp_template_op.cpp	/^    inline static float Map(float a, float b){$/;"	f	struct:mul
Map	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_XINLINE static real_t Map(real_t a) {$/;"	f	struct:mshadow::op::identity
Map	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_XINLINE static real_t Map(real_t a, real_t b) {$/;"	f	struct:mshadow::op::div
Map	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_XINLINE static real_t Map(real_t a, real_t b) {$/;"	f	struct:mshadow::op::minus
Map	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_XINLINE static real_t Map(real_t a, real_t b) {$/;"	f	struct:mshadow::op::mul
Map	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_XINLINE static real_t Map(real_t a, real_t b) {$/;"	f	struct:mshadow::op::plus
Map	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_XINLINE static real_t Map(real_t a, real_t b) {$/;"	f	struct:mshadow::op::right
Map	./mshadow/mshadow/tensor_cpu-inl.hpp	/^        inline static void Map(Tensor<cpu,dim> dst, const expr::Exp<E,etype> &exp ){$/;"	f	struct:mshadow::MapExpCPUEngine
Map	./mshadow/mshadow/tensor_sse-inl.hpp	/^            MSHADOW_CINLINE static FVec<double> Map( const FVec<double> &lhs, const FVec<double> &rhs ){$/;"	f	struct:mshadow::sse2::SSEOp
Map	./mshadow/mshadow/tensor_sse-inl.hpp	/^            MSHADOW_CINLINE static FVec<double> Map( const FVec<double> &src ){$/;"	f	struct:mshadow::sse2::SSEOp
Map	./mshadow/mshadow/tensor_sse-inl.hpp	/^            MSHADOW_CINLINE static FVec<float> Map( const FVec<float> &lhs, const FVec<float> &rhs ){$/;"	f	struct:mshadow::sse2::SSEOp
Map	./mshadow/mshadow/tensor_sse-inl.hpp	/^            MSHADOW_CINLINE static FVec<float> Map( const FVec<float> &src ){$/;"	f	struct:mshadow::sse2::SSEOp
MapExp	./mshadow/mshadow/tensor_cpu-inl.hpp	/^    inline void MapExp(Tensor<cpu,dim> dst, const expr::Exp<E,etype> &exp ){$/;"	f	namespace:mshadow
MapExp	./mshadow/mshadow/tensor_gpu-inl.hpp	/^    inline void MapExp(Tensor<gpu,dim> dst, const expr::Exp<E,etype> &exp ){$/;"	f	namespace:mshadow
MapExpCPUEngine	./mshadow/mshadow/tensor_cpu-inl.hpp	/^    struct MapExpCPUEngine<false,SV,dim,E,etype>{$/;"	s	namespace:mshadow
MapExpCPUEngine	./mshadow/mshadow/tensor_cpu-inl.hpp	/^    struct MapExpCPUEngine<true,SV,dim,E,etype>{$/;"	s	namespace:mshadow
MapPlan	./mshadow/mshadow/tensor_cpu-inl.hpp	/^    inline void MapPlan(Tensor<cpu,dim> _dst, const expr::Plan<E> &plan){$/;"	f	namespace:mshadow
MapPlan	./mshadow/mshadow/tensor_gpu-inl.hpp	/^    inline void MapPlan(Tensor<gpu,dim> _dst, const expr::Plan<E> &plan){$/;"	f	namespace:mshadow
MapReduceKeepHighDim	./mshadow/mshadow/tensor_cpu-inl.hpp	/^    inline void MapReduceKeepHighDim( Tensor<cpu,1> dst, const expr::Exp<E,etype> &exp, real_t scale ){$/;"	f	namespace:mshadow
MapReduceKeepHighDim	./mshadow/mshadow/tensor_gpu-inl.hpp	/^    inline void MapReduceKeepHighDim( Tensor<gpu,1> dst, const expr::Exp<E,etype> &exp, real_t scale ){$/;"	f	namespace:mshadow
MapReduceKeepLowest	./mshadow/mshadow/tensor_cpu-inl.hpp	/^    inline void MapReduceKeepLowest( Tensor<cpu,1> dst, const expr::Exp<E,etype> &exp, real_t scale ){$/;"	f	namespace:mshadow
MapReduceKeepLowest	./mshadow/mshadow/tensor_gpu-inl.hpp	/^    inline void MapReduceKeepLowest( Tensor<gpu,1> dst, const expr::Exp<E,etype> &exp, real_t scale ){$/;"	f	namespace:mshadow
MapSSEPlan	./mshadow/mshadow/tensor_sse-inl.hpp	/^    inline void MapSSEPlan(Tensor<cpu,dim> _dst, const expr::SSEPlan<E> &plan){        $/;"	f	namespace:mshadow
MetricBase	./cxxnet/utils/cxxnet_metric.h	/^            MetricBase( const char *name ){$/;"	f	struct:cxxnet::utils::MetricBase
MetricBase	./cxxnet/utils/cxxnet_metric.h	/^        struct MetricBase : public IMetric{$/;"	s	namespace:cxxnet::utils
MetricCorrSqr	./cxxnet/utils/cxxnet_metric.h	/^            MetricCorrSqr( void ){$/;"	f	struct:cxxnet::utils::MetricCorrSqr
MetricCorrSqr	./cxxnet/utils/cxxnet_metric.h	/^        struct MetricCorrSqr : public IMetric{$/;"	s	namespace:cxxnet::utils
MetricError	./cxxnet/utils/cxxnet_metric.h	/^            MetricError( void ):MetricBase("error"){$/;"	f	struct:cxxnet::utils::MetricError
MetricError	./cxxnet/utils/cxxnet_metric.h	/^        struct MetricError : public MetricBase{$/;"	s	namespace:cxxnet::utils
MetricRMSE	./cxxnet/utils/cxxnet_metric.h	/^            MetricRMSE( void ):MetricBase( "rmse" ){$/;"	f	struct:cxxnet::utils::MetricRMSE
MetricRMSE	./cxxnet/utils/cxxnet_metric.h	/^        struct MetricRMSE : public MetricBase{$/;"	s	namespace:cxxnet::utils
MetricRecall	./cxxnet/utils/cxxnet_metric.h	/^            MetricRecall( const char *name ): MetricBase(name){$/;"	f	struct:cxxnet::utils::MetricRecall
MetricRecall	./cxxnet/utils/cxxnet_metric.h	/^        struct MetricRecall : public MetricBase{$/;"	s	namespace:cxxnet::utils
MetricSet	./cxxnet/utils/cxxnet_metric.h	/^        struct MetricSet{$/;"	s	namespace:cxxnet::utils
MirroringExp	./mshadow/mshadow/tensor_expr_ext.h	/^            MirroringExp( const SrcExp &src ): src_(src) {$/;"	f	struct:mshadow::expr::MirroringExp
MirroringExp	./mshadow/mshadow/tensor_expr_ext.h	/^        struct MirroringExp : public MakeTensorExp<MirroringExp<SrcExp, srcdim>, SrcExp, srcdim> {$/;"	s	namespace:mshadow::expr
NVCC	./Makefile	/^export NVCC =nvcc$/;"	m
NVCC	./make/cpu_only.mk	/^export NVCC =nvcc$/;"	m
NVCC	./mshadow/example/Makefile	/^export NVCC =nvcc$/;"	m
NVCC	./mshadow/example/neuralnet/Makefile	/^export NVCC =nvcc$/;"	m
NVCC	./tools/Makefile	/^export NVCC =nvcc$/;"	m
NVCCFLAGS	./Makefile	/^export NVCCFLAGS = --use_fast_math -g -O3 -ccbin $(CXX)$/;"	m
NVCCFLAGS	./make/cpu_only.mk	/^export NVCCFLAGS = --use_fast_math -g -O3 -ccbin $(CXX)$/;"	m
NVCCFLAGS	./mshadow/example/Makefile	/^export NVCCFLAGS = -O3 --use_fast_math -ccbin $(CXX)$/;"	m
NVCCFLAGS	./mshadow/example/neuralnet/Makefile	/^export NVCCFLAGS = -O3 --use_fast_math -ccbin $(CXX)$/;"	m
NVCCFLAGS	./tools/Makefile	/^export NVCCFLAGS = -g -O3 -ccbin $(CXX)$/;"	m
Name	./cxxnet/utils/cxxnet_metric.h	/^            virtual const char *Name( void ) const{$/;"	f	struct:cxxnet::utils::MetricBase
Name	./cxxnet/utils/cxxnet_metric.h	/^            virtual const char *Name( void ) const{$/;"	f	struct:cxxnet::utils::MetricCorrSqr
NetConfigHelper	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        NetConfigHelper( NetMetaModel &meta ):meta(meta){$/;"	f	struct:cxxnet::NetConfigHelper
NetConfigHelper	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^    struct NetConfigHelper{$/;"	s	namespace:cxxnet
NetMetaModel	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^    struct NetMetaModel{$/;"	s	namespace:cxxnet
NeuralNet	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        NeuralNet( void ): cfg(meta),rnd(0){$/;"	f	struct:cxxnet::NeuralNet
NeuralNet	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^    struct NeuralNet{$/;"	s	namespace:cxxnet
NewTensor	./mshadow/mshadow/tensor_cpu-inl.hpp	/^    inline Tensor<Device,dim> NewTensor(const Shape<dim> &shape, real_t initv, bool pad ){$/;"	f	namespace:mshadow
Next	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        virtual bool Next( void ) {$/;"	f	class:cxxnet::CIFARIterator
Next	./cxxnet/io/cxxnet_iter_img-inl.hpp	/^        virtual bool Next( void ){$/;"	f	class:cxxnet::ImageIterator
Next	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        virtual bool Next( void ) {$/;"	f	class:cxxnet::MNISTIterator
Next	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        virtual bool Next( void ){$/;"	f	class:cxxnet::BatchAdaptIterator
Next	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        virtual bool Next(){$/;"	f	class:cxxnet::ThreadBufferIterator
Next	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^        virtual bool Next( void ) {$/;"	f	class:cxxnet::SpFeatIterator
Next	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        virtual bool Next( void ){$/;"	f	class:cxxnet::ThreadImagePageIterator
Next	./cxxnet/utils/cxxnet_config.h	/^            inline bool Next( void ){$/;"	f	class:cxxnet::utils::ConfigIterator
Next	./cxxnet/utils/cxxnet_thread_buffer.h	/^            inline bool Next( Elem &elem ){$/;"	f	class:cxxnet::utils::ThreadBuffer
NextBuffer	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        inline void NextBuffer( std::vector<unsigned char> &buf ){$/;"	f	class:cxxnet::ThreadImagePageIterator
NextDouble	./cxxnet/utils/cxxnet_global_random.h	/^        inline double NextDouble(){$/;"	f	namespace:cxxnet::utils
NextDouble2	./cxxnet/utils/cxxnet_global_random.h	/^        inline double NextDouble2(){$/;"	f	namespace:cxxnet::utils
NextUInt32	./cxxnet/utils/cxxnet_global_random.h	/^        inline uint32_t NextUInt32( uint32_t n ){$/;"	f	namespace:cxxnet::utils
Node	./cxxnet/core/cxxnet_core.h	/^        Node( NodeFactory<xpu>* parent ):parent_(parent){$/;"	f	struct:cxxnet::Node
Node	./cxxnet/core/cxxnet_core.h	/^        Node( void ){$/;"	f	struct:cxxnet::Node
Node	./cxxnet/core/cxxnet_core.h	/^    struct Node {$/;"	s	namespace:cxxnet
NodeFactory	./cxxnet/core/cxxnet_core.h	/^        NodeFactory( void ){$/;"	f	class:cxxnet::NodeFactory
NodeFactory	./cxxnet/core/cxxnet_core.h	/^    class NodeFactory{$/;"	c	namespace:cxxnet
OBJ	./Makefile	/^OBJ = cxxnet_data.o cxxnet_nnet_cpu.o$/;"	m
OBJ	./make/Cblas.cpu.mk	/^OBJ = cxxnet_data.o  cxxnet_nnet_cpu.o $/;"	m
OBJ	./make/cpu_only.mk	/^OBJ = cxxnet_data.o cxxnet_nnet_cpu.o$/;"	m
OBJ	./mshadow/example/Makefile	/^OBJ =$/;"	m
OBJ	./mshadow/example/neuralnet/Makefile	/^OBJ =$/;"	m
OBJ	./tools/Makefile	/^OBJ =$/;"	m
OPType	./mshadow/mshadow/tensor_base.h	/^            typedef op::div OPType;$/;"	t	struct:mshadow::sv::divto
OPType	./mshadow/mshadow/tensor_base.h	/^            typedef op::minus OPType;$/;"	t	struct:mshadow::sv::minusto
OPType	./mshadow/mshadow/tensor_base.h	/^            typedef op::mul OPType;$/;"	t	struct:mshadow::sv::multo
OPType	./mshadow/mshadow/tensor_base.h	/^            typedef op::plus OPType;$/;"	t	struct:mshadow::sv::plusto
OPType	./mshadow/mshadow/tensor_base.h	/^            typedef op::right OPType;$/;"	t	struct:mshadow::sv::saveto
Obj	./cxxnet/utils/cxxnet_io_utils.h	/^                Obj( void * dptr, size_t sz ):dptr(dptr),sz(sz){}$/;"	f	struct:cxxnet::utils::BinaryPage::Obj
Obj	./cxxnet/utils/cxxnet_io_utils.h	/^            struct Obj{$/;"	s	class:cxxnet::utils::BinaryPage
Open	./cxxnet/utils/cxxnet_io_utils.h	/^            virtual void Open(const char *fname, const char *mode) {$/;"	f	class:cxxnet::utils::StdFile
PackColToPatchXExp	./mshadow/mshadow/tensor_expr_ext.h	/^            PackColToPatchXExp( const Tensor<Device,2> &mat, Shape<dstdim> imshape, index_t psize, index_t pstride )$/;"	f	struct:mshadow::expr::PackColToPatchXExp
PackColToPatchXExp	./mshadow/mshadow/tensor_expr_ext.h	/^        struct PackColToPatchXExp: public MakeTensorExp< PackColToPatchXExp<Device,dstdim>, Tensor<Device,2>, dstdim>{$/;"	s	namespace:mshadow::expr
PaddingExp	./mshadow/mshadow/tensor_expr_ext.h	/^            PaddingExp( const SrcExp &src, index_t pad )$/;"	f	struct:mshadow::expr::PaddingExp
PaddingExp	./mshadow/mshadow/tensor_expr_ext.h	/^        struct PaddingExp : public MakeTensorExp<PaddingExp<SrcExp, srcdim>, SrcExp, srcdim> {$/;"	s	namespace:mshadow::expr
PaddingLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        PaddingLayer(Node<xpu> &in, Node<xpu> &out)$/;"	f	class:cxxnet::PaddingLayer
PaddingLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^    class PaddingLayer : public ILayer {$/;"	c	namespace:cxxnet
PagePtr	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        struct PagePtr{$/;"	s	class:cxxnet::ThreadImagePageIterator
PairTestLayer	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^        PairTestLayer( mshadow::Random<xpu> &rnd, Node<xpu>&in, Node<xpu>& out,$/;"	f	struct:cxxnet::PairTestLayer
PairTestLayer	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^    struct PairTestLayer : public ILayer{$/;"	s	namespace:cxxnet
PairTestUpdater	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^            PairTestUpdater( IUpdater *umaster, IUpdater *uslave, const char *tag )$/;"	f	class:cxxnet::PairTestLayer::PairTestUpdater
PairTestUpdater	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^        class PairTestUpdater: public IUpdater{$/;"	c	struct:cxxnet::PairTestLayer
Param	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^            Param( void ){$/;"	f	struct:cxxnet::NetMetaModel::Param
Param	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        struct Param{$/;"	s	struct:cxxnet::NetMetaModel
Parent	./cxxnet/core/cxxnet_layer-inl.hpp	/^        typedef FullConnectLayer<xpu> Parent;$/;"	t	class:cxxnet::DropConnLayer
ParseStr	./cxxnet/utils/cxxnet_config.h	/^            inline void ParseStr( char tok[] ){$/;"	f	class:cxxnet::utils::ConfigIterator
ParseStrML	./cxxnet/utils/cxxnet_config.h	/^            inline void ParseStrML( char tok[] ){$/;"	f	class:cxxnet::utils::ConfigIterator
PartialGrad	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_XINLINE static real_t PartialGrad( real_t redres, real_t redsrc ) {$/;"	f	struct:mshadow::red::maximum
PartialGrad	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_XINLINE static real_t PartialGrad( real_t redres, real_t redsrc ) {$/;"	f	struct:mshadow::red::sum
Pin	./cxxnet/core/cxxnet_core.h	/^        inline void Pin( void ){$/;"	f	struct:cxxnet::Node
Plan	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            Plan( const Plan<SubType> &src ):src_(src){}$/;"	f	struct:mshadow::expr::Plan
Plan	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            Plan( const Plan<TA> &lhs, const Plan<TB> &rhs )$/;"	f	class:mshadow::expr::Plan
Plan	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            Plan( const Plan<TA> &src ):src_(src){}$/;"	f	class:mshadow::expr::Plan
Plan	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            Plan( const Tensor<Device,1> &t ):dptr_(t.dptr){}$/;"	f	class:mshadow::expr::Plan
Plan	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            Plan( const Tensor<Device,dim> &t )$/;"	f	class:mshadow::expr::Plan
Plan	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            Plan( real_t scalar ):scalar_(scalar){}$/;"	f	class:mshadow::expr::Plan
Plan	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        class Plan< BinaryMapExp<OP,TA,TB,etype> >{$/;"	c	namespace:mshadow::expr
Plan	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        class Plan< Tensor<Device,1> >{$/;"	c	namespace:mshadow::expr
Plan	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        class Plan< Tensor<Device,dim> >{$/;"	c	namespace:mshadow::expr
Plan	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        class Plan< UnaryMapExp<OP,TA,etype> >{$/;"	c	namespace:mshadow::expr
Plan	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        class Plan<ScalarExp>{$/;"	c	namespace:mshadow::expr
Plan	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        class Plan{$/;"	c	namespace:mshadow::expr
Plan	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct Plan< MakeTensorExp<SubType,SrcExp,dim> >{$/;"	s	namespace:mshadow::expr
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^            Plan( const Broadcast1DExp<Device,dimdst,0> &e ): dptr_( e.src_.dptr ){}$/;"	f	struct:mshadow::expr::Plan
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^            Plan( const Broadcast1DExp<Device,dimdst,dimcast> &e )$/;"	f	struct:mshadow::expr::Plan
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^            Plan( const ChannelPoolingExp<Reducer, SrcExp, srcdim> &e )$/;"	f	struct:mshadow::expr::Plan
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^            Plan( const PackColToPatchXExp<Device, dstdim> &e )$/;"	f	struct:mshadow::expr::Plan
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^            Plan( const PoolingExp<Reducer, SrcExp, srcdim> &e )$/;"	f	struct:mshadow::expr::Plan
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^            Plan( const ReshapeExp<SrcExp,dimdst,1> &e )$/;"	f	struct:mshadow::expr::Plan
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^            Plan( const ReshapeExp<SrcExp,dimdst,dimsrc> &e )$/;"	f	struct:mshadow::expr::Plan
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^            Plan( const SwapAxisExp<SrcExp,dimsrc,0,a2> &e )$/;"	f	struct:mshadow::expr::Plan
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^            Plan( const SwapAxisExp<SrcExp,dimsrc,a1,a2> &e )$/;"	f	struct:mshadow::expr::Plan
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^            Plan( const UnpackPatchToColXExp<SrcExp,srcdim> &e )$/;"	f	struct:mshadow::expr::Plan
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^            Plan(const CroppingExp<SrcExp, srcdim> &e)$/;"	f	struct:mshadow::expr::Plan
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^            Plan(const MirroringExp<SrcExp, srcdim> &e)$/;"	f	struct:mshadow::expr::Plan
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^            Plan(const PaddingExp<SrcExp, srcdim> &e)$/;"	f	struct:mshadow::expr::Plan
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^            Plan(const UnPoolingExp<Reducer, Device> &e)$/;"	f	struct:mshadow::expr::Plan
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^        struct Plan< Broadcast1DExp<Device,dimdst,0> >{$/;"	s	namespace:mshadow::expr
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^        struct Plan< Broadcast1DExp<Device,dimdst,dimcast> >{$/;"	s	namespace:mshadow::expr
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^        struct Plan< ChannelPoolingExp< Reducer, SrcExp, srcdim> > {$/;"	s	namespace:mshadow::expr
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^        struct Plan< MirroringExp<SrcExp, srcdim> > {$/;"	s	namespace:mshadow::expr
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^        struct Plan< PackColToPatchXExp<Device, dstdim> >{$/;"	s	namespace:mshadow::expr
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^        struct Plan< PaddingExp<SrcExp, srcdim> > {$/;"	s	namespace:mshadow::expr
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^        struct Plan< PoolingExp< Reducer, SrcExp, srcdim> > {$/;"	s	namespace:mshadow::expr
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^        struct Plan< ReshapeExp<SrcExp,dimdst,1> >{$/;"	s	namespace:mshadow::expr
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^        struct Plan< ReshapeExp<SrcExp,dimdst,dimsrc> >{$/;"	s	namespace:mshadow::expr
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^        struct Plan< SwapAxisExp<SrcExp,dimsrc,0,a2> >{$/;"	s	namespace:mshadow::expr
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^        struct Plan< SwapAxisExp<SrcExp,dimsrc,a1,a2> >{$/;"	s	namespace:mshadow::expr
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^        struct Plan< UnpackPatchToColXExp<SrcExp,srcdim> >{$/;"	s	namespace:mshadow::expr
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^        struct Plan<CroppingExp<SrcExp, srcdim> > {$/;"	s	namespace:mshadow::expr
Plan	./mshadow/mshadow/tensor_expr_ext.h	/^        struct Plan<UnPoolingExp<Reducer, Device> > {$/;"	s	namespace:mshadow::expr
PoolingExp	./mshadow/mshadow/tensor_expr_ext.h	/^            PoolingExp( const SrcExp &src, Shape<2> pshape, index_t ksize, index_t kstride )$/;"	f	struct:mshadow::expr::PoolingExp
PoolingExp	./mshadow/mshadow/tensor_expr_ext.h	/^            PoolingExp( const SrcExp &src, index_t ksize, index_t kstride )$/;"	f	struct:mshadow::expr::PoolingExp
PoolingExp	./mshadow/mshadow/tensor_expr_ext.h	/^        struct PoolingExp: public MakeTensorExp< PoolingExp<Reducer, SrcExp,srcdim>, SrcExp, srcdim> {$/;"	s	namespace:mshadow::expr
PoolingLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        PoolingLayer(Node<xpu> &in, Node<xpu> &out)$/;"	f	class:cxxnet::PoolingLayer
PoolingLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^    class PoolingLayer : public ILayer {$/;"	c	namespace:cxxnet
Post	./cxxnet/utils/cxxnet_thread.h	/^            inline void Post(){$/;"	f	class:cxxnet::utils::Semaphore
Predict	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        virtual void Predict( std::vector<float> &preds, const DataBatch& batch ) {$/;"	f	class:cxxnet::CXXNetTrainer
PreparePredTemp	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        virtual void PreparePredTemp( const DataBatch& batch ){$/;"	f	class:cxxnet::CXXAvgNetTrainer
PreparePredTemp	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        virtual void PreparePredTemp( const DataBatch& batch ){$/;"	f	class:cxxnet::CXXNetTrainer
Print	./cxxnet/utils/cxxnet_metric.h	/^            inline void Print( FILE *fo, const char *evname ){$/;"	f	struct:cxxnet::utils::MetricSet
ProdShape	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE index_t ProdShape( int dimstart, int dimend ) const{$/;"	f	struct:mshadow::Shape
Push	./cxxnet/utils/cxxnet_io_utils.h	/^            inline bool Push( const Obj &dat ) {$/;"	f	class:cxxnet::utils::BinaryPage
RandNext	./mshadow/mshadow/tensor_random.h	/^        inline real_t RandNext( void ){$/;"	f	class:mshadow::Random
RandNext2	./mshadow/mshadow/tensor_random.h	/^        inline real_t RandNext2( void ){$/;"	f	class:mshadow::Random
Random	./mshadow/mshadow/tensor_random.h	/^        Random<cpu>( int seed ){$/;"	f	class:mshadow::Random
Random	./mshadow/mshadow/tensor_random.h	/^        Random<gpu>(int seed) {$/;"	f	class:mshadow::Random
Random	./mshadow/mshadow/tensor_random.h	/^    class Random {};$/;"	c	namespace:mshadow
Random	./mshadow/mshadow/tensor_random.h	/^    class Random<cpu> {$/;"	c	namespace:mshadow
Random	./mshadow/mshadow/tensor_random.h	/^    class Random<gpu> {$/;"	c	namespace:mshadow
Read	./cxxnet/utils/cxxnet_io_utils.h	/^            virtual size_t Read( void *ptr, size_t size ){$/;"	f	class:cxxnet::utils::StdFile
Read	./cxxnet/utils/cxxnet_io_utils.h	/^            virtual size_t Read( void *ptr, size_t size ){$/;"	f	struct:cxxnet::utils::GzFile
Read	./mshadow/mshadow/tensor_io.h	/^            virtual size_t Read( void *ptr, size_t size ){$/;"	f	class:mshadow::utils::FileStream
ReadByte	./cxxnet/utils/cxxnet_io_utils.h	/^            inline unsigned char ReadByte( void ) {$/;"	f	class:cxxnet::utils::ISeekStream
ReadInt	./cxxnet/utils/cxxnet_io_utils.h	/^            inline int ReadInt( void ) {$/;"	f	class:cxxnet::utils::ISeekStream
Reduce	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_XINLINE static void Reduce( volatile real_t& dst,  volatile real_t src ) {$/;"	f	struct:mshadow::red::maximum
Reduce	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_XINLINE static void Reduce( volatile real_t& dst,  volatile real_t src ) {$/;"	f	struct:mshadow::red::sum
ReduceTo1DExp	./mshadow/mshadow/tensor_expr_ext.h	/^            ReduceTo1DExp( const EType& src, real_t scale ):src_(src),scale_(scale){}$/;"	f	struct:mshadow::expr::ReduceTo1DExp
ReduceTo1DExp	./mshadow/mshadow/tensor_expr_ext.h	/^        struct ReduceTo1DExp: public Exp< ReduceTo1DExp<EType,Reducer, dimkeep>, type::kComplex >{$/;"	s	namespace:mshadow::expr
RegUnpin	./cxxnet/core/cxxnet_core.h	/^        inline void RegUnpin( Node<xpu> *n ){$/;"	f	class:cxxnet::NodeFactory
ReqMem	./cxxnet/core/cxxnet_core.h	/^        inline void ReqMem( mshadow::Tensor<xpu,4> &data ){$/;"	f	class:cxxnet::NodeFactory
ReshapeExp	./mshadow/mshadow/tensor_expr_ext.h	/^            ReshapeExp( const SrcExp &src, Shape<dimdst> shape ):src_(src){$/;"	f	struct:mshadow::expr::ReshapeExp
ReshapeExp	./mshadow/mshadow/tensor_expr_ext.h	/^        struct ReshapeExp: public MakeTensorExp< ReshapeExp<SrcExp,dimdst,dimsrc>, SrcExp, dimdst>{$/;"	s	namespace:mshadow::expr
Resize	./mshadow/mshadow/tensor_container.h	/^        inline void Resize( const Shape<dimension> &shape ){$/;"	f	class:mshadow::TensorContainer
Resize	./mshadow/mshadow/tensor_container.h	/^        inline void Resize( const Shape<dimension> &shape, real_t initv ){$/;"	f	class:mshadow::TensorContainer
Run	./cxxnet/cxxnet_main.cpp	/^        inline int Run( int argc, char *argv[] ){$/;"	f	class:cxxnet::CXXNetLearnTask
RunLoader	./cxxnet/utils/cxxnet_thread_buffer.h	/^            inline void RunLoader(){$/;"	f	class:cxxnet::utils::ThreadBuffer
SGDUpdater	./cxxnet/core/cxxnet_updater-inl.hpp	/^        SGDUpdater( mshadow::Tensor<xpu,dim> &w, mshadow::Tensor<xpu,dim> &dw, const char *tag )$/;"	f	class:cxxnet::SGDUpdater
SGDUpdater	./cxxnet/core/cxxnet_updater-inl.hpp	/^    class SGDUpdater : public IUpdater{$/;"	c	namespace:cxxnet
SGHMCUpdater	./cxxnet/core/cxxnet_updater-inl.hpp	/^        SGHMCUpdater( mshadow::Random<xpu> &rnd, mshadow::Tensor<xpu,dim> &w, mshadow::Tensor<xpu,dim> &dw, const char *tag )$/;"	f	class:cxxnet::SGHMCUpdater
SGHMCUpdater	./cxxnet/core/cxxnet_updater-inl.hpp	/^    class SGHMCUpdater : public IUpdater{$/;"	c	namespace:cxxnet
SSEAlignCheck	./mshadow/mshadow/tensor_expr_ext.h	/^        struct SSEAlignCheck<2, Broadcast1DExp<cpu,dimdst,0> >{$/;"	s	namespace:mshadow::expr
SSEAlignCheck	./mshadow/mshadow/tensor_sse-inl.hpp	/^        struct SSEAlignCheck< dim, BinaryMapExp<OP,TA,TB,etype> >{ $/;"	s	namespace:mshadow::expr
SSEAlignCheck	./mshadow/mshadow/tensor_sse-inl.hpp	/^        struct SSEAlignCheck< dim, ScalarExp >{$/;"	s	namespace:mshadow::expr
SSEAlignCheck	./mshadow/mshadow/tensor_sse-inl.hpp	/^        struct SSEAlignCheck< dim, UnaryMapExp<OP,TA,etype> >{$/;"	s	namespace:mshadow::expr
SSEAlignCheck	./mshadow/mshadow/tensor_sse-inl.hpp	/^        struct SSEAlignCheck< dim,Tensor<cpu,dim> >{$/;"	s	namespace:mshadow::expr
SSEAlignCheck	./mshadow/mshadow/tensor_sse-inl.hpp	/^        struct SSEAlignCheck{$/;"	s	namespace:mshadow::expr
SSECheck	./mshadow/mshadow/tensor_expr_ext.h	/^        struct SSECheck< Broadcast1DExp<cpu,dimdst,0> >{$/;"	s	namespace:mshadow::expr
SSECheck	./mshadow/mshadow/tensor_sse-inl.hpp	/^        struct SSECheck< BinaryMapExp<OP,TA,TB,etype> >{$/;"	s	namespace:mshadow::expr
SSECheck	./mshadow/mshadow/tensor_sse-inl.hpp	/^        struct SSECheck<ScalarExp>{$/;"	s	namespace:mshadow::expr
SSECheck	./mshadow/mshadow/tensor_sse-inl.hpp	/^        struct SSECheck<Tensor<cpu,dim> >{$/;"	s	namespace:mshadow::expr
SSECheck	./mshadow/mshadow/tensor_sse-inl.hpp	/^        struct SSECheck<UnaryMapExp<OP,TA,etype> >{$/;"	s	namespace:mshadow::expr
SSECheck	./mshadow/mshadow/tensor_sse-inl.hpp	/^        struct SSECheck{$/;"	s	namespace:mshadow::expr
SSEOp	./mshadow/mshadow/tensor_sse-inl.hpp	/^        struct SSEOp<op::div>{$/;"	s	namespace:mshadow::sse2
SSEOp	./mshadow/mshadow/tensor_sse-inl.hpp	/^        struct SSEOp<op::identity>{$/;"	s	namespace:mshadow::sse2
SSEOp	./mshadow/mshadow/tensor_sse-inl.hpp	/^        struct SSEOp<op::minus>{$/;"	s	namespace:mshadow::sse2
SSEOp	./mshadow/mshadow/tensor_sse-inl.hpp	/^        struct SSEOp<op::mul>{$/;"	s	namespace:mshadow::sse2
SSEOp	./mshadow/mshadow/tensor_sse-inl.hpp	/^        struct SSEOp<op::plus>{$/;"	s	namespace:mshadow::sse2
SSEOp	./mshadow/mshadow/tensor_sse-inl.hpp	/^        struct SSEOp{$/;"	s	namespace:mshadow::sse2
SSEPlan	./mshadow/mshadow/tensor_expr_ext.h	/^            SSEPlan( const Broadcast1DExp<cpu,dimdst,0> &t )$/;"	f	class:mshadow::expr::SSEPlan
SSEPlan	./mshadow/mshadow/tensor_expr_ext.h	/^        class SSEPlan< Broadcast1DExp<cpu,dimdst,0> >{$/;"	c	namespace:mshadow::expr
SSEPlan	./mshadow/mshadow/tensor_sse-inl.hpp	/^            SSEPlan( const SSEPlan<TA> &lhs, const SSEPlan<TB> &rhs )$/;"	f	class:mshadow::expr::SSEPlan
SSEPlan	./mshadow/mshadow/tensor_sse-inl.hpp	/^            SSEPlan( const SSEPlan<TA> &src ):src_(src){}$/;"	f	class:mshadow::expr::SSEPlan
SSEPlan	./mshadow/mshadow/tensor_sse-inl.hpp	/^            SSEPlan( const Tensor<Device,dim> &t )$/;"	f	class:mshadow::expr::SSEPlan
SSEPlan	./mshadow/mshadow/tensor_sse-inl.hpp	/^            SSEPlan( real_t scalar ):scalar_(scalar){}$/;"	f	class:mshadow::expr::SSEPlan
SSEPlan	./mshadow/mshadow/tensor_sse-inl.hpp	/^        class SSEPlan {$/;"	c	namespace:mshadow::expr
SSEPlan	./mshadow/mshadow/tensor_sse-inl.hpp	/^        class SSEPlan< BinaryMapExp<OP,TA,TB,etype> >{$/;"	c	namespace:mshadow::expr
SSEPlan	./mshadow/mshadow/tensor_sse-inl.hpp	/^        class SSEPlan< Tensor<Device,dim> >{$/;"	c	namespace:mshadow::expr
SSEPlan	./mshadow/mshadow/tensor_sse-inl.hpp	/^        class SSEPlan< UnaryMapExp<OP,TA,etype> >{$/;"	c	namespace:mshadow::expr
SSEPlan	./mshadow/mshadow/tensor_sse-inl.hpp	/^        class SSEPlan<ScalarExp>{$/;"	c	namespace:mshadow::expr
SampleGamma	./cxxnet/utils/cxxnet_global_random.h	/^        inline double SampleGamma( double alpha, double beta ) {$/;"	f	namespace:cxxnet::utils
SampleGaussian	./mshadow/mshadow/tensor_random.h	/^        inline void SampleGaussian( Tensor<cpu, dim> &dst, real_t mu = 0.0f, real_t sigma = 1.0f ) {$/;"	f	class:mshadow::Random
SampleGaussian	./mshadow/mshadow/tensor_random.h	/^        inline void SampleGaussian(Tensor<gpu, dim> &dst, real_t mu = 0.0f, real_t sigma = 1.0f) {$/;"	f	class:mshadow::Random
SampleNormal	./cxxnet/utils/cxxnet_global_random.h	/^        inline double SampleNormal(){$/;"	f	namespace:cxxnet::utils
SampleNormal2D	./mshadow/mshadow/tensor_random.h	/^        inline void SampleNormal2D( real_t &xx, real_t &yy ){$/;"	f	class:mshadow::Random
SampleUniform	./mshadow/mshadow/tensor_random.h	/^        inline void SampleUniform( Tensor<cpu, dim> &dst, real_t a=0.0f, real_t b=1.0f ) {$/;"	f	class:mshadow::Random
SampleUniform	./mshadow/mshadow/tensor_random.h	/^        inline void SampleUniform(Tensor<gpu, dim> &dst, real_t a=0.0f, real_t b=1.0f) {$/;"	f	class:mshadow::Random
Save	./cxxnet/utils/cxxnet_io_utils.h	/^            inline void Save( utils::IStream &fo ) {$/;"	f	class:cxxnet::utils::BinaryPage
Save	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_XINLINE static void Save(real_t& a, real_t b) {$/;"	f	struct:mshadow::sv::divto
Save	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_XINLINE static void Save(real_t& a, real_t b) {$/;"	f	struct:mshadow::sv::minusto
Save	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_XINLINE static void Save(real_t& a, real_t b) {$/;"	f	struct:mshadow::sv::multo
Save	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_XINLINE static void Save(real_t& a, real_t b) {$/;"	f	struct:mshadow::sv::plusto
Save	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_XINLINE static void Save(real_t& a, real_t b) {$/;"	f	struct:mshadow::sv::saveto
Save	./mshadow/mshadow/tensor_sse-inl.hpp	/^            MSHADOW_CINLINE static void Save( TFloat *dst, const FVec<TFloat> &src ){$/;"	f	struct:mshadow::sse2::Saver
SaveBinary	./mshadow/mshadow/tensor_container.h	/^        inline void SaveBinary( TStream &fo ) const{$/;"	f	class:mshadow::TensorContainer
SaveBinary	./mshadow/mshadow/tensor_io.h	/^    inline void SaveBinary( TStream &fo, const Tensor<cpu,dim> &src_ ){$/;"	f	namespace:mshadow
SaveBinary	./mshadow/mshadow/tensor_io.h	/^    inline void SaveBinary( TStream &fo, const Tensor<gpu,dim> &src ){$/;"	f	namespace:mshadow
SaveModel	./cxxnet/core/cxxnet_core.h	/^        virtual void SaveModel(mshadow::utils::IStream &fo) const {}$/;"	f	class:cxxnet::ILayer
SaveModel	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void SaveModel(mshadow::utils::IStream &fo) const {$/;"	f	struct:cxxnet::LayerPatch
SaveModel	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void SaveModel(mshadow::utils::IStream &fo) const{$/;"	f	class:cxxnet::ConvolutionLayer
SaveModel	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void SaveModel(mshadow::utils::IStream &fo) const{$/;"	f	class:cxxnet::FullConnectLayer
SaveModel	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^        virtual void SaveModel(mshadow::utils::IStream &fo) const {$/;"	f	struct:cxxnet::PairTestLayer
SaveModel	./cxxnet/cxxnet_main.cpp	/^        inline void SaveModel( void ){$/;"	f	class:cxxnet::CXXNetLearnTask	file:
SaveModel	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline void SaveModel( mshadow::utils::IStream &fo ) const {$/;"	f	struct:cxxnet::NeuralNet
SaveModel	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        virtual void SaveModel( mshadow::utils::IStream &fo ) const {$/;"	f	class:cxxnet::CXXAvgNetTrainer
SaveModel	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        virtual void SaveModel( mshadow::utils::IStream &fo ) const {$/;"	f	class:cxxnet::CXXNetTrainer
SaveModel	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        virtual void SaveModel( mshadow::utils::IStream &fo ) const {$/;"	f	struct:cxxnet::NetMetaModel
SaveModel	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        virtual void SaveModel(mshadow::utils::IStream &fo) const {$/;"	f	class:cxxnet::CaffeLayer
Saver	./mshadow/mshadow/tensor_sse-inl.hpp	/^        struct Saver<sv::saveto,TFloat>{$/;"	s	namespace:mshadow::sse2
Saver	./mshadow/mshadow/tensor_sse-inl.hpp	/^        struct Saver{$/;"	s	namespace:mshadow::sse2
ScalarExp	./mshadow/mshadow/tensor_expr.h	/^            ScalarExp( real_t scalar ):scalar_(scalar){}$/;"	f	struct:mshadow::expr::ScalarExp
ScalarExp	./mshadow/mshadow/tensor_expr.h	/^        struct ScalarExp: public Exp<ScalarExp, type::kMapper>{$/;"	s	namespace:mshadow::expr
ScheduleEpoch	./cxxnet/core/cxxnet_updater-inl.hpp	/^        inline void ScheduleEpoch( long epoch ){$/;"	f	struct:cxxnet::UpdaterParam
Seed	./mshadow/mshadow/tensor_random.h	/^        inline void Seed( int seed ){$/;"	f	class:mshadow::Random
Seek	./cxxnet/utils/cxxnet_io_utils.h	/^            virtual void Seek( size_t pos ){$/;"	f	class:cxxnet::utils::ISeekStream
Seek	./cxxnet/utils/cxxnet_io_utils.h	/^            virtual void Seek( size_t pos ){$/;"	f	class:cxxnet::utils::StdFile
Seek	./cxxnet/utils/cxxnet_io_utils.h	/^            virtual void Seek( size_t pos ){$/;"	f	struct:cxxnet::utils::GzFile
Semaphore	./cxxnet/utils/cxxnet_thread.h	/^        class Semaphore{$/;"	c	namespace:cxxnet::utils
SetData	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^            virtual void SetData(const mshadow::Tensor<cpu,2>& weight,$/;"	f	class:cxxnet::PairTestLayer::PairTestUpdater
SetData	./cxxnet/core/cxxnet_updater-inl.hpp	/^        virtual void SetData( const mshadow::Tensor<cpu,2>& weight,$/;"	f	class:cxxnet::SGDUpdater
SetData	./cxxnet/core/cxxnet_updater-inl.hpp	/^        virtual void SetData( const mshadow::Tensor<cpu,2>& weight,$/;"	f	class:cxxnet::SGHMCUpdater
SetData	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        inline void SetData( int top, const DataInst & d ){$/;"	f	class:cxxnet::BatchAdaptIterator
SetData	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^            virtual void SetData(const mshadow::Tensor<cpu,2>& weight,$/;"	f	class:cxxnet::CaffeLayer::CaffeUpdater
SetLoss	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline void SetLoss( const float* labels ){$/;"	f	class:cxxnet::CXXNetTrainer
SetLoss	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline void SetLoss( mshadow::Tensor<cpu,1> pred, float label ){$/;"	f	class:cxxnet::CXXNetTrainer
SetMemLimit	./cxxnet/core/cxxnet_core.h	/^        inline void SetMemLimit( const char *size ){$/;"	f	class:cxxnet::NodeFactory
SetParam	./cxxnet/core/cxxnet_core.h	/^        virtual void SetParam(const char *name, const char* val) {}$/;"	f	class:cxxnet::ILayer
SetParam	./cxxnet/core/cxxnet_layer-inl.hpp	/^        inline void SetParam(const char *name, const char* val) {$/;"	f	struct:cxxnet::LayerParam
SetParam	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void SetParam( const char *name, const char* val ) {$/;"	f	struct:cxxnet::LayerPatch
SetParam	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void SetParam(const char *name, const char *val) {$/;"	f	class:cxxnet::LRNLayer
SetParam	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void SetParam(const char *name, const char *val) {$/;"	f	class:cxxnet::PaddingLayer
SetParam	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void SetParam(const char *name, const char* val) {$/;"	f	class:cxxnet::PoolingLayer
SetParam	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void SetParam(const char *name, const char* val){$/;"	f	class:cxxnet::ConvolutionLayer
SetParam	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void SetParam(const char *name, const char* val){$/;"	f	class:cxxnet::DropoutLayer
SetParam	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual void SetParam(const char *name, const char* val){$/;"	f	class:cxxnet::FullConnectLayer
SetParam	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^            virtual void SetParam( const char *name, const char *val ) {$/;"	f	class:cxxnet::PairTestLayer::PairTestUpdater
SetParam	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^        virtual void SetParam( const char *name, const char* val ) {$/;"	f	struct:cxxnet::PairTestLayer
SetParam	./cxxnet/core/cxxnet_updater-inl.hpp	/^            inline void SetParam( const char *name, const char* val ) {$/;"	f	struct:cxxnet::SGHMCUpdater::HMCParam
SetParam	./cxxnet/core/cxxnet_updater-inl.hpp	/^        inline void SetParam( const char *name, const char* val ) {$/;"	f	struct:cxxnet::UpdaterParam
SetParam	./cxxnet/core/cxxnet_updater-inl.hpp	/^        virtual void SetParam( const char *name, const char *val ){$/;"	f	class:cxxnet::SGDUpdater
SetParam	./cxxnet/core/cxxnet_updater-inl.hpp	/^        virtual void SetParam( const char *name, const char *val ){$/;"	f	class:cxxnet::SGHMCUpdater
SetParam	./cxxnet/cxxnet_main.cpp	/^        inline void SetParam( const char *name , const char *val ){$/;"	f	class:cxxnet::CXXNetLearnTask
SetParam	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        virtual void SetParam( const char *name, const char *val ) {$/;"	f	class:cxxnet::CIFARIterator
SetParam	./cxxnet/io/cxxnet_iter_img-inl.hpp	/^        virtual void SetParam( const char *name, const char *val ){$/;"	f	class:cxxnet::ImageIterator
SetParam	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        virtual void SetParam( const char *name, const char *val ) {$/;"	f	class:cxxnet::MNISTIterator
SetParam	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^            inline void SetParam( const char *name, const char *val ){$/;"	f	struct:cxxnet::ThreadBufferIterator::Factory
SetParam	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        virtual void SetParam( const char *name, const char *val ){$/;"	f	class:cxxnet::BatchAdaptIterator
SetParam	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        virtual void SetParam( const char *name, const char *val ){$/;"	f	class:cxxnet::ThreadBufferIterator
SetParam	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^        virtual void SetParam( const char *name, const char *val ) {$/;"	f	class:cxxnet::SpFeatIterator
SetParam	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^            inline void SetParam( const char *name, const char *val ){}$/;"	f	struct:cxxnet::ThreadImagePageIterator::Factory
SetParam	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        virtual void SetParam( const char *name, const char *val ){$/;"	f	class:cxxnet::ThreadImagePageIterator
SetParam	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline void SetParam( const char *name, const char *val ){$/;"	f	struct:cxxnet::NetConfigHelper
SetParam	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline void SetParam( const char *name, const char *val ){$/;"	f	struct:cxxnet::NetMetaModel
SetParam	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline void SetParam( const char *name, const char *val ){$/;"	f	struct:cxxnet::NeuralNet
SetParam	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        virtual void SetParam( const char *name, const char *val ){$/;"	f	class:cxxnet::CXXAvgNetTrainer
SetParam	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        virtual void SetParam( const char *name, const char *val ){$/;"	f	class:cxxnet::CXXNetTrainer
SetParam	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^            virtual void SetParam( const char *name, const char *val ){$/;"	f	class:cxxnet::CaffeLayer::CaffeUpdater
SetParam	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        virtual void SetParam( const char *name, const char* val ) {$/;"	f	class:cxxnet::CaffeLayer
SetParam	./cxxnet/utils/cxxnet_thread_buffer.h	/^            inline void SetParam( const char *name, const char *val ){$/;"	f	class:cxxnet::utils::ThreadBuffer
Shape	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE Shape( const Shape<dimension> &s ){$/;"	f	struct:mshadow::Shape
Shape	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE Shape(void) {}$/;"	f	struct:mshadow::Shape
Shape	./mshadow/mshadow/tensor.h	/^    struct Shape {$/;"	s	namespace:mshadow
Shape1	./mshadow/mshadow/tensor.h	/^    MSHADOW_XINLINE Shape<1> Shape1( index_t s0 ){$/;"	f	namespace:mshadow
Shape2	./mshadow/mshadow/tensor.h	/^    MSHADOW_XINLINE Shape<2> Shape2( index_t s1, index_t s0 ){$/;"	f	namespace:mshadow
Shape3	./mshadow/mshadow/tensor.h	/^    MSHADOW_XINLINE Shape<3> Shape3( index_t s2, index_t s1, index_t s0 ){$/;"	f	namespace:mshadow
Shape4	./mshadow/mshadow/tensor.h	/^    MSHADOW_XINLINE Shape<4> Shape4( index_t s3, index_t s2, index_t s1, index_t s0 ){$/;"	f	namespace:mshadow
ShapeCheck	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct ShapeCheck< dim, BinaryMapExp<OP,TA,TB,etype> >{$/;"	s	namespace:mshadow::expr
ShapeCheck	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct ShapeCheck< dim,UnaryMapExp<OP,TA,etype> >{$/;"	s	namespace:mshadow::expr
ShapeCheck	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct ShapeCheck<dim,MakeTensorExp<T,SrcExp,dim> >{$/;"	s	namespace:mshadow::expr
ShapeCheck	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct ShapeCheck<dim,ScalarExp>{$/;"	s	namespace:mshadow::expr
ShapeCheck	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct ShapeCheck<dim,Tensor<Device,dim> >{$/;"	s	namespace:mshadow::expr
ShapeCheck	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct ShapeCheck{$/;"	s	namespace:mshadow::expr
Shuffle	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        inline void Shuffle( void ){$/;"	f	class:cxxnet::CIFARIterator
Shuffle	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        inline void Shuffle( void ){$/;"	f	class:cxxnet::MNISTIterator
Shuffle	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^        inline void Shuffle( void ){$/;"	f	class:cxxnet::SpFeatIterator
Shuffle	./cxxnet/utils/cxxnet_global_random.h	/^        inline static void Shuffle( T *data, size_t sz ){$/;"	f	namespace:cxxnet::utils
Shuffle	./cxxnet/utils/cxxnet_global_random.h	/^        inline static void Shuffle( std::vector<T> &data ){$/;"	f	namespace:cxxnet::utils
ShutdownTensorEngine	./mshadow/mshadow/tensor_gpu-inl.hpp	/^    inline void ShutdownTensorEngine( void ){$/;"	f	namespace:mshadow
Size	./cxxnet/utils/cxxnet_io_utils.h	/^            inline int Size( void ){$/;"	f	class:cxxnet::utils::BinaryPage
Size	./cxxnet/utils/cxxnet_io_utils.h	/^            inline size_t Size() {$/;"	f	class:cxxnet::utils::StdFile
Size	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE size_t Size(void) const{$/;"	f	struct:mshadow::Shape
SkipLine	./cxxnet/utils/cxxnet_config.h	/^            inline void SkipLine(){           $/;"	f	class:cxxnet::utils::ConfigIterator
Slice	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE Tensor<Device, 1> Slice(index_t begin, index_t end) const {$/;"	f	struct:mshadow::Tensor
Slice	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE Tensor<Device, dimension> Slice(index_t begin, index_t end) const {$/;"	f	struct:mshadow::Tensor
Softmax	./mshadow/mshadow/tensor_cpu-inl.hpp	/^    inline void Softmax( Tensor<cpu,1> dst, const Tensor<cpu,1>& energy ){$/;"	f	namespace:mshadow
Softmax	./mshadow/mshadow/tensor_cpu-inl.hpp	/^    inline void Softmax( Tensor<cpu,2> dst, const Tensor<cpu,2>& energy ){$/;"	f	namespace:mshadow
Softmax	./mshadow/mshadow/tensor_gpu-inl.hpp	/^    inline void Softmax( Tensor<gpu,2> dst, const Tensor<gpu,2>& src ){$/;"	f	namespace:mshadow
SoftmaxLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        SoftmaxLayer( mshadow::Random<xpu> &rnd, Node<xpu> &in, Node<xpu> &out )$/;"	f	class:cxxnet::SoftmaxLayer
SoftmaxLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^    class SoftmaxLayer: public ILayer{$/;"	c	namespace:cxxnet
SpFeatIterator	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^        SpFeatIterator( void ){$/;"	f	class:cxxnet::SpFeatIterator
SpFeatIterator	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^    class SpFeatIterator: public IIterator<DataBatch> {$/;"	c	namespace:cxxnet
Start	./cxxnet/utils/cxxnet_thread.h	/^            inline void Start( unsigned int __stdcall entry( void* ), void *param ){$/;"	f	class:cxxnet::utils::Thread
Start	./cxxnet/utils/cxxnet_thread.h	/^            inline void Start( void * entry( void* ), void *param ){$/;"	f	class:cxxnet::utils::Thread
StartLoader	./cxxnet/utils/cxxnet_thread_buffer.h	/^            inline void StartLoader(){$/;"	f	class:cxxnet::utils::ThreadBuffer
StartRound	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^            virtual void StartRound( int round ) {$/;"	f	class:cxxnet::PairTestLayer::PairTestUpdater
StartRound	./cxxnet/core/cxxnet_updater-inl.hpp	/^        virtual void StartRound( int round ) {$/;"	f	class:cxxnet::SGDUpdater
StartRound	./cxxnet/core/cxxnet_updater-inl.hpp	/^        virtual void StartRound( int round ) {$/;"	f	class:cxxnet::SGHMCUpdater
StartRound	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        virtual void StartRound( int round ) {$/;"	f	class:cxxnet::CXXNetTrainer
StartRound	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        virtual void StartRound( int round ) {$/;"	f	struct:cxxnet::NeuralNet
StartRound	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^            virtual void StartRound( int round ) {$/;"	f	class:cxxnet::CaffeLayer::CaffeUpdater
StdFile	./cxxnet/utils/cxxnet_io_utils.h	/^            StdFile( const char *fname, const char *mode ){$/;"	f	class:cxxnet::utils::StdFile
StdFile	./cxxnet/utils/cxxnet_io_utils.h	/^            StdFile() {}$/;"	f	class:cxxnet::utils::StdFile
StdFile	./cxxnet/utils/cxxnet_io_utils.h	/^        class StdFile: public ISeekStream{$/;"	c	namespace:cxxnet::utils
Store	./mshadow/mshadow/tensor_sse-inl.hpp	/^            inline void Store( double *dst ) const{$/;"	f	struct:mshadow::sse2::FVec
Store	./mshadow/mshadow/tensor_sse-inl.hpp	/^            inline void Store( float *dst ) const{$/;"	f	struct:mshadow::sse2::FVec
SubShape	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE Shape<kSubShape> SubShape(void) const {$/;"	f	struct:mshadow::Shape
Sum	./mshadow/mshadow/tensor_sse-inl.hpp	/^            inline double Sum( void ) const{$/;"	f	struct:mshadow::sse2::FVec
Sum	./mshadow/mshadow/tensor_sse-inl.hpp	/^            inline float Sum( void ) const{$/;"	f	struct:mshadow::sse2::FVec
SwapAxisExp	./mshadow/mshadow/tensor_expr_ext.h	/^            SwapAxisExp( const SrcExp &src ):src_(src){                $/;"	f	struct:mshadow::expr::SwapAxisExp
SwapAxisExp	./mshadow/mshadow/tensor_expr_ext.h	/^        struct SwapAxisExp: public MakeTensorExp< SwapAxisExp<SrcExp,dimsrc,a1,a2>, SrcExp, dimsrc>{$/;"	s	namespace:mshadow::expr
SwitchBuffer	./cxxnet/utils/cxxnet_thread_buffer.h	/^            inline void SwitchBuffer(){$/;"	f	class:cxxnet::utils::ThreadBuffer
Sync	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^            inline void Sync( void ){$/;"	f	class:cxxnet::PairTestLayer::PairTestUpdater
SyncLastestModel	./cxxnet/cxxnet_main.cpp	/^        inline int SyncLastestModel( void ){$/;"	f	class:cxxnet::CXXNetLearnTask	file:
SyncOuput	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline void SyncOuput( void ){$/;"	f	class:cxxnet::CXXNetTrainer
T	./mshadow/mshadow/tensor_expr.h	/^            inline const EType & T( void ) const{$/;"	f	struct:mshadow::expr::TransposeExp
T	./mshadow/mshadow/tensor_expr.h	/^            inline const TransposeExp<Container> T( void ) const{$/;"	f	class:mshadow::expr::ContainerExp
TaskPredict	./cxxnet/cxxnet_main.cpp	/^        inline void TaskPredict( void ) {$/;"	f	class:cxxnet::CXXNetLearnTask	file:
TaskTrain	./cxxnet/cxxnet_main.cpp	/^        inline void TaskTrain( void ){$/;"	f	class:cxxnet::CXXNetLearnTask	file:
Tensor	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE Tensor(const Shape<1> &shape): shape(shape) {}$/;"	f	struct:mshadow::Tensor
Tensor	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE Tensor(const Shape<dimension> &shape): shape(shape) {}$/;"	f	struct:mshadow::Tensor
Tensor	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE Tensor(real_t *dptr, Shape<1> shape) :dptr(dptr), shape(shape) {}$/;"	f	struct:mshadow::Tensor
Tensor	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE Tensor(real_t *dptr, const Shape<dimension> &shape): dptr((real_t*)dptr), shape(shape) {}$/;"	f	struct:mshadow::Tensor
Tensor	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE Tensor(void) {}$/;"	f	struct:mshadow::Tensor
Tensor	./mshadow/mshadow/tensor.h	/^    struct Tensor: public expr::ContainerExp< Tensor<Device,dimension> >{$/;"	s	namespace:mshadow
Tensor	./mshadow/mshadow/tensor.h	/^    struct Tensor<Device,1>: public expr::ContainerExp< Tensor<Device,1> >{$/;"	s	namespace:mshadow
TensorContainer	./mshadow/mshadow/tensor_container.h	/^        TensorContainer( bool pad = MSHADOW_ALLOC_PAD ){$/;"	f	class:mshadow::TensorContainer
TensorContainer	./mshadow/mshadow/tensor_container.h	/^        TensorContainer( const Shape<dimension> &shape ){$/;"	f	class:mshadow::TensorContainer
TensorContainer	./mshadow/mshadow/tensor_container.h	/^        TensorContainer( const Shape<dimension> &shape, real_t initv ){$/;"	f	class:mshadow::TensorContainer
TensorContainer	./mshadow/mshadow/tensor_container.h	/^    class TensorContainer: public Tensor<Device,dimension>{$/;"	c	namespace:mshadow
Thread	./cxxnet/utils/cxxnet_thread.h	/^        class Thread{$/;"	c	namespace:cxxnet::utils
ThreadBuffer	./cxxnet/utils/cxxnet_thread_buffer.h	/^            ThreadBuffer(){$/;"	f	class:cxxnet::utils::ThreadBuffer
ThreadBuffer	./cxxnet/utils/cxxnet_thread_buffer.h	/^        class ThreadBuffer{$/;"	c	namespace:cxxnet::utils
ThreadBufferIterator	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        ThreadBufferIterator( IIterator<DataBatch> *base ){$/;"	f	class:cxxnet::ThreadBufferIterator
ThreadBufferIterator	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^    class ThreadBufferIterator: public IIterator< DataBatch >{$/;"	c	namespace:cxxnet
ThreadExit	./cxxnet/utils/cxxnet_thread.h	/^        inline void ThreadExit( void *status ){$/;"	f	namespace:cxxnet::utils
ThreadImagePageIterator	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        ThreadImagePageIterator( void ){$/;"	f	class:cxxnet::ThreadImagePageIterator
ThreadImagePageIterator	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^    class ThreadImagePageIterator: public IIterator< DataInst >{$/;"	c	namespace:cxxnet
TransformPred	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline float TransformPred( mshadow::Tensor<cpu,1> pred ){$/;"	f	class:cxxnet::CXXNetTrainer
TransposeExp	./mshadow/mshadow/tensor_expr.h	/^            TransposeExp( const EType &e ):exp(e){}$/;"	f	struct:mshadow::expr::TransposeExp
TransposeExp	./mshadow/mshadow/tensor_expr.h	/^        struct TransposeExp: public Exp< TransposeExp<EType>, type::kComplex >{$/;"	s	namespace:mshadow::expr
TypeCheck	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct TypeCheck{$/;"	s	namespace:mshadow::expr
TypeCheckPass	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct TypeCheckPass<false>{};$/;"	s	namespace:mshadow::expr
TypeCheckPass	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^        struct TypeCheckPass<true>{$/;"	s	namespace:mshadow::expr
UnPoolingExp	./mshadow/mshadow/tensor_expr_ext.h	/^            UnPoolingExp( const Tensor<Device,4> &data_src,  const Tensor<Device,4> &data_pooled,$/;"	f	struct:mshadow::expr::UnPoolingExp
UnPoolingExp	./mshadow/mshadow/tensor_expr_ext.h	/^        struct UnPoolingExp: public MakeTensorExp< UnPoolingExp<Reducer, Device>, Tensor<Device,4>, 4> {$/;"	s	namespace:mshadow::expr
UnaryMapExp	./mshadow/mshadow/tensor_expr.h	/^            UnaryMapExp( const TA &src ):src_(src){}$/;"	f	struct:mshadow::expr::UnaryMapExp
UnaryMapExp	./mshadow/mshadow/tensor_expr.h	/^        struct UnaryMapExp: public Exp< UnaryMapExp<OP,TA,etype>, etype >{$/;"	s	namespace:mshadow::expr
UnpackPatchToColXExp	./mshadow/mshadow/tensor_expr_ext.h	/^            UnpackPatchToColXExp( const SrcExp &img, index_t psize, index_t pstride )$/;"	f	struct:mshadow::expr::UnpackPatchToColXExp
UnpackPatchToColXExp	./mshadow/mshadow/tensor_expr_ext.h	/^        struct UnpackPatchToColXExp: public MakeTensorExp< UnpackPatchToColXExp<SrcExp,srcdim>, SrcExp, 2>{$/;"	s	namespace:mshadow::expr
Unpin	./cxxnet/core/cxxnet_core.h	/^        inline void Unpin( void ){$/;"	f	struct:cxxnet::Node
Update	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^            virtual void Update( long epoch ){$/;"	f	class:cxxnet::PairTestLayer::PairTestUpdater
Update	./cxxnet/core/cxxnet_updater-inl.hpp	/^        virtual void Update( long epoch ){$/;"	f	class:cxxnet::SGDUpdater
Update	./cxxnet/core/cxxnet_updater-inl.hpp	/^        virtual void Update( long epoch ){$/;"	f	class:cxxnet::SGHMCUpdater
Update	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline void Update( void ){$/;"	f	struct:cxxnet::NeuralNet
Update	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        virtual void Update ( const DataBatch& batch ) {$/;"	f	class:cxxnet::CXXNetTrainer
Update	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^            virtual void Update( long epoch ) {$/;"	f	class:cxxnet::CaffeLayer::CaffeUpdater
UpdateHyper	./cxxnet/core/cxxnet_updater-inl.hpp	/^        virtual void UpdateHyper( void ){$/;"	f	class:cxxnet::SGHMCUpdater
UpdaterParam	./cxxnet/core/cxxnet_updater-inl.hpp	/^        UpdaterParam( void ){$/;"	f	struct:cxxnet::UpdaterParam
UpdaterParam	./cxxnet/core/cxxnet_updater-inl.hpp	/^    struct UpdaterParam{$/;"	s	namespace:cxxnet
UpperAlign	./mshadow/mshadow/tensor_sse-inl.hpp	/^        inline index_t UpperAlign( index_t size, size_t fsize ){$/;"	f	namespace:mshadow::sse2
Value	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        virtual const DataBatch &Value( void ) const {$/;"	f	class:cxxnet::CIFARIterator
Value	./cxxnet/io/cxxnet_iter_img-inl.hpp	/^        virtual const DataInst &Value( void ) const{$/;"	f	class:cxxnet::ImageIterator
Value	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        virtual const DataBatch &Value( void ) const {$/;"	f	class:cxxnet::MNISTIterator
Value	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        virtual const DataBatch &Value( void ) const{$/;"	f	class:cxxnet::BatchAdaptIterator
Value	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        virtual const DataBatch &Value() const{$/;"	f	class:cxxnet::ThreadBufferIterator
Value	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^        virtual const DataBatch &Value( void ) const {$/;"	f	class:cxxnet::SpFeatIterator
Value	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        virtual const DataInst &Value( void ) const{$/;"	f	class:cxxnet::ThreadImagePageIterator
Vec	./mshadow/example/exp-template/exp_lazy.cpp	/^    Vec (float *dptr, int len):len(len),dptr(dptr){}$/;"	f	struct:Vec
Vec	./mshadow/example/exp-template/exp_lazy.cpp	/^    Vec (void){}$/;"	f	struct:Vec
Vec	./mshadow/example/exp-template/exp_lazy.cpp	/^struct Vec {$/;"	s	file:
Vec	./mshadow/example/exp-template/exp_template.cpp	/^    Vec (float *dptr, int len):len(len),dptr(dptr){}$/;"	f	struct:Vec
Vec	./mshadow/example/exp-template/exp_template.cpp	/^    Vec (void){}$/;"	f	struct:Vec
Vec	./mshadow/example/exp-template/exp_template.cpp	/^struct Vec: public Exp<Vec>{$/;"	s	file:
Vec	./mshadow/example/exp-template/exp_template_op.cpp	/^    Vec (float *dptr, int len):len(len),dptr(dptr){}$/;"	f	struct:Vec
Vec	./mshadow/example/exp-template/exp_template_op.cpp	/^    Vec (void){}$/;"	f	struct:Vec
Vec	./mshadow/example/exp-template/exp_template_op.cpp	/^struct Vec: public Exp<Vec>{$/;"	s	file:
Wait	./cxxnet/utils/cxxnet_thread.h	/^            inline void Wait(){$/;"	f	class:cxxnet::utils::Semaphore
Warning	./cxxnet/utils/cxxnet_utils.h	/^        inline void Warning( const char *msg ){$/;"	f	namespace:cxxnet::utils
Warning	./mshadow/mshadow/tensor_base.h	/^        inline void Warning( const char *msg ){$/;"	f	namespace:mshadow::utils
Write	./cxxnet/utils/cxxnet_io_utils.h	/^            virtual void Write( const void *ptr, size_t size ) {$/;"	f	struct:cxxnet::utils::GzFile
Write	./cxxnet/utils/cxxnet_io_utils.h	/^            virtual void Write( const void *ptr, size_t size ){$/;"	f	class:cxxnet::utils::StdFile
Write	./mshadow/mshadow/tensor_io.h	/^            virtual void Write( const void *ptr, size_t size ){$/;"	f	class:mshadow::utils::FileStream
_CRT_SECURE_NO_DEPRECATE	./cxxnet/cxxnet_main.cpp	2;"	d	file:
_CRT_SECURE_NO_DEPRECATE	./cxxnet/io/cxxnet_data.cpp	2;"	d	file:
_CRT_SECURE_NO_DEPRECATE	./cxxnet/nnet/cxxnet_nnet.cpp	2;"	d	file:
_CRT_SECURE_NO_WARNINGS	./cxxnet/cxxnet_main.cpp	1;"	d	file:
_CRT_SECURE_NO_WARNINGS	./cxxnet/io/cxxnet_data.cpp	1;"	d	file:
_CRT_SECURE_NO_WARNINGS	./cxxnet/nnet/cxxnet_nnet.cpp	1;"	d	file:
_CRT_SECURE_NO_WARNINGS	./cxxnet/utils/cxxnet_utils.h	9;"	d
_FILE_OFFSET_BITS	./cxxnet/utils/cxxnet_utils.h	26;"	d
__assign	./mshadow/mshadow/tensor_expr.h	/^            inline Container &__assign( const Exp<E,type::kComplex> &exp ){$/;"	f	class:mshadow::expr::ContainerExp
__assign	./mshadow/mshadow/tensor_expr.h	/^            inline Container &__assign( const Exp<E,type::kMapper> &exp ){$/;"	f	class:mshadow::expr::ContainerExp
__assign	./mshadow/mshadow/tensor_expr.h	/^            inline Container &__assign( real_t s ){$/;"	f	class:mshadow::expr::ContainerExp
addone	./mshadow/example/defop.cpp	/^struct addone{$/;"	s	file:
all	./Makefile	/^all: $(BIN) $(OBJ) $(CUBIN) $(CUOBJ)$/;"	t
all	./make/Cblas.cpu.mk	/^all: $(BIN) $(OBJ) $/;"	t
all	./make/cpu_only.mk	/^all: $(BIN) $(OBJ) $(CUBIN) $(CUOBJ)$/;"	t
all	./mshadow/example/Makefile	/^all: $(BIN) $(OBJ) $(CUBIN) $(CUOBJ)$/;"	t
all	./mshadow/example/exp-template/Makefile	/^all: $(BIN) $/;"	t
all	./mshadow/example/neuralnet/Makefile	/^all: $(BIN) $(OBJ) $(CUBIN) $(CUOBJ)$/;"	t
all	./tools/Makefile	/^all: $(BIN) $(OBJ) $(CUBIN) $(CUOBJ)$/;"	t
alpha_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        real_t alpha_;$/;"	m	class:cxxnet::LRNLayer
avg_pred	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        mshadow::TensorContainer<cpu,2> avg_pred;$/;"	m	class:cxxnet::CXXAvgNetTrainer
backup_	./cxxnet/core/cxxnet_core.h	/^        mshadow::Tensor<cpu,4> backup_;$/;"	m	struct:cxxnet::Node
base_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        ILayer *base_;$/;"	m	struct:cxxnet::LayerPatch
base_	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^            IIterator< DataBatch > *base_;$/;"	m	struct:cxxnet::ThreadBufferIterator::Factory
base_	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        IIterator<DataInst> *base_;$/;"	m	class:cxxnet::BatchAdaptIterator
base_	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^            IUpdater *base_;$/;"	m	class:cxxnet::CaffeLayer::CaffeUpdater
base_	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        caffe::Layer<real_t>* base_;$/;"	m	class:cxxnet::CaffeLayer
base_lr_	./cxxnet/core/cxxnet_updater-inl.hpp	/^        float base_lr_;$/;"	m	struct:cxxnet::UpdaterParam
basic	./mshadow/example/Makefile	/^basic: basic.cpp$/;"	t
batch_size	./cxxnet/io/cxxnet_data.h	/^        mshadow::index_t batch_size;$/;"	m	struct:cxxnet::DataBatch
batch_size	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        int batch_size;$/;"	m	struct:cxxnet::NetConfigHelper
batch_size_	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        index_t batch_size_;$/;"	m	class:cxxnet::CIFARIterator
batch_size_	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        index_t batch_size_;$/;"	m	class:cxxnet::MNISTIterator
batch_size_	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^            mshadow::index_t batch_size_;$/;"	m	struct:cxxnet::ThreadBufferIterator::Factory
batch_size_	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        index_t batch_size_;$/;"	m	class:cxxnet::BatchAdaptIterator
batch_size_	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^        index_t batch_size_;$/;"	m	class:cxxnet::SpFeatIterator
batch_size_	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^            int batch_size_;$/;"	m	class:cxxnet::CaffeLayer::CaffeUpdater
batch_size_	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        int batch_size_;$/;"	m	class:cxxnet::CaffeLayer
beta_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        real_t beta_;$/;"	m	class:cxxnet::LRNLayer
bias_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::TensorContainer<xpu,1> bias_;$/;"	m	class:cxxnet::ConvolutionLayer
bias_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::TensorContainer<xpu,1> bias_;$/;"	m	class:cxxnet::FullConnectLayer
bin/cxxnet	./Makefile	/^bin\/cxxnet: cxxnet\/cxxnet_main.cpp cxxnet_data.o cxxnet_nnet_cpu.o cxxnet_nnet_gpu.o$/;"	t
bin/cxxnet	./make/cpu_only.mk	/^bin\/cxxnet: cxxnet\/cxxnet_main.cpp cxxnet_data.o cxxnet_nnet_cpu.o$/;"	t
blb_	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^            caffe::Blob<real_t> * blb_;$/;"	m	class:cxxnet::CaffeLayer::CaffeUpdater
blb_in_	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        caffe::Blob<real_t>* blb_in_;$/;"	m	class:cxxnet::CaffeLayer
blb_out_	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        caffe::Blob<real_t>* blb_out_;$/;"	m	class:cxxnet::CaffeLayer
bnll	./cxxnet/core/cxxnet_op.h	/^        struct bnll {$/;"	s	namespace:cxxnet::op
bnll_grad	./cxxnet/core/cxxnet_op.h	/^        struct bnll_grad {$/;"	s	namespace:cxxnet::op
broadcast	./mshadow/mshadow/tensor_expr_ext.h	/^        inline Broadcast1DExp<Device,dimdst,dimcast> broadcast( const Tensor<Device,1> &src, Shape<dimdst> shape ){$/;"	f	namespace:mshadow::expr
bufA	./cxxnet/utils/cxxnet_thread_buffer.h	/^            std::vector<Elem> bufA, bufB;$/;"	m	class:cxxnet::utils::ThreadBuffer
bufB	./cxxnet/utils/cxxnet_thread_buffer.h	/^            std::vector<Elem> bufA, bufB;$/;"	m	class:cxxnet::utils::ThreadBuffer
buf_	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        std::vector<unsigned char> buf_;$/;"	m	class:cxxnet::ThreadImagePageIterator
buf_index	./cxxnet/utils/cxxnet_thread_buffer.h	/^            int buf_index;$/;"	m	class:cxxnet::utils::ThreadBuffer
buf_size	./cxxnet/utils/cxxnet_thread_buffer.h	/^            int  buf_size;$/;"	m	class:cxxnet::utils::ThreadBuffer
buffer_	./mshadow/mshadow/tensor_random.h	/^        TensorContainer<cpu,1> buffer_;$/;"	m	class:mshadow::Random
buffer_	./mshadow/mshadow/tensor_random.h	/^        TensorContainer<gpu, 1> buffer_;$/;"	m	class:mshadow::Random
cfg	./cxxnet/cxxnet_main.cpp	/^        std::vector< std::pair< std::string, std::string> > cfg;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
cfg	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        NetConfigHelper cfg;$/;"	m	struct:cxxnet::NeuralNet
ch_buf	./cxxnet/utils/cxxnet_config.h	/^            char ch_buf;$/;"	m	class:cxxnet::utils::ConfigIterator
channel_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t channel_, height_, width_, hnsize_;$/;"	m	struct:mshadow::expr::Plan
chpool	./mshadow/mshadow/tensor_expr_ext.h	/^        inline ChannelPoolingExp<Reducer,SrcExp, ExpInfo<SrcExp>::kDim > chpool( const Exp<SrcExp,etype> &src, index_t nsize ) {$/;"	f	namespace:mshadow::expr
clean	./Makefile	/^clean:$/;"	t
clean	./make/Cblas.cpu.mk	/^clean:$/;"	t
clean	./make/cpu_only.mk	/^clean:$/;"	t
clean	./mshadow/example/Makefile	/^clean:$/;"	t
clean	./mshadow/example/exp-template/Makefile	/^clean:$/;"	t
clean	./mshadow/example/neuralnet/Makefile	/^clean:$/;"	t
clean	./tools/Makefile	/^clean:$/;"	t
cnt_inst	./cxxnet/utils/cxxnet_metric.h	/^            long   cnt_inst;$/;"	m	struct:cxxnet::utils::MetricBase
cnt_inst	./cxxnet/utils/cxxnet_metric.h	/^            long   cnt_inst;$/;"	m	struct:cxxnet::utils::MetricCorrSqr
continue_training	./cxxnet/cxxnet_main.cpp	/^        int continue_training;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
convnet	./mshadow/example/neuralnet/Makefile	/^convnet: convnet.cu$/;"	t
cpu	./cxxnet/core/cxxnet_core.h	/^    typedef mshadow::cpu cpu;$/;"	t	namespace:cxxnet
cpu	./cxxnet/io/cxxnet_data.cpp	/^    typedef mshadow::cpu cpu;$/;"	t	namespace:cxxnet	file:
cpu	./mshadow/mshadow/tensor.h	/^    struct cpu {$/;"	s	namespace:mshadow
crop	./mshadow/mshadow/tensor_expr_ext.h	/^         inline CroppingExp<SrcExp, ExpInfo<SrcExp>::kDim> crop( const Exp<SrcExp, etype> &src, Shape<2> oshape ) {$/;"	f	namespace:mshadow::expr
crop	./mshadow/mshadow/tensor_expr_ext.h	/^         inline CroppingExp<SrcExp, ExpInfo<SrcExp>::kDim> crop( const Exp<SrcExp, etype> &src, Shape<2> oshape, index_t start_height, index_t start_width ) {$/;"	f	namespace:mshadow::expr
current_buf	./cxxnet/utils/cxxnet_thread_buffer.h	/^            int current_buf;$/;"	m	class:cxxnet::utils::ThreadBuffer
cxxnet	./cxxnet/core/cxxnet_core.h	/^namespace cxxnet {$/;"	n
cxxnet	./cxxnet/core/cxxnet_layer-inl.hpp	/^namespace cxxnet {$/;"	n
cxxnet	./cxxnet/core/cxxnet_layer-inl.hpp	/^namespace cxxnet{$/;"	n
cxxnet	./cxxnet/core/cxxnet_op.h	/^namespace cxxnet {$/;"	n
cxxnet	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^namespace cxxnet{$/;"	n
cxxnet	./cxxnet/core/cxxnet_updater-inl.hpp	/^namespace cxxnet{$/;"	n
cxxnet	./cxxnet/cxxnet_main.cpp	/^namespace cxxnet{$/;"	n	file:
cxxnet	./cxxnet/io/cxxnet_data.cpp	/^namespace cxxnet {$/;"	n	file:
cxxnet	./cxxnet/io/cxxnet_data.cpp	/^namespace cxxnet{$/;"	n	file:
cxxnet	./cxxnet/io/cxxnet_data.h	/^namespace cxxnet {$/;"	n
cxxnet	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^namespace cxxnet {$/;"	n
cxxnet	./cxxnet/io/cxxnet_iter_img-inl.hpp	/^namespace cxxnet{$/;"	n
cxxnet	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^namespace cxxnet {$/;"	n
cxxnet	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^namespace cxxnet {$/;"	n
cxxnet	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^namespace cxxnet{$/;"	n
cxxnet	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^namespace cxxnet {$/;"	n
cxxnet	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^namespace cxxnet{$/;"	n
cxxnet	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^namespace cxxnet {$/;"	n
cxxnet	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^namespace cxxnet{$/;"	n
cxxnet	./cxxnet/nnet/cxxnet_nnet.cpp	/^namespace cxxnet {$/;"	n	file:
cxxnet	./cxxnet/nnet/cxxnet_nnet.h	/^namespace cxxnet {$/;"	n
cxxnet	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^namespace cxxnet{$/;"	n
cxxnet	./cxxnet/utils/cxxnet_config.h	/^namespace cxxnet{$/;"	n
cxxnet	./cxxnet/utils/cxxnet_global_random.h	/^namespace cxxnet{$/;"	n
cxxnet	./cxxnet/utils/cxxnet_io_utils.h	/^namespace cxxnet {$/;"	n
cxxnet	./cxxnet/utils/cxxnet_io_utils.h	/^namespace cxxnet{$/;"	n
cxxnet	./cxxnet/utils/cxxnet_metric.h	/^namespace cxxnet{$/;"	n
cxxnet	./cxxnet/utils/cxxnet_thread.h	/^namespace cxxnet{     $/;"	n
cxxnet	./cxxnet/utils/cxxnet_thread.h	/^namespace cxxnet{$/;"	n
cxxnet	./cxxnet/utils/cxxnet_thread_buffer.h	/^namespace cxxnet{    $/;"	n
cxxnet	./cxxnet/utils/cxxnet_utils.h	/^namespace cxxnet{$/;"	n
cxxnet_data.o	./Makefile	/^cxxnet_data.o: cxxnet\/io\/cxxnet_data.cpp cxxnet\/io\/*.hpp cxxnet\/utils\/cxxnet_io_utils.h$/;"	t
cxxnet_data.o	./make/Cblas.cpu.mk	/^cxxnet_data.o: ..\/cxxnet\/io\/cxxnet_data.cpp ..\/cxxnet\/io\/*.hpp ..\/cxxnet\/utils\/cxxnet_io_utils.h$/;"	t
cxxnet_data.o	./make/cpu_only.mk	/^cxxnet_data.o: cxxnet\/io\/cxxnet_data.cpp cxxnet\/io\/*.hpp cxxnet\/utils\/cxxnet_io_utils.h$/;"	t
cxxnet_learner.cpu	./make/Cblas.cpu.mk	/^cxxnet_learner.cpu: ..\/cxxnet\/cxxnet_main.cpp cxxnet_data.o cxxnet_nnet_cpu.o$/;"	t
cxxnet_nnet_cpu.o	./Makefile	/^cxxnet_nnet_cpu.o: cxxnet\/nnet\/cxxnet_nnet.cpp cxxnet\/core\/*.hpp cxxnet\/core\/*.h cxxnet\/nnet\/*.hpp cxxnet\/nnet\/*.h$/;"	t
cxxnet_nnet_cpu.o	./make/Cblas.cpu.mk	/^cxxnet_nnet_cpu.o: ..\/cxxnet\/nnet\/cxxnet_nnet.cpp ..\/cxxnet\/core\/*.hpp ..\/cxxnet\/core\/*.h ..\/cxxnet\/nnet\/*.hpp ..\/cxxnet\/nnet\/*.h $/;"	t
cxxnet_nnet_cpu.o	./make/cpu_only.mk	/^cxxnet_nnet_cpu.o: cxxnet\/nnet\/cxxnet_nnet.cpp cxxnet\/core\/*.hpp cxxnet\/core\/*.h cxxnet\/nnet\/*.hpp cxxnet\/nnet\/*.h$/;"	t
cxxnet_nnet_gpu.o	./Makefile	/^cxxnet_nnet_gpu.o: cxxnet\/nnet\/cxxnet_nnet.cu cxxnet\/core\/*.hpp cxxnet\/core\/*.h cxxnet\/nnet\/*.hpp cxxnet\/nnet\/*.h$/;"	t
data	./cxxnet/core/cxxnet_core.h	/^        mshadow::Tensor<xpu,4> data;$/;"	m	struct:cxxnet::Node
data	./cxxnet/io/cxxnet_data.h	/^        mshadow::Tensor<mshadow::cpu,3> data;$/;"	m	struct:cxxnet::DataInst
data	./cxxnet/io/cxxnet_data.h	/^        mshadow::Tensor<mshadow::cpu,4> data;$/;"	m	struct:cxxnet::DataBatch
data_	./cxxnet/utils/cxxnet_io_utils.h	/^            int *data_;$/;"	m	class:cxxnet::utils::BinaryPage
data_	./mshadow/mshadow/tensor_container.h	/^        Tensor<Device, 2> data_;$/;"	m	class:mshadow::TensorContainer
data_	./mshadow/mshadow/tensor_sse-inl.hpp	/^            DType data_;$/;"	m	struct:mshadow::sse2::FVec
data_loaded	./cxxnet/utils/cxxnet_thread_buffer.h	/^            bool data_loaded;$/;"	m	class:cxxnet::utils::ThreadBuffer
data_pooled_	./mshadow/mshadow/tensor_expr_ext.h	/^            Tensor<Device, 4> data_src_, data_pooled_, grad_pooled_;$/;"	m	struct:mshadow::expr::Plan
data_pooled_	./mshadow/mshadow/tensor_expr_ext.h	/^            const Tensor<Device, 4>& data_pooled_;$/;"	m	struct:mshadow::expr::UnPoolingExp
data_src_	./mshadow/mshadow/tensor_expr_ext.h	/^            Tensor<Device, 4> data_src_, data_pooled_, grad_pooled_;$/;"	m	struct:mshadow::expr::Plan
data_src_	./mshadow/mshadow/tensor_expr_ext.h	/^            const Tensor<Device, 4>& data_src_;$/;"	m	struct:mshadow::expr::UnPoolingExp
defcfg	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        std::vector< std::pair< std::string, std::string > > netcfg, defcfg;$/;"	m	struct:cxxnet::NetConfigHelper
defop	./mshadow/example/Makefile	/^defop: defop.cpp$/;"	t
destroy_signal	./cxxnet/utils/cxxnet_thread_buffer.h	/^            bool destroy_signal;$/;"	m	class:cxxnet::utils::ThreadBuffer
device	./cxxnet/cxxnet_main.cpp	/^        std::string device;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
div	./mshadow/mshadow/tensor_base.h	/^        struct div {$/;"	s	namespace:mshadow::op
divto	./mshadow/mshadow/tensor_base.h	/^        struct divto {$/;"	s	namespace:mshadow::sv
dot	./mshadow/mshadow/tensor_expr.h	/^        inline DotExp<TA,TB,false,false> dot( const ContainerExp<TA> &lhs, const ContainerExp<TB> &rhs ){$/;"	f	namespace:mshadow::expr
dot	./mshadow/mshadow/tensor_expr.h	/^        inline DotExp<TA,TB,false,true> dot( const ContainerExp<TA> &lhs, const TransposeExp<TB> &rhs ){$/;"	f	namespace:mshadow::expr
dot	./mshadow/mshadow/tensor_expr.h	/^        inline DotExp<TA,TB,true,false> dot( const TransposeExp<TA> &lhs, const ContainerExp<TB> &rhs ){$/;"	f	namespace:mshadow::expr
dot	./mshadow/mshadow/tensor_expr.h	/^        inline DotExp<TA,TB,true,true> dot( const TransposeExp<TA> &lhs, const TransposeExp<TB> &rhs ){$/;"	f	namespace:mshadow::expr
dptr	./cxxnet/utils/cxxnet_io_utils.h	/^                void  *dptr;$/;"	m	struct:cxxnet::utils::BinaryPage::Obj
dptr	./mshadow/example/exp-template/exp_lazy.cpp	/^    float* dptr;$/;"	m	struct:Vec	file:
dptr	./mshadow/example/exp-template/exp_template.cpp	/^    float* dptr;$/;"	m	struct:Vec	file:
dptr	./mshadow/example/exp-template/exp_template_op.cpp	/^    float* dptr;$/;"	m	struct:Vec	file:
dptr	./mshadow/mshadow/tensor.h	/^        real_t *dptr;$/;"	m	struct:mshadow::Tensor
dptr_	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            const real_t  *dptr_;$/;"	m	class:mshadow::expr::Plan
dptr_	./mshadow/mshadow/tensor_expr_ext.h	/^            const real_t  *dptr_;$/;"	m	class:mshadow::expr::SSEPlan
dptr_	./mshadow/mshadow/tensor_expr_ext.h	/^            const real_t  *dptr_;$/;"	m	struct:mshadow::expr::Plan
dptr_	./mshadow/mshadow/tensor_expr_ext.h	/^            const real_t *dptr_;$/;"	m	struct:mshadow::expr::Plan
dptr_	./mshadow/mshadow/tensor_sse-inl.hpp	/^            const real_t  *dptr_;$/;"	m	class:mshadow::expr::SSEPlan
dropout_threshold	./cxxnet/core/cxxnet_layer-inl.hpp	/^        float dropout_threshold;$/;"	m	struct:cxxnet::LayerParam
dw	./cxxnet/core/cxxnet_updater-inl.hpp	/^        mshadow::Tensor<xpu,dim> &w, &dw;$/;"	m	class:cxxnet::SGDUpdater
dw	./cxxnet/core/cxxnet_updater-inl.hpp	/^        mshadow::Tensor<xpu,dim> &w, &dw;$/;"	m	class:cxxnet::SGHMCUpdater
endA	./cxxnet/utils/cxxnet_thread_buffer.h	/^            int endA, endB;$/;"	m	class:cxxnet::utils::ThreadBuffer
endB	./cxxnet/utils/cxxnet_thread_buffer.h	/^            int endA, endB;$/;"	m	class:cxxnet::utils::ThreadBuffer
eval_names	./cxxnet/cxxnet_main.cpp	/^        std::vector<std::string> eval_names;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
eval_train	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        int eval_train;$/;"	m	class:cxxnet::CXXNetTrainer
evals_	./cxxnet/utils/cxxnet_metric.h	/^            std::vector<IMetric*> evals_;$/;"	m	struct:cxxnet::utils::MetricSet
exp	./mshadow/mshadow/tensor_expr.h	/^            const EType &exp;$/;"	m	struct:mshadow::expr::TransposeExp
exp_lazy	./mshadow/example/exp-template/Makefile	/^exp_lazy: exp_lazy.cpp$/;"	t
exp_template	./mshadow/example/exp-template/Makefile	/^exp_template: exp_template.cpp$/;"	t
exp_template_op	./mshadow/example/exp-template/Makefile	/^exp_template_op: exp_template_op.cpp$/;"	t
expr	./mshadow/mshadow/tensor_expr.h	/^    namespace expr{$/;"	n	namespace:mshadow
expr	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^    namespace expr{$/;"	n	namespace:mshadow
expr	./mshadow/mshadow/tensor_expr_ext.h	/^    namespace expr{$/;"	n	namespace:mshadow
expr	./mshadow/mshadow/tensor_sse-inl.hpp	/^    namespace expr{$/;"	n	namespace:mshadow
factory	./cxxnet/utils/cxxnet_thread_buffer.h	/^            ElemFactory factory;$/;"	m	class:cxxnet::utils::ThreadBuffer
fi	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^            utils::StdFile fi;$/;"	m	struct:cxxnet::ThreadImagePageIterator::Factory
fi	./cxxnet/utils/cxxnet_config.h	/^            FILE *fi;        $/;"	m	class:cxxnet::utils::ConfigIterator
file_list_	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        std::vector<std::string> file_list_;$/;"	m	class:cxxnet::CIFARIterator
fopen64	./cxxnet/utils/cxxnet_utils.h	11;"	d
fopen64	./cxxnet/utils/cxxnet_utils.h	23;"	d
fp_	./cxxnet/utils/cxxnet_io_utils.h	/^            FILE *fp_;$/;"	m	class:cxxnet::utils::StdFile
fp_	./cxxnet/utils/cxxnet_io_utils.h	/^            gzFile fp_;$/;"	m	struct:cxxnet::utils::GzFile
fp_	./mshadow/mshadow/tensor_io.h	/^            FILE *fp_;$/;"	m	class:mshadow::utils::FileStream
fplst_	./cxxnet/io/cxxnet_iter_img-inl.hpp	/^        FILE *fplst_;$/;"	m	class:cxxnet::ImageIterator
fplst_	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        FILE *fplst_;$/;"	m	class:cxxnet::ThreadImagePageIterator
free_list_	./cxxnet/core/cxxnet_core.h	/^        std::queue< Node<xpu>* > free_list_;$/;"	m	class:cxxnet::NodeFactory
g_mst_	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^            mshadow::TensorContainer<cpu,2> g_mst_, g_slv_;$/;"	m	class:cxxnet::PairTestLayer::PairTestUpdater
g_slv_	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^            mshadow::TensorContainer<cpu,2> g_mst_, g_slv_;$/;"	m	class:cxxnet::PairTestLayer::PairTestUpdater
gap_hsample	./cxxnet/core/cxxnet_updater-inl.hpp	/^            int gap_hsample;$/;"	m	struct:cxxnet::SGHMCUpdater::HMCParam
gaussian	./mshadow/mshadow/tensor_random.h	/^        inline expr::ReshapeExp<Tensor<cpu,1>,dim,1> gaussian( Shape<dim> shape ){$/;"	f	class:mshadow::Random
gaussian	./mshadow/mshadow/tensor_random.h	/^        inline expr::ReshapeExp<Tensor<gpu,1>,dim,1> gaussian( Shape<dim> shape, real_t mu=0.0f, real_t sigma=1.0f){$/;"	f	class:mshadow::Random
gbias_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::TensorContainer<xpu,1> gbias_;$/;"	m	class:cxxnet::ConvolutionLayer
gbias_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::TensorContainer<xpu,1> gbias_;$/;"	m	class:cxxnet::FullConnectLayer
gemm	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static void gemm( bool transa, bool transb, int m, int n, int k, double alpha, $/;"	f	struct:mshadow::expr::BLASEngine
gemm	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static void gemm( bool transa, bool transb, int m, int n, int k, double alpha, \\$/;"	f	struct:mshadow::expr::BLASEngine
gemm	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static void gemm( bool transa, bool transb, int m, int n, int k, float alpha, $/;"	f	struct:mshadow::expr::BLASEngine
gemm	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static void gemm( bool transa, bool transb, int m, int n, int k, float alpha, \\$/;"	f	struct:mshadow::expr::BLASEngine
gemv	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static void gemv( bool trans, int m, int n, double alpha, const double *A, int lda, \\$/;"	f	struct:mshadow::expr::BLASEngine
gemv	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static void gemv( bool trans, int m, int n, float alpha, const float *A, int lda, \\$/;"	f	struct:mshadow::expr::BLASEngine
gen_	./mshadow/mshadow/tensor_random.h	/^        curandGenerator_t gen_;$/;"	m	class:mshadow::Random
ger	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static void ger( int m, int n, double alpha, const double *X, int incX, const double *Y, int incY, double *A, int lda ){$/;"	f	struct:mshadow::expr::BLASEngine
ger	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline static void ger( int m, int n, float alpha, const float *X, int incX, const float *Y, int incY, float *A, int lda ){$/;"	f	struct:mshadow::expr::BLASEngine
get_factory	./cxxnet/utils/cxxnet_thread_buffer.h	/^            inline ElemFactory &get_factory(){$/;"	f	class:cxxnet::utils::ThreadBuffer
gpu	./cxxnet/core/cxxnet_core.h	/^    typedef mshadow::gpu gpu;$/;"	t	namespace:cxxnet
gpu	./cxxnet/io/cxxnet_data.cpp	/^    typedef mshadow::gpu gpu;$/;"	t	namespace:cxxnet	file:
gpu	./mshadow/mshadow/tensor.h	/^    struct gpu {$/;"	s	namespace:mshadow
grad_	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^            mshadow::Tensor<xpu,1> weight_, grad_;$/;"	m	class:cxxnet::CaffeLayer::CaffeUpdater
grad_pooled_	./mshadow/mshadow/tensor_expr_ext.h	/^            Tensor<Device, 4> data_src_, data_pooled_, grad_pooled_;$/;"	m	struct:mshadow::expr::Plan
grad_pooled_	./mshadow/mshadow/tensor_expr_ext.h	/^            const Tensor<Device, 4>& grad_pooled_;$/;"	m	struct:mshadow::expr::UnPoolingExp
gwmat_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::TensorContainer<xpu,2> gwmat_;$/;"	m	class:cxxnet::FullConnectLayer
gwmat_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::TensorContainer<xpu,3> gwmat_;$/;"	m	class:cxxnet::ConvolutionLayer
head_	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        int head_;$/;"	m	class:cxxnet::BatchAdaptIterator
height_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t channel_, height_, width_, hnsize_;$/;"	m	struct:mshadow::expr::Plan
hnsize_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t channel_, height_, width_, hnsize_;$/;"	m	struct:mshadow::expr::Plan
hyper_alpha	./cxxnet/core/cxxnet_updater-inl.hpp	/^            float hyper_alpha;$/;"	m	struct:cxxnet::SGHMCUpdater::HMCParam
hyper_beta	./cxxnet/core/cxxnet_updater-inl.hpp	/^            float hyper_beta;$/;"	m	struct:cxxnet::SGHMCUpdater::HMCParam
hyper_sampled	./cxxnet/core/cxxnet_updater-inl.hpp	/^            int hyper_sampled;$/;"	m	struct:cxxnet::SGHMCUpdater::HMCParam
i_channel_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t psize_, pstride_, i_channel_, i_height_, i_width_, o_height_, o_width_;$/;"	m	struct:mshadow::expr::Plan
i_channel_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t psize_, pstride_, i_channel_, i_height_, o_width_, o_height_;$/;"	m	struct:mshadow::expr::Plan
i_channel_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t i_channel_;$/;"	m	struct:mshadow::expr::UnpackPatchToColXExp
i_height_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t psize_, pstride_, i_channel_, i_height_, i_width_, o_height_, o_width_;$/;"	m	struct:mshadow::expr::Plan
i_height_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t psize_, pstride_, i_channel_, i_height_, o_width_, o_height_;$/;"	m	struct:mshadow::expr::Plan
i_height_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t i_height_;$/;"	m	struct:mshadow::expr::UnpackPatchToColXExp
i_width_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t psize_, pstride_, i_channel_, i_height_, i_width_, o_height_, o_width_;$/;"	m	struct:mshadow::expr::Plan
i_width_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t i_width_;            $/;"	m	struct:mshadow::expr::UnpackPatchToColXExp
identity	./mshadow/mshadow/tensor_base.h	/^        struct identity{$/;"	s	namespace:mshadow::op
im2bin	./tools/Makefile	/^im2bin: im2bin.cpp$/;"	t
img_	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        mshadow::Tensor<cpu,4> img_;$/;"	m	class:cxxnet::CIFARIterator
img_	./cxxnet/io/cxxnet_iter_img-inl.hpp	/^        mshadow::TensorContainer<cpu,3> img_;$/;"	m	class:cxxnet::ImageIterator
img_	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        mshadow::Tensor<cpu,3> img_;$/;"	m	class:cxxnet::MNISTIterator
img_	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^        mshadow::TensorContainer<cpu,2> img_;$/;"	m	class:cxxnet::SpFeatIterator
img_	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        mshadow::TensorContainer<cpu,3> img_;$/;"	m	class:cxxnet::ThreadImagePageIterator
img_	./mshadow/mshadow/tensor_expr_ext.h	/^            const SrcExp& img_;$/;"	m	struct:mshadow::expr::UnpackPatchToColXExp
in	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline Node<xpu>& in( void ){$/;"	f	struct:cxxnet::NeuralNet
in_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        Node<xpu> &in_, &out_;$/;"	m	struct:cxxnet::LayerPatch
in_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        Node<xpu> &in_;$/;"	m	class:cxxnet::ActivationLayer
in_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        Node<xpu> &in_;$/;"	m	class:cxxnet::ConvolutionLayer
in_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        Node<xpu> &in_;$/;"	m	class:cxxnet::FlattenLayer
in_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        Node<xpu> &in_;$/;"	m	class:cxxnet::FullConnectLayer
in_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        Node<xpu> &in_;$/;"	m	class:cxxnet::LRNLayer
in_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        Node<xpu> &in_;$/;"	m	class:cxxnet::PaddingLayer
in_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        Node<xpu> &in_;$/;"	m	class:cxxnet::PoolingLayer
in_	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^        Node<xpu> &in_, &out_;$/;"	m	struct:cxxnet::PairTestLayer
in_	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        Node<xpu> &in_, &out_;$/;"	m	class:cxxnet::CaffeLayer
index	./cxxnet/io/cxxnet_data.h	/^        unsigned index;$/;"	m	struct:cxxnet::DataInst
index_t	./cxxnet/core/cxxnet_core.h	/^    typedef mshadow::index_t index_t;$/;"	t	namespace:cxxnet
index_t	./cxxnet/io/cxxnet_data.cpp	/^    typedef mshadow::index_t index_t;$/;"	t	namespace:cxxnet	file:
index_t	./mshadow/mshadow/tensor_base.h	/^    typedef unsigned index_t;$/;"	t	namespace:mshadow
init_bias	./cxxnet/core/cxxnet_layer-inl.hpp	/^        float init_bias;$/;"	m	struct:cxxnet::LayerParam
init_end	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^            int init_end;$/;"	m	struct:cxxnet::NetMetaModel::Param
init_end	./cxxnet/utils/cxxnet_thread_buffer.h	/^            bool init_end;$/;"	m	class:cxxnet::utils::ThreadBuffer
init_sigma	./cxxnet/core/cxxnet_layer-inl.hpp	/^        float init_sigma;$/;"	m	struct:cxxnet::LayerParam
inqueue_	./cxxnet/core/cxxnet_core.h	/^        bool inqueue_;$/;"	m	struct:cxxnet::Node
inst_	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        std::vector<unsigned> inst_;$/;"	m	class:cxxnet::CIFARIterator
inst_	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        std::vector<unsigned> inst_; $/;"	m	class:cxxnet::MNISTIterator
inst_	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^        std::vector<unsigned> inst_; $/;"	m	class:cxxnet::SpFeatIterator
inst_index	./cxxnet/io/cxxnet_data.h	/^        unsigned* inst_index;$/;"	m	struct:cxxnet::DataBatch
inst_offset_	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        unsigned inst_offset_;$/;"	m	class:cxxnet::CIFARIterator
inst_offset_	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        unsigned inst_offset_;$/;"	m	class:cxxnet::MNISTIterator
inst_offset_	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^        unsigned inst_offset_;$/;"	m	class:cxxnet::SpFeatIterator
is_mat	./cxxnet/core/cxxnet_core.h	/^        inline bool is_mat( void ) const{$/;"	f	struct:cxxnet::Node
ishape0_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t oshape0_, ishape0_;$/;"	m	struct:mshadow::expr::Plan
ishape0_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t ishape0_;$/;"	m	struct:mshadow::expr::ReshapeExp
itr	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        utils::ThreadBuffer<DataBatch,Factory> itr;$/;"	m	class:cxxnet::ThreadBufferIterator
itr	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        utils::ThreadBuffer<PagePtr,Factory> itr;$/;"	m	class:cxxnet::ThreadImagePageIterator
itr_evals	./cxxnet/cxxnet_main.cpp	/^        std::vector< IIterator<DataBatch>* > itr_evals;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
itr_pred	./cxxnet/cxxnet_main.cpp	/^        IIterator<DataBatch>* itr_train, *itr_pred;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
itr_train	./cxxnet/cxxnet_main.cpp	/^        IIterator<DataBatch>* itr_train, *itr_pred;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
kAlphaBLAS	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_CONSTEXPR static real_t kAlphaBLAS = -1.0f;$/;"	m	struct:mshadow::sv::minusto
kAlphaBLAS	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_CONSTEXPR static real_t kAlphaBLAS = 1.0f;$/;"	m	struct:mshadow::sv::plusto
kAlphaBLAS	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_CONSTEXPR static real_t kAlphaBLAS = 1.0f;$/;"	m	struct:mshadow::sv::saveto
kAvgPooling	./cxxnet/core/cxxnet_core.h	/^        const int kAvgPooling = 13;$/;"	m	namespace:cxxnet::layer_type
kBetaBLAS	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_CONSTEXPR static real_t kBetaBLAS  = 0.0f;$/;"	m	struct:mshadow::sv::saveto
kBetaBLAS	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_CONSTEXPR static real_t kBetaBLAS  = 1.0f;$/;"	m	struct:mshadow::sv::minusto
kBetaBLAS	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_CONSTEXPR static real_t kBetaBLAS  = 1.0f;$/;"	m	struct:mshadow::sv::plusto
kCaffe	./cxxnet/core/cxxnet_core.h	/^        const int kCaffe = 100;$/;"	m	namespace:cxxnet::layer_type
kComplex	./mshadow/mshadow/tensor_expr.h	/^            const int kComplex   = 3;$/;"	m	namespace:mshadow::expr::type
kContainer	./mshadow/mshadow/tensor_expr.h	/^            const int kContainer = 0;$/;"	m	namespace:mshadow::expr::type
kConv	./cxxnet/core/cxxnet_core.h	/^        const int kConv = 10;$/;"	m	namespace:cxxnet::layer_type
kDevCPU	./mshadow/mshadow/tensor.h	/^        const static bool kDevCPU = Device::kDevCPU;$/;"	m	struct:mshadow::Tensor
kDevCPU	./mshadow/mshadow/tensor.h	/^        const static bool kDevCPU = false;$/;"	m	struct:mshadow::gpu
kDevCPU	./mshadow/mshadow/tensor.h	/^        const static bool kDevCPU = true;$/;"	m	struct:mshadow::cpu
kDevMask	./mshadow/mshadow/tensor.h	/^        const static int kDevMask = 1<<0;$/;"	m	struct:mshadow::cpu
kDevMask	./mshadow/mshadow/tensor.h	/^        const static int kDevMask = 1<<1;$/;"	m	struct:mshadow::gpu
kDevMask	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            const static int kDevMask = 0;$/;"	m	struct:mshadow::expr::ExpInfo
kDevMask	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            const static int kDevMask = 0xffff;$/;"	m	struct:mshadow::expr::ExpInfo
kDevMask	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            const static int kDevMask = Device::kDevMask;            $/;"	m	struct:mshadow::expr::ExpInfo
kDevMask	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            const static int kDevMask = ExpInfo<SrcExp>::kDevMask;$/;"	m	struct:mshadow::expr::ExpInfo
kDevMask	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            const static int kDevMask = ExpInfo<TA>::kDevMask & ExpInfo<TB>::kDevMask;$/;"	m	struct:mshadow::expr::ExpInfo
kDevMask	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            const static int kDevMask = ExpInfo<TA>::kDevMask;$/;"	m	struct:mshadow::expr::ExpInfo
kDevPass	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            const static bool kDevPass = (ExpInfo<E>::kDevMask & Device::kDevMask) != 0;$/;"	m	struct:mshadow::expr::TypeCheck
kDim	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            const static int kDim = (kDimLhs>=0 && kDimRhs >= 0) ? \\$/;"	m	struct:mshadow::expr::ExpInfo
kDim	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            const static int kDim = -1;$/;"	m	struct:mshadow::expr::ExpInfo
kDim	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            const static int kDim = 0;$/;"	m	struct:mshadow::expr::ExpInfo
kDim	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            const static int kDim = ExpInfo<TA>::kDim;$/;"	m	struct:mshadow::expr::ExpInfo
kDim	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            const static int kDim = dim;$/;"	m	struct:mshadow::expr::ExpInfo
kDim	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            const static int kDim = kDimSrc >= 0 ? dim : -1;$/;"	m	struct:mshadow::expr::ExpInfo
kDimLhs	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            const static int kDimLhs = ExpInfo<TA>::kDim;$/;"	m	struct:mshadow::expr::ExpInfo
kDimRhs	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            const static int kDimRhs = ExpInfo<TB>::kDim;$/;"	m	struct:mshadow::expr::ExpInfo
kDimSrc	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            const static int kDimSrc = ExpInfo<SrcExp>::kDim;$/;"	m	struct:mshadow::expr::ExpInfo
kDropConn	./cxxnet/core/cxxnet_core.h	/^        const int kDropConn = 9;$/;"	m	namespace:cxxnet::layer_type
kDropout	./cxxnet/core/cxxnet_core.h	/^        const int kDropout = 8;$/;"	m	namespace:cxxnet::layer_type
kEnabled	./mshadow/mshadow/tensor_sse-inl.hpp	/^            const static bool kEnabled = false;$/;"	m	struct:mshadow::sse2::SSEOp
kEnabled	./mshadow/mshadow/tensor_sse-inl.hpp	/^            const static bool kEnabled = true;$/;"	m	struct:mshadow::sse2::SSEOp
kExpDim	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            const static int kExpDim = ExpInfo<E>::kDim;$/;"	m	struct:mshadow::expr::TypeCheck
kFlatten	./cxxnet/core/cxxnet_core.h	/^        const int kFlatten  = 7;$/;"	m	namespace:cxxnet::layer_type
kFullConnect	./cxxnet/core/cxxnet_core.h	/^        const int kFullConnect = 1;$/;"	m	namespace:cxxnet::layer_type
kGaussian	./cxxnet/core/cxxnet_core.h	/^        const int kGaussian = 0;$/;"	m	namespace:cxxnet::rnd_type
kInitV	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_CONSTEXPR static real_t kInitV = -DBL_MAX;$/;"	m	struct:mshadow::red::maximum
kInitV	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_CONSTEXPR static real_t kInitV = -FLT_MAX;$/;"	m	struct:mshadow::red::maximum
kInitV	./mshadow/mshadow/tensor_base.h	/^            MSHADOW_CONSTEXPR static real_t kInitV = 0.0f;$/;"	m	struct:mshadow::red::sum
kLRN	./cxxnet/core/cxxnet_core.h	/^        const int kLRN   = 15;$/;"	m	namespace:cxxnet::layer_type
kMapPass	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            const static bool kMapPass = (kExpDim == 0 || kExpDim == dim) && kDevPass;$/;"	m	struct:mshadow::expr::TypeCheck
kMapper	./mshadow/mshadow/tensor_expr.h	/^            const int kMapper    = 1;$/;"	m	namespace:mshadow::expr::type
kMaxPooling	./cxxnet/core/cxxnet_core.h	/^        const int kMaxPooling = 11;$/;"	m	namespace:cxxnet::layer_type
kMaxShape	./mshadow/mshadow/tensor.h	/^        const static int kMaxShape = dimension;$/;"	m	struct:mshadow::Shape
kPadding	./cxxnet/core/cxxnet_core.h	/^        const int kPadding = 14;$/;"	m	namespace:cxxnet::layer_type
kPageSize	./cxxnet/utils/cxxnet_io_utils.h	/^            static const size_t kPageSize = 64 << 18;$/;"	m	class:cxxnet::utils::BinaryPage
kPass	./mshadow/mshadow/tensor_expr_ext.h	/^            const static bool kPass = true;$/;"	m	struct:mshadow::expr::SSECheck
kPass	./mshadow/mshadow/tensor_sse-inl.hpp	/^            const static bool kPass = SSECheck<TA>::kPass && SSECheck<TB>::kPass && sse2::SSEOp<OP>::kEnabled;$/;"	m	struct:mshadow::expr::SSECheck
kPass	./mshadow/mshadow/tensor_sse-inl.hpp	/^            const static bool kPass = SSECheck<TA>::kPass && sse2::SSEOp<OP>::kEnabled;$/;"	m	struct:mshadow::expr::SSECheck
kPass	./mshadow/mshadow/tensor_sse-inl.hpp	/^            const static bool kPass = false;$/;"	m	struct:mshadow::expr::SSECheck
kPass	./mshadow/mshadow/tensor_sse-inl.hpp	/^            const static bool kPass = true;$/;"	m	struct:mshadow::expr::SSECheck
kPi	./mshadow/mshadow/tensor_base.h	/^    const float kPi = 3.1415926f;$/;"	m	namespace:mshadow
kRandBufferSize	./mshadow/mshadow/tensor_base.h	/^    const unsigned kRandBufferSize = 1000000;$/;"	m	namespace:mshadow
kRectifiedLinear	./cxxnet/core/cxxnet_core.h	/^        const int kRectifiedLinear = 3;$/;"	m	namespace:cxxnet::layer_type
kRedPass	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            const static bool kRedPass = (kExpDim > dim) && kDevPass;$/;"	m	struct:mshadow::expr::TypeCheck
kSigmoid	./cxxnet/core/cxxnet_core.h	/^        const int kSigmoid = 4;$/;"	m	namespace:cxxnet::layer_type
kSize	./mshadow/mshadow/tensor_sse-inl.hpp	/^            const static index_t kSize = 2;$/;"	m	struct:mshadow::sse2::FVec
kSize	./mshadow/mshadow/tensor_sse-inl.hpp	/^            const static index_t kSize = 4;$/;"	m	struct:mshadow::sse2::FVec
kSoftmax	./cxxnet/core/cxxnet_core.h	/^        const int kSoftmax     = 2;$/;"	m	namespace:cxxnet::layer_type
kSoftplus	./cxxnet/core/cxxnet_core.h	/^        const int kSoftplus = 6;$/;"	m	namespace:cxxnet::layer_type
kSubShape	./mshadow/mshadow/tensor.h	/^        const static int kSubShape = dimension - 1;$/;"	m	struct:mshadow::Shape
kSubdim	./mshadow/mshadow/tensor.h	/^        const static int  kSubdim = dimension - 1;$/;"	m	struct:mshadow::Tensor
kSumPooling	./cxxnet/core/cxxnet_core.h	/^        const int kSumPooling = 12;$/;"	m	namespace:cxxnet::layer_type
kTanh	./cxxnet/core/cxxnet_core.h	/^        const int kTanh = 5;$/;"	m	namespace:cxxnet::layer_type
kUniform	./cxxnet/core/cxxnet_core.h	/^        const int kUniform = 1;$/;"	m	namespace:cxxnet::rnd_type
kernel_size	./cxxnet/core/cxxnet_layer-inl.hpp	/^        int kernel_size;$/;"	m	struct:cxxnet::LayerParam
knorm_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        real_t knorm_;$/;"	m	class:cxxnet::LRNLayer
ksize_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t ksize_, kstride_;$/;"	m	struct:mshadow::expr::Plan
ksize_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t ksize_;$/;"	m	struct:mshadow::expr::Plan
ksize_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t ksize_;$/;"	m	struct:mshadow::expr::PoolingExp
ksize_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t ksize_;$/;"	m	struct:mshadow::expr::UnPoolingExp
kstride_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t ksize_, kstride_;$/;"	m	struct:mshadow::expr::Plan
kstride_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t kstride_;$/;"	m	struct:mshadow::expr::Plan
kstride_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t kstride_;$/;"	m	struct:mshadow::expr::PoolingExp
kstride_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t kstride_;$/;"	m	struct:mshadow::expr::UnPoolingExp
label	./cxxnet/io/cxxnet_data.h	/^        float  label;$/;"	m	struct:cxxnet::DataInst
labels	./cxxnet/io/cxxnet_data.h	/^        float*  labels;$/;"	m	struct:cxxnet::DataBatch
labels_	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        std::vector<float> labels_;$/;"	m	class:cxxnet::CIFARIterator
labels_	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        std::vector<float> labels_;$/;"	m	class:cxxnet::MNISTIterator
labels_	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^        std::vector<float> labels_;$/;"	m	class:cxxnet::SpFeatIterator
lambda_output	./cxxnet/core/cxxnet_updater-inl.hpp	/^            float lambda_output;$/;"	m	struct:cxxnet::SGHMCUpdater::HMCParam
layer_type	./cxxnet/core/cxxnet_core.h	/^    namespace layer_type{$/;"	n	namespace:cxxnet
layers	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        std::vector<ILayer*>     layers;$/;"	m	struct:cxxnet::NeuralNet
layers	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        std::vector<LayerInfo> layers;$/;"	m	struct:cxxnet::NetMetaModel
learning_rate	./cxxnet/core/cxxnet_updater-inl.hpp	/^        float learning_rate;$/;"	m	struct:cxxnet::UpdaterParam
len	./mshadow/example/exp-template/exp_lazy.cpp	/^    int len;$/;"	m	struct:Vec	file:
len	./mshadow/example/exp-template/exp_template.cpp	/^    int len;$/;"	m	struct:Vec	file:
len	./mshadow/example/exp-template/exp_template_op.cpp	/^    int len;$/;"	m	struct:Vec	file:
length_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t  ystride_, length_;$/;"	m	struct:mshadow::expr::Plan
lhs	./mshadow/example/exp-template/exp_lazy.cpp	/^    const Vec& lhs;$/;"	m	struct:BinaryAddExp	file:
lhs	./mshadow/example/exp-template/exp_template.cpp	/^    const TLhs& lhs;$/;"	m	struct:BinaryAddExp	file:
lhs	./mshadow/example/exp-template/exp_template_op.cpp	/^    const TLhs& lhs;$/;"	m	struct:BinaryMapExp	file:
lhs_	./mshadow/mshadow/tensor_expr.h	/^            const TA& lhs_;$/;"	m	struct:mshadow::expr::BinaryMapExp
lhs_	./mshadow/mshadow/tensor_expr.h	/^            const TA& lhs_;$/;"	m	struct:mshadow::expr::DotExp
lhs_	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            Plan<TA> lhs_;$/;"	m	class:mshadow::expr::Plan
lhs_	./mshadow/mshadow/tensor_sse-inl.hpp	/^            SSEPlan<TA> lhs_;$/;"	m	class:mshadow::expr::SSEPlan
loader_thread	./cxxnet/utils/cxxnet_thread_buffer.h	/^            Thread    loader_thread;$/;"	m	class:cxxnet::utils::ThreadBuffer
loading_end	./cxxnet/utils/cxxnet_thread_buffer.h	/^            Semaphore loading_end, loading_need;$/;"	m	class:cxxnet::utils::ThreadBuffer
loading_need	./cxxnet/utils/cxxnet_thread_buffer.h	/^            Semaphore loading_end, loading_need;$/;"	m	class:cxxnet::utils::ThreadBuffer
loc_	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        index_t loc_;$/;"	m	class:cxxnet::CIFARIterator
loc_	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        index_t loc_;$/;"	m	class:cxxnet::MNISTIterator
loc_	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^        index_t loc_;$/;"	m	class:cxxnet::SpFeatIterator
loss_type	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        int loss_type;$/;"	m	class:cxxnet::CXXNetTrainer
lr_alpha	./cxxnet/core/cxxnet_updater-inl.hpp	/^        float lr_alpha;$/;"	m	struct:cxxnet::UpdaterParam
lr_factor	./cxxnet/core/cxxnet_updater-inl.hpp	/^        float lr_factor;$/;"	m	struct:cxxnet::UpdaterParam
lr_gamma	./cxxnet/core/cxxnet_updater-inl.hpp	/^        float lr_gamma;$/;"	m	struct:cxxnet::UpdaterParam
lr_minimum	./cxxnet/core/cxxnet_updater-inl.hpp	/^        float lr_minimum;$/;"	m	struct:cxxnet::UpdaterParam
lr_schedule	./cxxnet/core/cxxnet_updater-inl.hpp	/^        int lr_schedule;$/;"	m	struct:cxxnet::UpdaterParam
lr_step	./cxxnet/core/cxxnet_updater-inl.hpp	/^        long lr_step;$/;"	m	struct:cxxnet::UpdaterParam
m_w	./cxxnet/core/cxxnet_updater-inl.hpp	/^        mshadow::TensorContainer<xpu,dim> m_w;$/;"	m	class:cxxnet::SGDUpdater
m_w	./cxxnet/core/cxxnet_updater-inl.hpp	/^        mshadow::TensorContainer<xpu,dim> m_w;$/;"	m	class:cxxnet::SGHMCUpdater
main	./cxxnet/cxxnet_main.cpp	/^int main( int argc, char *argv[] ){$/;"	f
main	./mshadow/example/basic.cpp	/^int main( void ){$/;"	f
main	./mshadow/example/defop.cpp	/^int main( void ){$/;"	f
main	./mshadow/example/exp-template/exp_lazy.cpp	/^int main( void ){$/;"	f
main	./mshadow/example/exp-template/exp_template.cpp	/^int main( void ){$/;"	f
main	./mshadow/example/exp-template/exp_template_op.cpp	/^int main( void ){$/;"	f
main	./tools/im2bin.cpp	/^int main(int argc, char **argv) {$/;"	f
mask_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::TensorContainer<xpu, 2> mask_, tmpw_;$/;"	m	class:cxxnet::DropConnLayer
mask_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::TensorContainer<xpu, 4> mask_;$/;"	m	class:cxxnet::DropoutLayer
master_	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^        ILayer *master_, *slave_;$/;"	m	struct:cxxnet::PairTestLayer
mat	./cxxnet/core/cxxnet_core.h	/^        inline mshadow::Tensor<xpu,2> mat( void ){$/;"	f	struct:cxxnet::Node
mat_	./mshadow/mshadow/tensor_expr_ext.h	/^            Tensor<Device,2> mat_;$/;"	m	struct:mshadow::expr::Plan
mat_	./mshadow/mshadow/tensor_expr_ext.h	/^            const Tensor<Device,2>& mat_;$/;"	m	struct:mshadow::expr::PackColToPatchXExp
max_mem_	./cxxnet/core/cxxnet_core.h	/^        size_t max_mem_;$/;"	m	class:cxxnet::NodeFactory
max_round	./cxxnet/cxxnet_main.cpp	/^        int max_round;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
maximum	./mshadow/example/exp-template/exp_template_op.cpp	/^struct maximum{$/;"	s	file:
maximum	./mshadow/mshadow/tensor_base.h	/^        struct maximum {$/;"	s	namespace:mshadow::red
maxoftwo	./mshadow/example/defop.cpp	/^struct maxoftwo{$/;"	s	file:
meanimg_	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        mshadow::TensorContainer<cpu,3> meanimg_;$/;"	m	class:cxxnet::BatchAdaptIterator
meta	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        NetMetaModel &meta;$/;"	m	struct:cxxnet::NetConfigHelper
meta	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        NetMetaModel meta;$/;"	m	struct:cxxnet::NeuralNet
metric	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        utils::MetricSet metric;$/;"	m	class:cxxnet::CXXNetTrainer
minus	./mshadow/mshadow/tensor_base.h	/^        struct minus {$/;"	s	namespace:mshadow::op
minusto	./mshadow/mshadow/tensor_base.h	/^        struct minusto {$/;"	s	namespace:mshadow::sv
mirror	./mshadow/mshadow/tensor_expr_ext.h	/^         inline MirroringExp<SrcExp, ExpInfo<SrcExp>::kDim> mirror(const Exp<SrcExp, etype> &src) {$/;"	f	namespace:mshadow::expr
mode_	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        int mode_;$/;"	m	class:cxxnet::CIFARIterator
mode_	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        int mode_;$/;"	m	class:cxxnet::MNISTIterator
mode_	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^        int mode_;$/;"	m	class:cxxnet::SpFeatIterator
mode_	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        int mode_;$/;"	m	class:cxxnet::CaffeLayer
momentum	./cxxnet/core/cxxnet_updater-inl.hpp	/^        float momentum;$/;"	m	struct:cxxnet::UpdaterParam
mshadow	./mshadow/mshadow/tensor.h	/^namespace mshadow {$/;"	n
mshadow	./mshadow/mshadow/tensor.h	/^namespace mshadow{$/;"	n
mshadow	./mshadow/mshadow/tensor_base.h	/^namespace mshadow {$/;"	n
mshadow	./mshadow/mshadow/tensor_container.h	/^namespace mshadow{$/;"	n
mshadow	./mshadow/mshadow/tensor_cpu-inl.hpp	/^namespace mshadow {$/;"	n
mshadow	./mshadow/mshadow/tensor_expr.h	/^namespace mshadow{$/;"	n
mshadow	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^namespace mshadow{$/;"	n
mshadow	./mshadow/mshadow/tensor_expr_ext.h	/^namespace mshadow{$/;"	n
mshadow	./mshadow/mshadow/tensor_gpu-inl.hpp	/^namespace mshadow {$/;"	n
mshadow	./mshadow/mshadow/tensor_gpu-inl.hpp	/^namespace mshadow{$/;"	n
mshadow	./mshadow/mshadow/tensor_io.h	/^namespace mshadow{$/;"	n
mshadow	./mshadow/mshadow/tensor_random.h	/^namespace mshadow {$/;"	n
mshadow	./mshadow/mshadow/tensor_sse-inl.hpp	/^namespace mshadow {$/;"	n
mshadow	./mshadow/mshadow/tensor_sse-inl.hpp	/^namespace mshadow{$/;"	n
mul	./mshadow/example/exp-template/exp_template_op.cpp	/^struct mul{$/;"	s	file:
mul	./mshadow/mshadow/tensor_base.h	/^        struct mul{$/;"	s	namespace:mshadow::op
multo	./mshadow/mshadow/tensor_base.h	/^        struct multo {$/;"	s	namespace:mshadow::sv
n	./mshadow/example/exp-template/exp_lazy.cpp	/^const int n = 3; $/;"	v
n	./mshadow/example/exp-template/exp_template.cpp	/^const int n = 3; $/;"	v
n	./mshadow/example/exp-template/exp_template_op.cpp	/^const int n = 3; $/;"	v
name	./cxxnet/utils/cxxnet_config.h	/^            inline const char *name( void )const{$/;"	f	class:cxxnet::utils::ConfigIterator
name	./cxxnet/utils/cxxnet_metric.h	/^            std::string name;$/;"	m	struct:cxxnet::utils::MetricBase
name_data	./cxxnet/cxxnet_main.cpp	/^        std::string name_data;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
name_meanimg_	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        std::string name_meanimg_;$/;"	m	class:cxxnet::BatchAdaptIterator
name_model_dir	./cxxnet/cxxnet_main.cpp	/^        std::string name_model_dir;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
name_model_in	./cxxnet/cxxnet_main.cpp	/^        std::string name_model_in;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
name_pred	./cxxnet/cxxnet_main.cpp	/^        std::string name_pred;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
need_hypersample	./cxxnet/core/cxxnet_updater-inl.hpp	/^            inline bool need_hypersample( void ) const{$/;"	f	struct:cxxnet::SGHMCUpdater::HMCParam
need_sample	./cxxnet/core/cxxnet_updater-inl.hpp	/^            inline bool need_sample( void ) const{$/;"	f	struct:cxxnet::SGHMCUpdater::HMCParam
net	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        NeuralNet<xpu> net;$/;"	m	class:cxxnet::CXXNetTrainer
net_trainer	./cxxnet/cxxnet_main.cpp	/^        INetTrainer *net_trainer;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
net_type	./cxxnet/cxxnet_main.cpp	/^        int net_type;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
netcfg	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        std::vector< std::pair< std::string, std::string > > netcfg, defcfg;$/;"	m	struct:cxxnet::NetConfigHelper
netcfg_mode	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        int netcfg_mode;$/;"	m	struct:cxxnet::NetConfigHelper
new_height_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t new_height_;$/;"	m	struct:mshadow::expr::Plan
nfactory	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        NodeFactory<xpu> nfactory;$/;"	m	struct:cxxnet::NeuralNet
nindex_in	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^            int nindex_in;$/;"	m	struct:cxxnet::NetMetaModel::LayerInfo
nindex_out	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^            int nindex_out;$/;"	m	struct:cxxnet::NetMetaModel::LayerInfo
nnet	./mshadow/example/neuralnet/Makefile	/^nnet: nnet.cu$/;"	t
no_bias	./cxxnet/core/cxxnet_layer-inl.hpp	/^        int no_bias;$/;"	m	struct:cxxnet::LayerParam
nodes	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        std::vector< Node<xpu> > nodes;$/;"	m	struct:cxxnet::NeuralNet
nsize_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        index_t nsize_;$/;"	m	class:cxxnet::LRNLayer
nsize_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t nsize_;            $/;"	m	struct:mshadow::expr::ChannelPoolingExp
nstep_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::index_t nstep_;$/;"	m	class:cxxnet::ConvolutionLayer
num_avg_record	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        unsigned num_avg_record;$/;"	m	class:cxxnet::CXXAvgNetTrainer
num_burn	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        int num_burn;$/;"	m	class:cxxnet::CXXAvgNetTrainer
num_channel	./cxxnet/core/cxxnet_layer-inl.hpp	/^        int num_channel;$/;"	m	struct:cxxnet::LayerParam
num_epoch_passed	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^            int64_t num_epoch_passed;$/;"	m	struct:cxxnet::NetMetaModel::Param
num_group	./cxxnet/core/cxxnet_layer-inl.hpp	/^        int num_group;$/;"	m	struct:cxxnet::LayerParam
num_hidden	./cxxnet/core/cxxnet_layer-inl.hpp	/^        int num_hidden;$/;"	m	struct:cxxnet::LayerParam
num_layers	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^            int num_layers;$/;"	m	struct:cxxnet::NetMetaModel::Param
num_nodes	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^            int num_nodes;$/;"	m	struct:cxxnet::NetMetaModel::Param
num_oveflow_	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        int num_oveflow_;$/;"	m	class:cxxnet::BatchAdaptIterator
num_round	./cxxnet/cxxnet_main.cpp	/^        int num_round;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
num_train	./cxxnet/core/cxxnet_updater-inl.hpp	/^            int num_train;$/;"	m	struct:cxxnet::SGHMCUpdater::HMCParam
o_height_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t psize_, pstride_, i_channel_, i_height_, i_width_, o_height_, o_width_;$/;"	m	struct:mshadow::expr::Plan
o_height_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t psize_, pstride_, i_channel_, i_height_, o_width_, o_height_;$/;"	m	struct:mshadow::expr::Plan
o_width_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t psize_, pstride_, i_channel_, i_height_, i_width_, o_height_, o_width_;$/;"	m	struct:mshadow::expr::Plan
o_width_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t psize_, pstride_, i_channel_, i_height_, o_width_, o_height_;$/;"	m	struct:mshadow::expr::Plan
off64_t	./cxxnet/utils/cxxnet_utils.h	22;"	d
offset	./cxxnet/utils/cxxnet_io_utils.h	/^            inline void* offset( int pos ){$/;"	f	class:cxxnet::utils::BinaryPage
op	./cxxnet/core/cxxnet_op.h	/^    namespace op {$/;"	n	namespace:cxxnet
op	./mshadow/mshadow/tensor_base.h	/^    namespace op {$/;"	n	namespace:mshadow
operator *	./mshadow/example/exp-template/exp_template_op.cpp	/^inline BinaryMapExp<mul,TLhs,TRhs> operator* (const Exp<TLhs>& lhs, const Exp<TRhs>& rhs){$/;"	f
operator *	./mshadow/mshadow/tensor_expr.h	/^        inline BinaryMapExp<op::mul, ScalarExp, TB, (tb|type::kMapper) > operator*( const ScalarExp& lhs, const Exp<TB,tb>& rhs ){$/;"	f	namespace:mshadow::expr
operator *	./mshadow/mshadow/tensor_expr.h	/^        inline BinaryMapExp<op::mul, TA, ScalarExp, (ta|type::kMapper) > operator*( const Exp<TA,ta>& lhs,  const ScalarExp& rhs ){$/;"	f	namespace:mshadow::expr
operator *	./mshadow/mshadow/tensor_expr.h	/^        inline BinaryMapExp<op::mul,TA,TB, (ta|tb|type::kMapper) > operator*( const Exp<TA,ta> &lhs, const Exp<TB,tb> &rhs ){$/;"	f	namespace:mshadow::expr
operator *	./mshadow/mshadow/tensor_expr.h	/^        inline DotExp<TA,TB,ltrans,rtrans> operator*( const DotExp<TA,TB,ltrans,rtrans> &lhs, real_t rhs ){$/;"	f	namespace:mshadow::expr
operator *	./mshadow/mshadow/tensor_expr.h	/^        inline DotExp<TA,TB,ltrans,rtrans> operator*( real_t lhs, const DotExp<TA,TB,ltrans,rtrans> &rhs ){$/;"	f	namespace:mshadow::expr
operator *	./mshadow/mshadow/tensor_expr_ext.h	/^        inline ReduceTo1DExp<E,R,d> operator*( const ReduceTo1DExp<E,R,d> &e, real_t scale ){$/;"	f	namespace:mshadow::expr
operator *	./mshadow/mshadow/tensor_expr_ext.h	/^        inline ReduceTo1DExp<E,R,d> operator*( real_t scale, const ReduceTo1DExp<E,R,d> &e ){$/;"	f	namespace:mshadow::expr
operator *=	./mshadow/mshadow/tensor_expr.h	/^            inline Container &operator*=( const Exp<E,etype> &exp ){$/;"	f	class:mshadow::expr::ContainerExp
operator *=	./mshadow/mshadow/tensor_expr.h	/^            inline Container &operator*=( real_t s ){$/;"	f	class:mshadow::expr::ContainerExp
operator +	./mshadow/example/exp-template/exp_lazy.cpp	/^inline BinaryAddExp operator+ (const Vec& lhs, const Vec& rhs){$/;"	f
operator +	./mshadow/example/exp-template/exp_template.cpp	/^inline BinaryAddExp<TLhs,TRhs> operator+ (const Exp<TLhs>& lhs, const Exp<TRhs>& rhs){$/;"	f
operator +	./mshadow/mshadow/tensor_expr.h	/^        inline BinaryMapExp<op::plus, ScalarExp, TB, (tb|type::kMapper) > operator+( const ScalarExp& lhs, const Exp<TB,tb>& rhs ){$/;"	f	namespace:mshadow::expr
operator +	./mshadow/mshadow/tensor_expr.h	/^        inline BinaryMapExp<op::plus, TA, ScalarExp, (ta|type::kMapper) > operator+( const Exp<TA,ta>& lhs,  const ScalarExp& rhs ){$/;"	f	namespace:mshadow::expr
operator +	./mshadow/mshadow/tensor_expr.h	/^        inline BinaryMapExp<op::plus,TA,TB, (ta|tb|type::kMapper) > operator+( const Exp<TA,ta> &lhs, const Exp<TB,tb> &rhs ){$/;"	f	namespace:mshadow::expr
operator +=	./mshadow/mshadow/tensor_expr.h	/^            inline Container &operator+=( const Exp<E,etype> &exp ){$/;"	f	class:mshadow::expr::ContainerExp
operator +=	./mshadow/mshadow/tensor_expr.h	/^            inline Container &operator+=( real_t s ){$/;"	f	class:mshadow::expr::ContainerExp
operator -	./mshadow/mshadow/tensor_expr.h	/^        inline BinaryMapExp<op::minus, ScalarExp, TB, (tb|type::kMapper) > operator-( const ScalarExp& lhs, const Exp<TB,tb>& rhs ){$/;"	f	namespace:mshadow::expr
operator -	./mshadow/mshadow/tensor_expr.h	/^        inline BinaryMapExp<op::minus, TA, ScalarExp, (ta|type::kMapper) > operator-( const Exp<TA,ta>& lhs,  const ScalarExp& rhs ){$/;"	f	namespace:mshadow::expr
operator -	./mshadow/mshadow/tensor_expr.h	/^        inline BinaryMapExp<op::minus,TA,TB, (ta|tb|type::kMapper) > operator-( const Exp<TA,ta> &lhs, const Exp<TB,tb> &rhs ){$/;"	f	namespace:mshadow::expr
operator -=	./mshadow/mshadow/tensor_expr.h	/^            inline Container &operator-=( const Exp<E,etype> &exp ){$/;"	f	class:mshadow::expr::ContainerExp
operator -=	./mshadow/mshadow/tensor_expr.h	/^            inline Container &operator-=( real_t s ){$/;"	f	class:mshadow::expr::ContainerExp
operator /	./mshadow/mshadow/tensor_expr.h	/^        inline BinaryMapExp<op::div, ScalarExp, TB, (tb|type::kMapper) > operator\/( const ScalarExp& lhs, const Exp<TB,tb>& rhs ){$/;"	f	namespace:mshadow::expr
operator /	./mshadow/mshadow/tensor_expr.h	/^        inline BinaryMapExp<op::div, TA, ScalarExp, (ta|type::kMapper) > operator\/( const Exp<TA,ta>& lhs,  const ScalarExp& rhs ){$/;"	f	namespace:mshadow::expr
operator /	./mshadow/mshadow/tensor_expr.h	/^        inline BinaryMapExp<op::div,TA,TB, (ta|tb|type::kMapper) > operator\/( const Exp<TA,ta> &lhs, const Exp<TB,tb> &rhs ){$/;"	f	namespace:mshadow::expr
operator /=	./mshadow/mshadow/tensor_expr.h	/^            inline Container &operator\/=( const Exp<E,etype> &exp ){$/;"	f	class:mshadow::expr::ContainerExp
operator /=	./mshadow/mshadow/tensor_expr.h	/^            inline Container &operator\/=( real_t s ){$/;"	f	class:mshadow::expr::ContainerExp
operator =	./mshadow/example/exp-template/exp_lazy.cpp	/^    inline Vec& operator= (const BinaryAddExp& src){$/;"	f	struct:Vec
operator =	./mshadow/example/exp-template/exp_template.cpp	/^    inline Vec& operator= (const Exp<EType>& src_){$/;"	f	struct:Vec
operator =	./mshadow/example/exp-template/exp_template_op.cpp	/^    inline Vec& operator= (const Exp<EType>& src_){$/;"	f	struct:Vec
operator =	./mshadow/mshadow/tensor.h	/^        inline Tensor<Device,1>& operator=( const expr::Exp<E,expr::type::kComplex> &exp ){$/;"	f	struct:mshadow::Tensor
operator =	./mshadow/mshadow/tensor.h	/^        inline Tensor<Device,1>& operator=( const expr::Exp<E,expr::type::kMapper> &exp ){$/;"	f	struct:mshadow::Tensor
operator =	./mshadow/mshadow/tensor.h	/^        inline Tensor<Device,1>& operator=( double s ){$/;"	f	struct:mshadow::Tensor
operator =	./mshadow/mshadow/tensor.h	/^        inline Tensor<Device,dimension>& operator=( const expr::Exp<E,expr::type::kComplex> &exp ){$/;"	f	struct:mshadow::Tensor
operator =	./mshadow/mshadow/tensor.h	/^        inline Tensor<Device,dimension>& operator=( const expr::Exp<E,expr::type::kMapper> &exp ){$/;"	f	struct:mshadow::Tensor
operator =	./mshadow/mshadow/tensor.h	/^        inline Tensor<Device,dimension>& operator=( real_t s ){$/;"	f	struct:mshadow::Tensor
operator =	./mshadow/mshadow/tensor_container.h	/^        inline Tensor<Device,dimension>& operator=( const expr::Exp<E,expr::type::kComplex> &exp ){$/;"	f	class:mshadow::TensorContainer
operator =	./mshadow/mshadow/tensor_container.h	/^        inline Tensor<Device,dimension>& operator=( const expr::Exp<E,expr::type::kMapper> &exp ){$/;"	f	class:mshadow::TensorContainer
operator =	./mshadow/mshadow/tensor_container.h	/^        inline Tensor<Device,dimension>& operator=( real_t s ){$/;"	f	class:mshadow::TensorContainer
operator ==	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^            inline bool operator==( const LayerInfo &b ) const{$/;"	f	struct:cxxnet::NetMetaModel::LayerInfo
operator ==	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE bool operator==(const Shape<kMaxShape> &s) const {$/;"	f	struct:mshadow::Shape
operator []	./cxxnet/utils/cxxnet_io_utils.h	/^            inline Obj operator[]( int r ){$/;"	f	class:cxxnet::utils::BinaryPage
operator []	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE Tensor<Device, kSubdim> operator[](index_t idx) const {$/;"	f	struct:mshadow::Tensor
operator []	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE const index_t& operator[](index_t idx) const {$/;"	f	struct:mshadow::Shape
operator []	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE const real_t &operator[](index_t idx)const { return dptr[ idx ]; }$/;"	f	struct:mshadow::Tensor
operator []	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE index_t& operator[](index_t idx) {$/;"	f	struct:mshadow::Shape
operator []	./mshadow/mshadow/tensor.h	/^        MSHADOW_XINLINE real_t &operator[](index_t idx) { return dptr[ idx ]; }$/;"	f	struct:mshadow::Tensor
oshape0_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t oshape0_, ishape0_;$/;"	m	struct:mshadow::expr::Plan
oshape0_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t oshape0_;$/;"	m	struct:mshadow::expr::Plan
oshape_	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^            mshadow::Shape<4> oshape_;$/;"	m	struct:cxxnet::ThreadBufferIterator::Factory
out	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        inline Node<xpu>& out( void ){$/;"	f	struct:cxxnet::NeuralNet
out_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        Node<xpu> &in_, &out_;$/;"	m	struct:cxxnet::LayerPatch
out_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        Node<xpu> &out_;$/;"	m	class:cxxnet::ActivationLayer
out_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        Node<xpu> &out_;$/;"	m	class:cxxnet::ConvolutionLayer
out_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        Node<xpu> &out_;$/;"	m	class:cxxnet::DropoutLayer
out_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        Node<xpu> &out_;$/;"	m	class:cxxnet::FlattenLayer
out_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        Node<xpu> &out_;$/;"	m	class:cxxnet::FullConnectLayer
out_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        Node<xpu> &out_;$/;"	m	class:cxxnet::LRNLayer
out_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        Node<xpu> &out_;$/;"	m	class:cxxnet::PaddingLayer
out_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        Node<xpu> &out_;$/;"	m	class:cxxnet::PoolingLayer
out_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        Node<xpu> &out_;$/;"	m	class:cxxnet::SoftmaxLayer
out_	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^        Node<xpu> &in_, &out_;$/;"	m	struct:cxxnet::PairTestLayer
out_	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        DataBatch out_;$/;"	m	class:cxxnet::CIFARIterator
out_	./cxxnet/io/cxxnet_iter_img-inl.hpp	/^        DataInst out_;$/;"	m	class:cxxnet::ImageIterator
out_	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        DataBatch out_;$/;"	m	class:cxxnet::MNISTIterator
out_	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        DataBatch out_;$/;"	m	class:cxxnet::BatchAdaptIterator
out_	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        DataBatch out_;$/;"	m	class:cxxnet::ThreadBufferIterator
out_	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^        DataBatch out_;$/;"	m	class:cxxnet::SpFeatIterator
out_	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        DataInst out_;$/;"	m	class:cxxnet::ThreadImagePageIterator
out_	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        Node<xpu> &in_, &out_;$/;"	m	class:cxxnet::CaffeLayer
pack	./mshadow/example/neuralnet/util.h	/^int pack( unsigned char zz[4] ){$/;"	f
pack_col2patch	./mshadow/mshadow/tensor_expr_ext.h	/^        inline PackColToPatchXExp<Device,dstdim> pack_col2patch( const Tensor<Device,2> &mat, Shape<dstdim> imshape, index_t psize, index_t pstride ){$/;"	f	namespace:mshadow::expr
pad	./cxxnet/core/cxxnet_layer-inl.hpp	/^        int pad;$/;"	m	struct:cxxnet::LayerParam
pad	./mshadow/mshadow/tensor_expr_ext.h	/^         inline PaddingExp<SrcExp, ExpInfo<SrcExp>::kDim> pad(const Exp<SrcExp, etype> &src, index_t pad) {$/;"	f	namespace:mshadow::expr
pad_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        index_t pad_;$/;"	m	class:cxxnet::PaddingLayer
pad_	./mshadow/mshadow/tensor_container.h	/^        bool pad_;$/;"	m	class:mshadow::TensorContainer
pad_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t pad_;$/;"	m	struct:mshadow::expr::Plan
pad_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t pad_;$/;"	m	struct:mshadow::expr::PaddingExp
pad_height_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t pad_height_, pad_width_;$/;"	m	struct:mshadow::expr::Plan
pad_height_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t pad_height_;$/;"	m	struct:mshadow::expr::CroppingExp
pad_width_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t pad_height_, pad_width_;$/;"	m	struct:mshadow::expr::Plan
pad_width_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t pad_width_;$/;"	m	struct:mshadow::expr::CroppingExp
page	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^            utils::BinaryPage *page;$/;"	m	struct:cxxnet::ThreadImagePageIterator::PagePtr
page_	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        PagePtr page_;$/;"	m	class:cxxnet::ThreadImagePageIterator
param	./cxxnet/core/cxxnet_updater-inl.hpp	/^        HMCParam param;$/;"	m	class:cxxnet::SGHMCUpdater
param	./cxxnet/core/cxxnet_updater-inl.hpp	/^        UpdaterParam param;$/;"	m	class:cxxnet::SGDUpdater
param	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        Param param;$/;"	m	struct:cxxnet::NetMetaModel
param_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        LayerParam param_;$/;"	m	class:cxxnet::ConvolutionLayer
param_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        LayerParam param_;$/;"	m	class:cxxnet::DropoutLayer
param_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        LayerParam param_;$/;"	m	class:cxxnet::FullConnectLayer
param_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        LayerParam param_;$/;"	m	class:cxxnet::PoolingLayer
param_	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        caffe::LayerParameter param_;$/;"	m	class:cxxnet::CaffeLayer
parent_	./cxxnet/core/cxxnet_core.h	/^        NodeFactory<xpu> *parent_;$/;"	m	struct:cxxnet::Node
path	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^        std::string path;$/;"	m	class:cxxnet::SpFeatIterator
path_	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        std::string path_;$/;"	m	class:cxxnet::CIFARIterator
path_img	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        std::string path_img, path_label;$/;"	m	class:cxxnet::MNISTIterator
path_imgbin_	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        std::string path_imgbin_, path_imglst_;$/;"	m	class:cxxnet::ThreadImagePageIterator
path_imgdir_	./cxxnet/io/cxxnet_iter_img-inl.hpp	/^        std::string path_imgdir_, path_imglst_;$/;"	m	class:cxxnet::ImageIterator
path_imglst_	./cxxnet/io/cxxnet_iter_img-inl.hpp	/^        std::string path_imgdir_, path_imglst_;$/;"	m	class:cxxnet::ImageIterator
path_imglst_	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        std::string path_imgbin_, path_imglst_;$/;"	m	class:cxxnet::ThreadImagePageIterator
path_label	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        std::string path_img, path_label;$/;"	m	class:cxxnet::MNISTIterator
pinned_	./cxxnet/core/cxxnet_core.h	/^        bool pinned_;$/;"	m	struct:cxxnet::Node
plus	./mshadow/mshadow/tensor_base.h	/^        struct plus {$/;"	s	namespace:mshadow::op
plusto	./mshadow/mshadow/tensor_base.h	/^        struct plusto {$/;"	s	namespace:mshadow::sv
pool	./mshadow/mshadow/tensor_expr_ext.h	/^        inline PoolingExp<Reducer,SrcExp, ExpInfo<SrcExp>::kDim > pool( const Exp<SrcExp,etype> &src, Shape<2> pshape, index_t ksize, index_t kstride ) {$/;"	f	namespace:mshadow::expr
pool	./mshadow/mshadow/tensor_expr_ext.h	/^        inline PoolingExp<Reducer,SrcExp, ExpInfo<SrcExp>::kDim > pool( const Exp<SrcExp,etype> &src, index_t ksize, index_t kstride ) {$/;"	f	namespace:mshadow::expr
power	./cxxnet/core/cxxnet_op.h	/^        struct power {$/;"	s	namespace:cxxnet::op
print_hupdate	./cxxnet/core/cxxnet_updater-inl.hpp	/^            int print_hupdate;$/;"	m	struct:cxxnet::SGHMCUpdater::HMCParam
print_step	./cxxnet/cxxnet_main.cpp	/^        int print_step;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
psize_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t psize_, pstride_, i_channel_, i_height_, i_width_, o_height_, o_width_;$/;"	m	struct:mshadow::expr::Plan
psize_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t psize_, pstride_, i_channel_, i_height_, o_width_, o_height_;$/;"	m	struct:mshadow::expr::Plan
psize_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t psize_;$/;"	m	struct:mshadow::expr::PackColToPatchXExp
psize_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t psize_;$/;"	m	struct:mshadow::expr::UnpackPatchToColXExp
pstride_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t psize_, pstride_, i_channel_, i_height_, i_width_, o_height_, o_width_;$/;"	m	struct:mshadow::expr::Plan
pstride_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t psize_, pstride_, i_channel_, i_height_, o_width_, o_height_;$/;"	m	struct:mshadow::expr::Plan
pstride_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t pstride_;$/;"	m	struct:mshadow::expr::PackColToPatchXExp
pstride_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t pstride_;$/;"	m	struct:mshadow::expr::UnpackPatchToColXExp
ptop_	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        int     ptop_;$/;"	m	class:cxxnet::ThreadImagePageIterator
rand_crop_	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        int rand_crop_;$/;"	m	class:cxxnet::BatchAdaptIterator
rand_mirror_	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        int rand_mirror_;$/;"	m	class:cxxnet::BatchAdaptIterator
random_type	./cxxnet/core/cxxnet_layer-inl.hpp	/^        int random_type;$/;"	m	struct:cxxnet::LayerParam
real_self	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            inline const SubType& real_self( void ) const{$/;"	f	struct:mshadow::expr::MakeTensorExp
real_t	./cxxnet/core/cxxnet_core.h	/^    typedef mshadow::real_t  real_t;$/;"	t	namespace:cxxnet
real_t	./cxxnet/io/cxxnet_data.cpp	/^    typedef mshadow::real_t  real_t;$/;"	t	namespace:cxxnet	file:
real_t	./mshadow/mshadow/tensor_base.h	/^    typedef double real_t;$/;"	t	namespace:mshadow
real_t	./mshadow/mshadow/tensor_base.h	/^    typedef float real_t;$/;"	t	namespace:mshadow
red	./mshadow/mshadow/tensor_base.h	/^    namespace red {$/;"	n	namespace:mshadow
ref_counter	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        std::vector<int> ref_counter;$/;"	m	class:cxxnet::CXXAvgNetTrainer
refself	./mshadow/mshadow/tensor_expr.h	/^            inline SubType& refself( void ){$/;"	f	struct:mshadow::expr::Exp
relu	./cxxnet/core/cxxnet_op.h	/^        struct relu {$/;"	s	namespace:cxxnet::op
relu_grad	./cxxnet/core/cxxnet_op.h	/^        struct relu_grad {$/;"	s	namespace:cxxnet::op
repmat	./mshadow/mshadow/tensor_expr_ext.h	/^        inline Broadcast1DExp<Device,2,0> repmat( const Tensor<Device,1> &src, index_t nrow ){$/;"	f	namespace:mshadow::expr
reserved_flag	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^            int reserved_flag;$/;"	m	struct:cxxnet::NetMetaModel::Param
reset_net_type	./cxxnet/cxxnet_main.cpp	/^        int reset_net_type;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
reshape	./mshadow/mshadow/tensor_expr_ext.h	/^        inline ReshapeExp< SrcExp,dimdst, ExpInfo<SrcExp>::kDim > reshape( const Exp<SrcExp,etype> &src, Shape<dimdst> oshape ){$/;"	f	namespace:mshadow::expr
rhs	./mshadow/example/exp-template/exp_lazy.cpp	/^    const Vec& rhs;$/;"	m	struct:BinaryAddExp	file:
rhs	./mshadow/example/exp-template/exp_template.cpp	/^    const TRhs& rhs;$/;"	m	struct:BinaryAddExp	file:
rhs	./mshadow/example/exp-template/exp_template_op.cpp	/^    const TRhs& rhs;$/;"	m	struct:BinaryMapExp	file:
rhs_	./mshadow/mshadow/tensor_expr.h	/^            const TB& rhs_;$/;"	m	struct:mshadow::expr::BinaryMapExp
rhs_	./mshadow/mshadow/tensor_expr.h	/^            const TB& rhs_;$/;"	m	struct:mshadow::expr::DotExp
rhs_	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            Plan<TB> rhs_;$/;"	m	class:mshadow::expr::Plan
rhs_	./mshadow/mshadow/tensor_sse-inl.hpp	/^            SSEPlan<TB> rhs_;$/;"	m	class:mshadow::expr::SSEPlan
right	./mshadow/mshadow/tensor_base.h	/^        struct right {$/;"	s	namespace:mshadow::op
rnd	./cxxnet/core/cxxnet_updater-inl.hpp	/^        mshadow::Random<xpu> &rnd;$/;"	m	class:cxxnet::SGHMCUpdater
rnd	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        mshadow::Random<xpu>     rnd;$/;"	m	struct:cxxnet::NeuralNet
rnd_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::Random<xpu> &rnd_;$/;"	m	class:cxxnet::DropoutLayer
rnd_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::Random<xpu> &rnd_;$/;"	m	class:cxxnet::EdgeLayer
rnd_	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        mshadow::Random<xpu>& rnd_;$/;"	m	class:cxxnet::CaffeLayer
rnd_type	./cxxnet/core/cxxnet_core.h	/^    namespace rnd_type {$/;"	n	namespace:cxxnet
round	./cxxnet/core/cxxnet_updater-inl.hpp	/^        int round;$/;"	m	struct:cxxnet::UpdaterParam
round	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        int round;$/;"	m	class:cxxnet::CXXNetTrainer
round_batch_	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        int round_batch_;$/;"	m	class:cxxnet::BatchAdaptIterator
s_buf	./cxxnet/utils/cxxnet_config.h	/^            char s_name[100000],s_val[100000],s_buf[100000];$/;"	m	class:cxxnet::utils::ConfigIterator
s_name	./cxxnet/utils/cxxnet_config.h	/^            char s_name[100000],s_val[100000],s_buf[100000];$/;"	m	class:cxxnet::utils::ConfigIterator
s_val	./cxxnet/utils/cxxnet_config.h	/^            char s_name[100000],s_val[100000],s_buf[100000];$/;"	m	class:cxxnet::utils::ConfigIterator
sample_counter	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        int sample_counter;$/;"	m	class:cxxnet::CXXNetTrainer
save_period	./cxxnet/cxxnet_main.cpp	/^        int save_period;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
saveto	./mshadow/mshadow/tensor_base.h	/^        struct saveto {$/;"	s	namespace:mshadow::sv
scalar_	./mshadow/mshadow/tensor_expr.h	/^            real_t scalar_;$/;"	m	struct:mshadow::expr::ScalarExp
scalar_	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            real_t scalar_;$/;"	m	class:mshadow::expr::Plan
scalar_	./mshadow/mshadow/tensor_sse-inl.hpp	/^            real_t scalar_;$/;"	m	class:mshadow::expr::SSEPlan
scale_	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        mshadow::real_t scale_;$/;"	m	class:cxxnet::BatchAdaptIterator
scale_	./mshadow/mshadow/tensor_expr.h	/^            real_t scale_;$/;"	m	struct:mshadow::expr::DotExp
scale_	./mshadow/mshadow/tensor_expr_ext.h	/^            real_t scale_;$/;"	m	struct:mshadow::expr::ReduceTo1DExp
self	./mshadow/example/exp-template/exp_template.cpp	/^    inline const SubType& self(void) const{$/;"	f	struct:Exp
self	./mshadow/example/exp-template/exp_template_op.cpp	/^    inline const SubType& self(void) const{$/;"	f	struct:Exp
self	./mshadow/mshadow/tensor_expr.h	/^            inline const SubType& self( void ) const{$/;"	f	struct:mshadow::expr::Exp
sem	./cxxnet/utils/cxxnet_thread.h	/^            HANDLE sem;$/;"	m	class:cxxnet::utils::Semaphore
semPtr	./cxxnet/utils/cxxnet_thread.h	/^            sem_t* semPtr;$/;"	m	class:cxxnet::utils::Semaphore
sema_name	./cxxnet/utils/cxxnet_thread.h	/^            char sema_name[20];            $/;"	m	class:cxxnet::utils::Semaphore
set_pad	./mshadow/mshadow/tensor_container.h	/^        inline void set_pad( bool pad ){$/;"	f	class:mshadow::TensorContainer
shape	./mshadow/mshadow/tensor.h	/^        Shape<1> shape;$/;"	m	struct:mshadow::Tensor
shape	./mshadow/mshadow/tensor.h	/^        Shape<dimension> shape;$/;"	m	struct:mshadow::Tensor
shape0_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t shape0_, shape1_, shape2_;$/;"	m	struct:mshadow::expr::Plan
shape1_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t shape0_, shape1_, shape2_;$/;"	m	struct:mshadow::expr::Plan
shape1_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t shape1_, shape2_, shape3_, shape4_;$/;"	m	struct:mshadow::expr::Plan
shape2_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t shape0_, shape1_, shape2_;$/;"	m	struct:mshadow::expr::Plan
shape2_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t shape1_, shape2_, shape3_, shape4_;$/;"	m	struct:mshadow::expr::Plan
shape3_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t shape1_, shape2_, shape3_, shape4_;$/;"	m	struct:mshadow::expr::Plan
shape4_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t shape1_, shape2_, shape3_, shape4_;$/;"	m	struct:mshadow::expr::Plan
shape_	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        mshadow::Shape<4> shape_;$/;"	m	class:cxxnet::BatchAdaptIterator
shape_	./mshadow/mshadow/tensor.h	/^        index_t shape_[ kMaxShape ];$/;"	m	struct:mshadow::Shape
shape_	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            Shape<dim> shape_;$/;"	m	struct:mshadow::expr::MakeTensorExp
shape_colunit_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::Shape<2> shape_colunit_;$/;"	m	class:cxxnet::ConvolutionLayer
shape_dstunit_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::Shape<3> shape_dstunit_;$/;"	m	class:cxxnet::ConvolutionLayer
shape_in	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^            mshadow::Shape<3> shape_in;$/;"	m	struct:cxxnet::NetMetaModel::Param
shuffle	./mshadow/example/neuralnet/util.h	/^inline void shuffle( T *data, size_t sz ){$/;"	f
shuffle	./mshadow/example/neuralnet/util.h	/^inline void shuffle( std::vector<T> &data ){$/;"	f
shuffle_	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        int shuffle_;$/;"	m	class:cxxnet::CIFARIterator
shuffle_	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        int shuffle_;$/;"	m	class:cxxnet::MNISTIterator
shuffle_	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^        int shuffle_;$/;"	m	class:cxxnet::SpFeatIterator
sigmoid	./cxxnet/core/cxxnet_op.h	/^        struct sigmoid {$/;"	s	namespace:cxxnet::op
sigmoid_grad	./cxxnet/core/cxxnet_op.h	/^        struct sigmoid_grad {$/;"	s	namespace:cxxnet::op
silent	./cxxnet/core/cxxnet_layer-inl.hpp	/^        int silent;$/;"	m	struct:cxxnet::LayerParam
silent	./cxxnet/core/cxxnet_updater-inl.hpp	/^        int silent;$/;"	m	struct:cxxnet::UpdaterParam
silent	./cxxnet/cxxnet_main.cpp	/^        int silent;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
silent	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        int silent;$/;"	m	struct:cxxnet::NeuralNet
silent_	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        int silent_;$/;"	m	class:cxxnet::CIFARIterator
silent_	./cxxnet/io/cxxnet_iter_img-inl.hpp	/^        int silent_;$/;"	m	class:cxxnet::ImageIterator
silent_	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        int silent_;$/;"	m	class:cxxnet::MNISTIterator
silent_	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        int silent_;$/;"	m	class:cxxnet::BatchAdaptIterator
silent_	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        int silent_;$/;"	m	class:cxxnet::ThreadBufferIterator
silent_	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^        int silent_;$/;"	m	class:cxxnet::SpFeatIterator
silent_	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        int silent_;$/;"	m	class:cxxnet::ThreadImagePageIterator
slave_	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^        ILayer *master_, *slave_;$/;"	m	struct:cxxnet::PairTestLayer
slv_in_	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^        Node<xpu> slv_in_, slv_out_;$/;"	m	struct:cxxnet::PairTestLayer
slv_out_	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^        Node<xpu> slv_in_, slv_out_;$/;"	m	struct:cxxnet::PairTestLayer
softplus	./cxxnet/core/cxxnet_op.h	/^        struct softplus {$/;"	s	namespace:cxxnet::op
softplus_grad	./cxxnet/core/cxxnet_op.h	/^        struct softplus_grad {$/;"	s	namespace:cxxnet::op
sqr	./cxxnet/utils/cxxnet_metric.h	/^            inline static float sqr( float x ){$/;"	f	struct:cxxnet::utils::MetricCorrSqr
square	./cxxnet/core/cxxnet_op.h	/^        struct square {$/;"	s	namespace:cxxnet::op
src_	./mshadow/mshadow/tensor_expr.h	/^            const TA& src_;$/;"	m	struct:mshadow::expr::UnaryMapExp
src_	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            Plan<SubType> src_;  $/;"	m	struct:mshadow::expr::Plan
src_	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            Plan<TA> src_;$/;"	m	class:mshadow::expr::Plan
src_	./mshadow/mshadow/tensor_expr_ext.h	/^            Plan<SrcExp> src_;$/;"	m	struct:mshadow::expr::Plan
src_	./mshadow/mshadow/tensor_expr_ext.h	/^            const EType& src_;$/;"	m	struct:mshadow::expr::ReduceTo1DExp
src_	./mshadow/mshadow/tensor_expr_ext.h	/^            const SrcExp& src_;$/;"	m	struct:mshadow::expr::ChannelPoolingExp
src_	./mshadow/mshadow/tensor_expr_ext.h	/^            const SrcExp& src_;$/;"	m	struct:mshadow::expr::CroppingExp
src_	./mshadow/mshadow/tensor_expr_ext.h	/^            const SrcExp& src_;$/;"	m	struct:mshadow::expr::MirroringExp
src_	./mshadow/mshadow/tensor_expr_ext.h	/^            const SrcExp& src_;$/;"	m	struct:mshadow::expr::PaddingExp
src_	./mshadow/mshadow/tensor_expr_ext.h	/^            const SrcExp& src_;$/;"	m	struct:mshadow::expr::PoolingExp
src_	./mshadow/mshadow/tensor_expr_ext.h	/^            const SrcExp& src_;$/;"	m	struct:mshadow::expr::ReshapeExp
src_	./mshadow/mshadow/tensor_expr_ext.h	/^            const SrcExp& src_;$/;"	m	struct:mshadow::expr::SwapAxisExp
src_	./mshadow/mshadow/tensor_expr_ext.h	/^            const Tensor<Device,1> src_;$/;"	m	struct:mshadow::expr::Broadcast1DExp
src_	./mshadow/mshadow/tensor_sse-inl.hpp	/^            SSEPlan<TA> src_;$/;"	m	class:mshadow::expr::SSEPlan
src_height_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t src_height_, src_width_;$/;"	m	struct:mshadow::expr::Plan
src_height_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t src_height_;$/;"	m	struct:mshadow::expr::Plan
src_height_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t src_height_;$/;"	m	struct:mshadow::expr::CroppingExp
src_height_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t src_height_;$/;"	m	struct:mshadow::expr::PaddingExp
src_height_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t src_height_;$/;"	m	struct:mshadow::expr::PoolingExp
src_width_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t src_height_, src_width_;$/;"	m	struct:mshadow::expr::Plan
src_width_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t src_width_;$/;"	m	struct:mshadow::expr::Plan
src_width_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t src_width_;$/;"	m	struct:mshadow::expr::PaddingExp
src_width_	./mshadow/mshadow/tensor_expr_ext.h	/^            index_t src_width_;$/;"	m	struct:mshadow::expr::PoolingExp
sse2	./mshadow/mshadow/tensor_sse-inl.hpp	/^    namespace sse2{$/;"	n	namespace:mshadow
start_counter	./cxxnet/cxxnet_main.cpp	/^        int start_counter;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
start_epoch	./cxxnet/core/cxxnet_updater-inl.hpp	/^        long start_epoch;$/;"	m	struct:cxxnet::UpdaterParam
start_hsample	./cxxnet/core/cxxnet_updater-inl.hpp	/^            int start_hsample;$/;"	m	struct:cxxnet::SGHMCUpdater::HMCParam
start_sample	./cxxnet/core/cxxnet_updater-inl.hpp	/^            int start_sample;$/;"	m	struct:cxxnet::SGHMCUpdater::HMCParam
stride	./cxxnet/core/cxxnet_layer-inl.hpp	/^        int stride;$/;"	m	struct:cxxnet::LayerParam
stride_	./mshadow/mshadow/tensor.h	/^        index_t stride_;$/;"	m	struct:mshadow::Shape
stride_	./mshadow/mshadow/tensor_expr_engine-inl.hpp	/^            index_t stride_;$/;"	m	class:mshadow::expr::Plan
stride_	./mshadow/mshadow/tensor_sse-inl.hpp	/^            index_t stride_;$/;"	m	class:mshadow::expr::SSEPlan
sum	./mshadow/mshadow/tensor_base.h	/^        struct sum {$/;"	s	namespace:mshadow::red
sum_metric	./cxxnet/utils/cxxnet_metric.h	/^            double sum_metric;$/;"	m	struct:cxxnet::utils::MetricBase
sum_rows	./mshadow/mshadow/tensor_expr_ext.h	/^        inline ReduceTo1DExp<SrcExp, red::sum, 0 > sum_rows( const Exp<SrcExp,etype> &exp ){$/;"	f	namespace:mshadow::expr
sum_x	./cxxnet/utils/cxxnet_metric.h	/^            double sum_x, sum_y;$/;"	m	struct:cxxnet::utils::MetricCorrSqr
sum_xsqr	./cxxnet/utils/cxxnet_metric.h	/^            double sum_xsqr, sum_ysqr;$/;"	m	struct:cxxnet::utils::MetricCorrSqr
sum_xyprod	./cxxnet/utils/cxxnet_metric.h	/^            double sum_xyprod;$/;"	m	struct:cxxnet::utils::MetricCorrSqr
sum_y	./cxxnet/utils/cxxnet_metric.h	/^            double sum_x, sum_y;$/;"	m	struct:cxxnet::utils::MetricCorrSqr
sum_ysqr	./cxxnet/utils/cxxnet_metric.h	/^            double sum_xsqr, sum_ysqr;$/;"	m	struct:cxxnet::utils::MetricCorrSqr
sumall_except_dim	./mshadow/mshadow/tensor_expr_ext.h	/^        inline ReduceTo1DExp<SrcExp, red::sum, dimkeep > sumall_except_dim( const Exp<SrcExp,etype> &exp ){$/;"	f	namespace:mshadow::expr
sv	./mshadow/mshadow/tensor_base.h	/^    namespace sv {$/;"	n	namespace:mshadow
swapaxis	./mshadow/mshadow/tensor_expr_ext.h	/^        inline SwapAxisExp< SrcExp, ExpInfo<SrcExp>::kDim, a1,a2> swapaxis( const Exp<SrcExp,etype> &src ){ $/;"	f	namespace:mshadow::expr
sync_weight_	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^            int sync_weight_;$/;"	m	class:cxxnet::PairTestLayer::PairTestUpdater
sz	./cxxnet/utils/cxxnet_io_utils.h	/^                size_t sz;$/;"	m	struct:cxxnet::utils::BinaryPage::Obj
sz_	./cxxnet/utils/cxxnet_io_utils.h	/^            size_t sz_;$/;"	m	class:cxxnet::utils::StdFile
tag	./cxxnet/core/cxxnet_updater-inl.hpp	/^        std::string tag;$/;"	m	struct:cxxnet::UpdaterParam
tag	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^            std::string tag;$/;"	m	class:cxxnet::CaffeLayer::CaffeUpdater
tag_	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^            const char *tag_;$/;"	m	class:cxxnet::PairTestLayer::PairTestUpdater
tanh	./cxxnet/core/cxxnet_op.h	/^        struct tanh {$/;"	s	namespace:cxxnet::op
tanh_grad	./cxxnet/core/cxxnet_op.h	/^        struct tanh_grad {$/;"	s	namespace:cxxnet::op
task	./cxxnet/cxxnet_main.cpp	/^        std::string task;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
temp	./cxxnet/core/cxxnet_updater-inl.hpp	/^            float temp;$/;"	m	struct:cxxnet::SGHMCUpdater::HMCParam
temp	./cxxnet/core/cxxnet_updater-inl.hpp	/^        mshadow::TensorContainer<cpu,dim> temp;$/;"	m	class:cxxnet::SGHMCUpdater
temp	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        mshadow::TensorContainer<cpu,2> temp;$/;"	m	class:cxxnet::CXXNetTrainer
temp_col_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::TensorContainer<xpu,2> temp_col_;$/;"	m	class:cxxnet::ConvolutionLayer
temp_col_max	./cxxnet/core/cxxnet_layer-inl.hpp	/^        int temp_col_max;$/;"	m	struct:cxxnet::LayerParam
temp_dst_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::TensorContainer<xpu,3> temp_dst_;$/;"	m	class:cxxnet::ConvolutionLayer
test_io	./cxxnet/cxxnet_main.cpp	/^        int test_io;$/;"	m	class:cxxnet::CXXNetLearnTask	file:
test_skipread_	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        int test_skipread_;$/;"	m	class:cxxnet::BatchAdaptIterator
thread	./cxxnet/utils/cxxnet_thread.h	/^            pthread_t thread;                $/;"	m	class:cxxnet::utils::Thread
thread_handle	./cxxnet/utils/cxxnet_thread.h	/^            HANDLE    thread_handle;                $/;"	m	class:cxxnet::utils::Thread
thread_id	./cxxnet/utils/cxxnet_thread.h	/^            unsigned  thread_id;                $/;"	m	class:cxxnet::utils::Thread
threshold	./cxxnet/core/cxxnet_op.h	/^        struct threshold {$/;"	s	namespace:cxxnet::op
tmp_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::TensorContainer<xpu, 4> tmp_;$/;"	m	class:cxxnet::PoolingLayer
tmp_in	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::TensorContainer<xpu,4> tmp_in;$/;"	m	class:cxxnet::LRNLayer
tmp_index_	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        std::vector<index_t> tmp_index_;$/;"	m	class:cxxnet::CXXNetTrainer
tmp_norm	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::TensorContainer<xpu,4> tmp_norm;$/;"	m	class:cxxnet::LRNLayer
tmpw_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::TensorContainer<xpu, 2> mask_, tmpw_;$/;"	m	class:cxxnet::DropConnLayer
topn	./cxxnet/utils/cxxnet_metric.h	/^            int topn;$/;"	m	struct:cxxnet::utils::MetricRecall
total_mem_	./cxxnet/core/cxxnet_core.h	/^        size_t total_mem_;$/;"	m	class:cxxnet::NodeFactory
train_metric	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        utils::MetricSet train_metric;$/;"	m	class:cxxnet::CXXNetTrainer
type	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^            int type;$/;"	m	struct:cxxnet::NetMetaModel::LayerInfo
type	./mshadow/mshadow/tensor_expr.h	/^        namespace type{$/;"	n	namespace:mshadow::expr
uint16_t	./cxxnet/utils/cxxnet_utils.h	/^typedef unsigned short int uint16_t;$/;"	t
uint32_t	./cxxnet/utils/cxxnet_utils.h	/^typedef unsigned int  uint32_t;$/;"	t
uint8_t	./cxxnet/utils/cxxnet_utils.h	/^typedef unsigned char uint8_t;$/;"	t
umaster_	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^            IUpdater *umaster_, *uslave_;$/;"	m	class:cxxnet::PairTestLayer::PairTestUpdater
uniform	./mshadow/mshadow/tensor_random.h	/^        inline expr::ReshapeExp<Tensor<cpu,1>,dim,1> uniform( Shape<dim> shape ){$/;"	f	class:mshadow::Random
uniform	./mshadow/mshadow/tensor_random.h	/^        inline expr::ReshapeExp<Tensor<gpu,1>,dim,1> uniform(Shape<dim> shape) {$/;"	f	class:mshadow::Random
unpack_patch2col	./mshadow/mshadow/tensor_expr_ext.h	/^        inline UnpackPatchToColXExp<SrcExp, ExpInfo<SrcExp>::kDim > unpack_patch2col( const Exp<SrcExp,etype> &img, index_t psize, index_t pstride ){$/;"	f	namespace:mshadow::expr
unpool	./mshadow/mshadow/tensor_expr_ext.h	/^         inline UnPoolingExp<Reducer, Device> unpool( const Tensor<Device,4>&data_src, const Tensor<Device,4> &data_pooled,$/;"	f	namespace:mshadow::expr
update_period	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        int update_period;$/;"	m	class:cxxnet::CXXNetTrainer
updater_type	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        std::string updater_type;$/;"	m	struct:cxxnet::NetConfigHelper
updaters	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        std::vector<IUpdater*>   updaters;$/;"	m	struct:cxxnet::NeuralNet
uslave_	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^            IUpdater *umaster_, *uslave_;$/;"	m	class:cxxnet::PairTestLayer::PairTestUpdater
utils	./cxxnet/utils/cxxnet_config.h	/^    namespace utils{$/;"	n	namespace:cxxnet
utils	./cxxnet/utils/cxxnet_global_random.h	/^    namespace utils{$/;"	n	namespace:cxxnet
utils	./cxxnet/utils/cxxnet_io_utils.h	/^    namespace utils{$/;"	n	namespace:cxxnet
utils	./cxxnet/utils/cxxnet_metric.h	/^    namespace utils{$/;"	n	namespace:cxxnet
utils	./cxxnet/utils/cxxnet_thread.h	/^    namespace utils{$/;"	n	namespace:cxxnet
utils	./cxxnet/utils/cxxnet_thread_buffer.h	/^    namespace utils{$/;"	n	namespace:cxxnet
utils	./cxxnet/utils/cxxnet_utils.h	/^    namespace utils{$/;"	n	namespace:cxxnet
utils	./mshadow/mshadow/tensor_base.h	/^    namespace utils{$/;"	n	namespace:mshadow
utils	./mshadow/mshadow/tensor_io.h	/^    namespace utils{$/;"	n	namespace:mshadow
vStream_	./mshadow/mshadow/tensor_random.h	/^        VSLStreamStatePtr vStream_;$/;"	m	class:mshadow::Random
val	./cxxnet/utils/cxxnet_config.h	/^            inline const char *val( void ) const{$/;"	f	class:cxxnet::utils::ConfigIterator
vec	./cxxnet/utils/cxxnet_metric.h	/^            std::vector< std::pair<float,index_t> > vec;$/;"	m	struct:cxxnet::utils::MetricRecall
vec_in_	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        std::vector< caffe::Blob<real_t>* > vec_in_;$/;"	m	class:cxxnet::CaffeLayer
vec_out_	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        std::vector< caffe::Blob<real_t>* > vec_out_;$/;"	m	class:cxxnet::CaffeLayer
w	./cxxnet/core/cxxnet_updater-inl.hpp	/^        mshadow::Tensor<xpu,dim> &w, &dw;$/;"	m	class:cxxnet::SGDUpdater
w	./cxxnet/core/cxxnet_updater-inl.hpp	/^        mshadow::Tensor<xpu,dim> &w, &dw;$/;"	m	class:cxxnet::SGHMCUpdater
w_mst_	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^            mshadow::TensorContainer<cpu,2> w_mst_, w_slv_;$/;"	m	class:cxxnet::PairTestLayer::PairTestUpdater
w_slv_	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^            mshadow::TensorContainer<cpu,2> w_mst_, w_slv_;$/;"	m	class:cxxnet::PairTestLayer::PairTestUpdater
warning_	./cxxnet/core/cxxnet_core.h	/^        int warning_;$/;"	m	class:cxxnet::NodeFactory
wd	./cxxnet/core/cxxnet_updater-inl.hpp	/^        float wd;$/;"	m	struct:cxxnet::UpdaterParam
weight_	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^            mshadow::Tensor<xpu,1> weight_, grad_;$/;"	m	class:cxxnet::CaffeLayer::CaffeUpdater
width_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t channel_, height_, width_, hnsize_;$/;"	m	struct:mshadow::expr::Plan
width_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t width_;$/;"	m	struct:mshadow::expr::Plan
wmat_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::TensorContainer<xpu,2> wmat_;$/;"	m	class:cxxnet::FullConnectLayer
wmat_	./cxxnet/core/cxxnet_layer-inl.hpp	/^        mshadow::TensorContainer<xpu,3> wmat_;$/;"	m	class:cxxnet::ConvolutionLayer
ystride_	./mshadow/mshadow/tensor_expr_ext.h	/^            const index_t  ystride_, length_;$/;"	m	struct:mshadow::expr::Plan
~ActivationLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual ~ActivationLayer( void ){}$/;"	f	class:cxxnet::ActivationLayer
~BatchAdaptIterator	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        virtual ~BatchAdaptIterator( void ){$/;"	f	class:cxxnet::BatchAdaptIterator
~BinaryPage	./cxxnet/utils/cxxnet_io_utils.h	/^            ~BinaryPage() {$/;"	f	class:cxxnet::utils::BinaryPage
~CIFARIterator	./cxxnet/io/cxxnet_iter_cifar-inl.hpp	/^        virtual ~CIFARIterator( void ){$/;"	f	class:cxxnet::CIFARIterator
~CXXAvgNetTrainer	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        virtual ~CXXAvgNetTrainer( void ){}$/;"	f	class:cxxnet::CXXAvgNetTrainer
~CXXNetLearnTask	./cxxnet/cxxnet_main.cpp	/^        ~CXXNetLearnTask( void ){$/;"	f	class:cxxnet::CXXNetLearnTask
~CXXNetTrainer	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        virtual ~CXXNetTrainer( void ){$/;"	f	class:cxxnet::CXXNetTrainer
~CaffeLayer	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^        virtual ~CaffeLayer( void ){$/;"	f	class:cxxnet::CaffeLayer
~CaffeUpdater	./cxxnet/plugin/cxxnet_caffe_adapter-inl.hpp	/^            virtual ~CaffeUpdater( void ){$/;"	f	class:cxxnet::CaffeLayer::CaffeUpdater
~ConfigIterator	./cxxnet/utils/cxxnet_config.h	/^            ~ConfigIterator(){$/;"	f	class:cxxnet::utils::ConfigIterator
~ConvolutionLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual ~ConvolutionLayer( void ){}$/;"	f	class:cxxnet::ConvolutionLayer
~EdgeLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual ~EdgeLayer( void ){}$/;"	f	class:cxxnet::EdgeLayer
~FlattenLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual ~FlattenLayer( void ){}$/;"	f	class:cxxnet::FlattenLayer
~FullConnectLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual ~FullConnectLayer( void ){}$/;"	f	class:cxxnet::FullConnectLayer
~GzFile	./cxxnet/utils/cxxnet_io_utils.h	/^            virtual ~GzFile( void ) {$/;"	f	struct:cxxnet::utils::GzFile
~IIterator	./cxxnet/io/cxxnet_data.h	/^        virtual ~IIterator( void ){}$/;"	f	class:cxxnet::IIterator
~ILayer	./cxxnet/core/cxxnet_core.h	/^        virtual ~ILayer( void ){}$/;"	f	class:cxxnet::ILayer
~IMetric	./cxxnet/utils/cxxnet_metric.h	/^            virtual ~IMetric( void ){}$/;"	f	class:cxxnet::utils::IMetric
~INetTrainer	./cxxnet/nnet/cxxnet_nnet.h	/^        virtual ~INetTrainer( void ){}$/;"	f	class:cxxnet::INetTrainer
~IStream	./mshadow/mshadow/tensor_io.h	/^            virtual ~IStream( void ){}$/;"	f	class:mshadow::utils::IStream
~IUpdater	./cxxnet/core/cxxnet_core.h	/^        virtual ~IUpdater( void ){}$/;"	f	class:cxxnet::IUpdater
~ImageIterator	./cxxnet/io/cxxnet_iter_img-inl.hpp	/^        virtual ~ImageIterator( void ){$/;"	f	class:cxxnet::ImageIterator
~LRNLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual ~LRNLayer( void ){}$/;"	f	class:cxxnet::LRNLayer
~LayerPatch	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual ~LayerPatch( void ){ delete base_; }$/;"	f	struct:cxxnet::LayerPatch
~MNISTIterator	./cxxnet/io/cxxnet_iter_mnist-inl.hpp	/^        virtual ~MNISTIterator( void ){$/;"	f	class:cxxnet::MNISTIterator
~MetricBase	./cxxnet/utils/cxxnet_metric.h	/^            virtual ~MetricBase( void ){}$/;"	f	struct:cxxnet::utils::MetricBase
~MetricCorrSqr	./cxxnet/utils/cxxnet_metric.h	/^            virtual ~MetricCorrSqr( void ){}$/;"	f	struct:cxxnet::utils::MetricCorrSqr
~MetricError	./cxxnet/utils/cxxnet_metric.h	/^            virtual ~MetricError( void ){}$/;"	f	struct:cxxnet::utils::MetricError
~MetricRMSE	./cxxnet/utils/cxxnet_metric.h	/^            virtual ~MetricRMSE( void ){}$/;"	f	struct:cxxnet::utils::MetricRMSE
~MetricRecall	./cxxnet/utils/cxxnet_metric.h	/^            virtual ~MetricRecall( void ){}$/;"	f	struct:cxxnet::utils::MetricRecall
~MetricSet	./cxxnet/utils/cxxnet_metric.h	/^            ~MetricSet( void ){$/;"	f	struct:cxxnet::utils::MetricSet
~NeuralNet	./cxxnet/nnet/cxxnet_nnet-inl.hpp	/^        ~NeuralNet( void ){$/;"	f	struct:cxxnet::NeuralNet
~PaddingLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual ~PaddingLayer(){}$/;"	f	class:cxxnet::PaddingLayer
~PairTestLayer	./cxxnet/core/cxxnet_pairtest-inl.hpp	/^        virtual ~PairTestLayer( void ){$/;"	f	struct:cxxnet::PairTestLayer
~PoolingLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual ~PoolingLayer() {}$/;"	f	class:cxxnet::PoolingLayer
~Random	./mshadow/mshadow/tensor_random.h	/^        ~Random<cpu>() {$/;"	f	class:mshadow::Random
~Random	./mshadow/mshadow/tensor_random.h	/^        ~Random<gpu>() {$/;"	f	class:mshadow::Random
~SGDUpdater	./cxxnet/core/cxxnet_updater-inl.hpp	/^        virtual ~SGDUpdater( void ){}$/;"	f	class:cxxnet::SGDUpdater
~SGHMCUpdater	./cxxnet/core/cxxnet_updater-inl.hpp	/^        virtual ~SGHMCUpdater( void ){}$/;"	f	class:cxxnet::SGHMCUpdater
~SoftmaxLayer	./cxxnet/core/cxxnet_layer-inl.hpp	/^        virtual ~SoftmaxLayer( void ){}$/;"	f	class:cxxnet::SoftmaxLayer
~SpFeatIterator	./cxxnet/io/cxxnet_iter_spfeat-inl.hpp	/^        virtual ~SpFeatIterator( void ){$/;"	f	class:cxxnet::SpFeatIterator
~StdFile	./cxxnet/utils/cxxnet_io_utils.h	/^            virtual ~StdFile( void ){$/;"	f	class:cxxnet::utils::StdFile
~TensorContainer	./mshadow/mshadow/tensor_container.h	/^        ~TensorContainer( void ){$/;"	f	class:mshadow::TensorContainer
~ThreadBuffer	./cxxnet/utils/cxxnet_thread_buffer.h	/^            ~ThreadBuffer( void ){$/;"	f	class:cxxnet::utils::ThreadBuffer
~ThreadBufferIterator	./cxxnet/io/cxxnet_iter_proc-inl.hpp	/^        virtual ~ThreadBufferIterator(){$/;"	f	class:cxxnet::ThreadBufferIterator
~ThreadImagePageIterator	./cxxnet/io/cxxnet_iter_thread_imbin-inl.hpp	/^        virtual ~ThreadImagePageIterator( void ){$/;"	f	class:cxxnet::ThreadImagePageIterator
